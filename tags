!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABSTRACT_INPUT_PARSER_H	./tests/dpl/include/dpl/test/abstract_input_parser.h	23;"	d
ABSTRACT_INPUT_READER_H	./tests/dpl/include/dpl/test/abstract_input_reader.h	33;"	d
ABSTRACT_INPUT_TOKENIZER_H	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	23;"	d
ALL_STORE	./vcore/cert-svc/ccert.h	/^    ALL_STORE    =  VPN_STORE | WIFI_STORE | EMAIL_STORE | SYSTEM_STORE$/;"	e	enum:certImportType_t
AbstractInput	./tests/dpl/include/dpl/abstract_input.h	/^class AbstractInput$/;"	c	namespace:VcoreDPL
AbstractInputOutput	./tests/dpl/include/dpl/abstract_input_output.h	/^class AbstractInputOutput :$/;"	c	namespace:VcoreDPL
AbstractInputParser	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^template<class Result, class Token> class AbstractInputParser$/;"	c	namespace:VcoreDPL
AbstractInputReader	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    AbstractInputReader(std::shared_ptr<AbstractInput> ia,$/;"	f	class:VcoreDPL::AbstractInputReader
AbstractInputReader	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^template<class ResultT, class TokenT> class AbstractInputReader$/;"	c	namespace:VcoreDPL
AbstractInputTokenizer	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    AbstractInputTokenizer() {}$/;"	f	class:VcoreDPL::AbstractInputTokenizer
AbstractInputTokenizer	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^template<class Token> class AbstractInputTokenizer$/;"	c	namespace:VcoreDPL
AbstractLogProvider	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^class AbstractLogProvider$/;"	c	namespace:VcoreDPL::Log
AbstractLogProviderPtrList	./vcore/dpl/log/include/dpl/log/log.h	/^    typedef std::list<AbstractLogProvider *> AbstractLogProviderPtrList;$/;"	t	class:VcoreDPL::Log::LogSystem
AbstractOutput	./tests/dpl/include/dpl/abstract_output.h	/^class AbstractOutput$/;"	c	namespace:VcoreDPL
AddProvider	./vcore/dpl/log/src/log.cpp	/^void LogSystem::AddProvider(AbstractLogProvider *provider)$/;"	f	class:VcoreDPL::Log::LogSystem
AddRef	./tests/dpl/include/dpl/exception.h	/^    static void AddRef(Exception* exception)$/;"	f	class:VcoreDPL::Exception
AddRef	./vcore/dpl/core/include/dpl/exception.h	/^    static void AddRef(Exception* exception)$/;"	f	class:VcoreDPL::Exception
AddRef	./vcore/vcore/exception.h	/^    static void AddRef(Exception* exception)$/;"	f	class:ValidationCore::Exception
AddTest	./tests/dpl/src/test_results_collector.cpp	/^    void AddTest(TestResultsCollectorBase::FailStatus::Type type)$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
AltName	./vcore/vcore/Certificate.h	/^    typedef std::string AltName;$/;"	t	class:ValidationCore::Certificate
AltNameSet	./vcore/vcore/Certificate.h	/^    typedef std::set<AltName> AltNameSet;$/;"	t	class:ValidationCore::Certificate
AppendCopy	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendCopy(const void* buffer, size_t bufferSize)$/;"	f	class:VcoreDPL::BinaryQueue
AppendCopyFrom	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendCopyFrom(const BinaryQueue &other)$/;"	f	class:VcoreDPL::BinaryQueue
AppendCopyTo	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendCopyTo(BinaryQueue &other) const$/;"	f	class:VcoreDPL::BinaryQueue
AppendMoveFrom	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendMoveFrom(BinaryQueue &other)$/;"	f	class:VcoreDPL::BinaryQueue
AppendMoveTo	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendMoveTo(BinaryQueue &other)$/;"	f	class:VcoreDPL::BinaryQueue
AppendUnmanaged	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::AppendUnmanaged(const void* buffer,$/;"	f	class:VcoreDPL::BinaryQueue
ArgsList	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef std::vector<std::string> ArgsList;$/;"	t	class:VcoreDPL::Test::TestRunner
Assert	./tests/dpl/include/dpl/assert.h	35;"	d
Assert	./vcore/dpl/core/include/dpl/assert.h	35;"	d
AssertMsg	./tests/dpl/include/dpl/assert.h	42;"	d
AssertMsg	./vcore/dpl/core/include/dpl/assert.h	42;"	d
AssertProc	./tests/dpl/src/assert.cpp	/^void AssertProc(const char *condition,$/;"	f	namespace:VcoreDPL
AssertProc	./vcore/dpl/core/src/assert.cpp	/^void AssertProc(const char *condition,$/;"	f	namespace:VcoreDPL
AutoPtr	./vcore/vcore/ValidatorCommon.h	/^    AutoPtr(T *ptr) :$/;"	f	class:ValidationCore::AutoPtr
AutoPtr	./vcore/vcore/ValidatorCommon.h	/^    AutoPtr(const AutoPtr<T> &second)$/;"	f	class:ValidationCore::AutoPtr
AutoPtr	./vcore/vcore/ValidatorCommon.h	/^class AutoPtr$/;"	c	namespace:ValidationCore
BIO	./vcore/vcore/Base64.h	/^typedef bio_st BIO;$/;"	t
BIO_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<BIO,            std::function<void(BIO*)>> BIO_PTR;$/;"	t	namespace:__anon4	file:
BIO_write_and_free	./vcore/vcore/Ocsp.cpp	/^void BIO_write_and_free(BIO *bio)$/;"	f	namespace:__anon4
BOLD_GOLD_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_GOLD_BEGIN = "<font color=\\"gold\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GOLD_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_GOLD_BEGIN = "\\033[0;33m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GOLD_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GOLD_BEGIN = "<font color=\\"gold\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GOLD_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GOLD_BEGIN = "\\033[0;33m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GOLD_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_GOLD_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GOLD_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_GOLD_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GOLD_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GOLD_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GOLD_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GOLD_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GREEN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_GREEN_BEGIN = "<font color=\\"green\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GREEN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_GREEN_BEGIN = "\\033[1;32m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GREEN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GREEN_BEGIN = "<font color=\\"green\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GREEN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GREEN_BEGIN = "\\033[1;32m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GREEN_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_GREEN_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GREEN_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_GREEN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_GREEN_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GREEN_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_GREEN_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_GREEN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_RED_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_RED_BEGIN = "<font color=\\"red\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_RED_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_RED_BEGIN = "\\033[1;31m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_RED_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_RED_BEGIN = "<font color=\\"red\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_RED_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_RED_BEGIN = "\\033[1;31m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_RED_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_RED_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_RED_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_RED_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_RED_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_RED_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_RED_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_RED_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_WHITE_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_WHITE_BEGIN = "<font color=\\"white\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_WHITE_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_WHITE_BEGIN = "\\033[1;37m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_WHITE_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_WHITE_BEGIN = "<font color=\\"white\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_WHITE_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_WHITE_BEGIN = "\\033[1;37m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_WHITE_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_WHITE_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_WHITE_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_WHITE_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_WHITE_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_WHITE_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_WHITE_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_WHITE_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_YELLOW_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_YELLOW_BEGIN = "<font color=\\"yellow\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_YELLOW_BEGIN	./tests/dpl/src/colors.cpp	/^const char* BOLD_YELLOW_BEGIN = "\\033[1;33m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_YELLOW_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_YELLOW_BEGIN = "<font color=\\"yellow\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_YELLOW_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_YELLOW_BEGIN = "\\033[1;33m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_YELLOW_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_YELLOW_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_YELLOW_END	./tests/dpl/src/colors.cpp	/^const char* BOLD_YELLOW_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
BOLD_YELLOW_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_YELLOW_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
BOLD_YELLOW_END	./vcore/dpl/core/src/colors.cpp	/^const char* BOLD_YELLOW_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
Banner	./tests/dpl/src/test_runner.cpp	/^void TestRunner::Banner()$/;"	f	class:VcoreDPL::Test::TestRunner
Base64Decoder	./vcore/vcore/Base64.cpp	/^Base64Decoder::Base64Decoder() :$/;"	f	class:ValidationCore::Base64Decoder
Base64Decoder	./vcore/vcore/Base64.h	/^class Base64Decoder {$/;"	c	namespace:ValidationCore
Base64Encoder	./vcore/vcore/Base64.cpp	/^Base64Encoder::Base64Encoder() :$/;"	f	class:ValidationCore::Base64Encoder
Base64Encoder	./vcore/vcore/Base64.h	/^class Base64Encoder {$/;"	c	namespace:ValidationCore
BaseName	./tests/dpl/src/test_runner.cpp	/^std::string BaseName(std::string aPath)$/;"	f	namespace:VcoreDPL::Test::__anon34
BaseType	./tests/dpl/include/dpl/scoped_fclose.h	/^    typedef ScopedResource<Policy> BaseType;$/;"	t	class:VcoreDPL::ScopedFClose
BaseType	./tests/dpl/include/dpl/scoped_free.h	/^    typedef ScopedResource<Policy> BaseType;$/;"	t	class:VcoreDPL::ScopedFree
BinaryQueue	./tests/dpl/include/dpl/binary_queue.h	/^class BinaryQueue :$/;"	c	namespace:VcoreDPL
BinaryQueue	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::BinaryQueue() :$/;"	f	class:VcoreDPL::BinaryQueue
BinaryQueue	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::BinaryQueue(const BinaryQueue &other) :$/;"	f	class:VcoreDPL::BinaryQueue
BinaryQueueAutoPtr	./tests/dpl/include/dpl/abstract_input.h	/^typedef std::auto_ptr<BinaryQueue> BinaryQueueAutoPtr;$/;"	t	namespace:VcoreDPL
BinaryQueueAutoPtr	./tests/dpl/include/dpl/abstract_output.h	/^typedef std::auto_ptr<BinaryQueue> BinaryQueueAutoPtr;$/;"	t	namespace:VcoreDPL
BinaryQueueAutoPtr	./tests/dpl/include/dpl/binary_queue.h	/^typedef std::auto_ptr<BinaryQueue> BinaryQueueAutoPtr;$/;"	t	namespace:VcoreDPL
Bucket	./tests/dpl/include/dpl/binary_queue.h	/^    struct Bucket :$/;"	s	class:VcoreDPL::BinaryQueue
Bucket	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::Bucket::Bucket(const void* data,$/;"	f	class:VcoreDPL::BinaryQueue::Bucket
BucketList	./tests/dpl/include/dpl/binary_queue.h	/^    typedef std::list<Bucket *> BucketList;$/;"	t	class:VcoreDPL::BinaryQueue
BucketVisitor	./tests/dpl/include/dpl/binary_queue.h	/^    class BucketVisitor$/;"	c	class:VcoreDPL::BinaryQueue
BucketVisitorCall	./tests/dpl/include/dpl/binary_queue.h	/^    class BucketVisitorCall$/;"	c	class:VcoreDPL::BinaryQueue
BucketVisitorCall	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::BucketVisitorCall::BucketVisitorCall(BucketVisitor *visitor) :$/;"	f	class:VcoreDPL::BinaryQueue::BucketVisitorCall
BufferDeleter	./tests/dpl/include/dpl/binary_queue.h	/^    typedef void (*BufferDeleter)(const void *buffer, size_t bufferSize,$/;"	t	class:VcoreDPL::BinaryQueue
BufferDeleterFree	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::BufferDeleterFree(const void* data,$/;"	f	class:VcoreDPL::BinaryQueue
CERTIFICATE_NOT_FOUND	./vcore/vcore/CertificateLoader.h	/^        CERTIFICATE_NOT_FOUND,$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
CERTIFICATE_SECURITY_ERROR	./vcore/vcore/CertificateLoader.h	/^        CERTIFICATE_SECURITY_ERROR,                  \/\/!< there are some issues with certificate security (i.e. key too short)$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
CERTSVC_ALIAS_DOES_NOT_EXIST	./vcore/cert-svc/cerror.h	42;"	d
CERTSVC_BAD_ALLOC	./vcore/cert-svc/cerror.h	35;"	d
CERTSVC_CHECK_ALIAS_EXISTS	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_CHECK_ALIAS_EXISTS,$/;"	e	enum:__anon6
CERTSVC_DELETE_CERT	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_DELETE_CERT,$/;"	e	enum:__anon6
CERTSVC_DUPLICATED_ALIAS	./vcore/cert-svc/cerror.h	41;"	d
CERTSVC_EXTRACT_CERT	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_EXTRACT_CERT,$/;"	e	enum:__anon6
CERTSVC_EXTRACT_SYSTEM_CERT	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_EXTRACT_SYSTEM_CERT,$/;"	e	enum:__anon6
CERTSVC_FAIL	./vcore/cert-svc/cerror.h	34;"	d
CERTSVC_FALSE	./vcore/cert-svc/cerror.h	31;"	d
CERTSVC_FORM_DER	./vcore/cert-svc/ccert.h	/^    CERTSVC_FORM_DER,$/;"	e	enum:CertSvcCertificateForm_t
CERTSVC_FORM_DER_BASE64	./vcore/cert-svc/ccert.h	/^    CERTSVC_FORM_DER_BASE64$/;"	e	enum:CertSvcCertificateForm_t
CERTSVC_GET_CERTIFICATE_ALIAS	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_GET_CERTIFICATE_ALIAS,$/;"	e	enum:__anon6
CERTSVC_GET_CERTIFICATE_LIST	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_GET_CERTIFICATE_LIST,$/;"	e	enum:__anon6
CERTSVC_GET_CERTIFICATE_STATUS	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_GET_CERTIFICATE_STATUS,$/;"	e	enum:__anon6
CERTSVC_GET_ROOT_CERTIFICATE_LIST	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_GET_ROOT_CERTIFICATE_LIST,$/;"	e	enum:__anon6
CERTSVC_GET_USER_CERTIFICATE_LIST	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_GET_USER_CERTIFICATE_LIST,$/;"	e	enum:__anon6
CERTSVC_INSTALL_CERTIFICATE	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_INSTALL_CERTIFICATE,$/;"	e	enum:__anon6
CERTSVC_INVALID_ALGORITHM	./vcore/cert-svc/cerror.h	37;"	d
CERTSVC_INVALID_CERTIFICATE	./vcore/cert-svc/cerror.h	45;"	d
CERTSVC_INVALID_PASSWORD	./vcore/cert-svc/cerror.h	40;"	d
CERTSVC_INVALID_SIGNATURE	./vcore/cert-svc/cerror.h	38;"	d
CERTSVC_INVALID_STATUS	./vcore/cert-svc/cerror.h	44;"	d
CERTSVC_INVALID_STORE_TYPE	./vcore/cert-svc/cerror.h	43;"	d
CERTSVC_IO_ERROR	./vcore/cert-svc/cerror.h	39;"	d
CERTSVC_ISSUER	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_COMMON_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_COMMON_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_COUNTRY_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_COUNTRY_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_EMAIL_ADDRESS	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_EMAIL_ADDRESS,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_LOCALITY_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_LOCALITY_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_ORGANIZATION_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_ORGANIZATION_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_ORGANIZATION_UNIT_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_ORGANIZATION_UNIT_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_ISSUER_STATE_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_ISSUER_STATE_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_KEY	./vcore/cert-svc/ccert.h	/^    CERTSVC_KEY,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_KEY_ALGO	./vcore/cert-svc/ccert.h	/^    CERTSVC_KEY_ALGO,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_KEY_USAGE	./vcore/cert-svc/ccert.h	/^    CERTSVC_KEY_USAGE,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_LOAD_CERTIFICATES	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_LOAD_CERTIFICATES,$/;"	e	enum:__anon6
CERTSVC_LOG_LEVEL	./vcore/dpl/log/src/log.cpp	/^const char *const CERTSVC_LOG_LEVEL    = "CERTSVC_LOG_LEVEL";$/;"	m	namespace:VcoreDPL::Log::__anon16	file:
CERTSVC_LOG_PROVIDER	./vcore/dpl/log/src/log.cpp	/^const char *const CERTSVC_LOG_PROVIDER = "CERTSVC_LOG_PROVIDER";$/;"	m	namespace:VcoreDPL::Log::__anon16	file:
CERTSVC_SERIAL_NUMBER	./vcore/cert-svc/ccert.h	/^    CERTSVC_SERIAL_NUMBER,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SET_CERTIFICATE_STATUS	./vcore/vcore/cert-svc-client.h	/^    CERTSVC_SET_CERTIFICATE_STATUS,$/;"	e	enum:__anon6
CERTSVC_SIGNATURE_ALGORITHM	./vcore/cert-svc/ccert.h	/^    CERTSVC_SIGNATURE_ALGORITHM$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_COMMON_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_COMMON_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_COUNTRY_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_COUNTRY_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_EMAIL_ADDRESS	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_EMAIL_ADDRESS,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_LOCALITY_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_LOCALITY_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_ORGANIZATION_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_ORGANIZATION_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_ORGANIZATION_UNIT_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_ORGANIZATION_UNIT_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUBJECT_STATE_NAME	./vcore/cert-svc/ccert.h	/^    CERTSVC_SUBJECT_STATE_NAME,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_SUCCESS	./vcore/cert-svc/cerror.h	33;"	d
CERTSVC_TRUE	./vcore/cert-svc/cerror.h	30;"	d
CERTSVC_VERSION	./vcore/cert-svc/ccert.h	/^    CERTSVC_VERSION,$/;"	e	enum:CertSvcCertificateField_t
CERTSVC_VISIBILITY_DEVELOPER	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_DEVELOPER            = 1,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_PARTNER	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_PARTNER              = 1 << 7,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_PARTNER_MANUFACTURER	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_PARTNER_MANUFACTURER = 1 << 9,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_PARTNER_OPERATOR	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_PARTNER_OPERATOR     = 1 << 8,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_PLATFORM	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_PLATFORM             = 1 << 10$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_PUBLIC	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_PUBLIC               = 1 << 6,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_VISIBILITY_TEST	./vcore/cert-svc/ccert.h	/^	CERTSVC_VISIBILITY_TEST                 = 1 << 1,$/;"	e	enum:CertSvcVisibility_t
CERTSVC_WRONG_ARGUMENT	./vcore/cert-svc/cerror.h	36;"	d
CERT_BODY_PREFIX	./vcore/orig/cert-service-util.c	35;"	d	file:
CERT_BODY_SUFIX	./vcore/orig/cert-service-util.c	36;"	d	file:
CERT_CONTEXT	./vcore/orig/cert-service.h	/^} CERT_CONTEXT;$/;"	t	typeref:struct:__anon27
CERT_SERVICE_DEBUG_H	./vcore/orig/cert-service-debug.h	23;"	d
CERT_SERVICE_H	./vcore/orig/cert-service.h	27;"	d
CERT_SERVICE_UTIL_H	./vcore/orig/cert-service-util.h	23;"	d
CERT_SVC_CLIENT_H_	./vcore/vcore/cert-svc-client.h	24;"	d
CERT_SVC_ERR_BROKEN_CHAIN	./vcore/orig/cert-service.h	41;"	d
CERT_SVC_ERR_BUFFER_TOO_SMALL	./vcore/orig/cert-service.h	49;"	d
CERT_SVC_ERR_DUPLICATED_CERTIFICATE	./vcore/orig/cert-service.h	51;"	d
CERT_SVC_ERR_FILE_IO	./vcore/orig/cert-service.h	45;"	d
CERT_SVC_ERR_INVALID_CERTIFICATE	./vcore/orig/cert-service.h	44;"	d
CERT_SVC_ERR_INVALID_DEVICE_UNIQUE_ID	./vcore/orig/cert-service.h	58;"	d
CERT_SVC_ERR_INVALID_NO_DEVICE_PROFILE	./vcore/orig/cert-service.h	57;"	d
CERT_SVC_ERR_INVALID_OPERATION	./vcore/orig/cert-service.h	48;"	d
CERT_SVC_ERR_INVALID_PARAMETER	./vcore/orig/cert-service.h	54;"	d
CERT_SVC_ERR_INVALID_SIGNATURE	./vcore/orig/cert-service.h	43;"	d
CERT_SVC_ERR_IS_EXPIRED	./vcore/orig/cert-service.h	56;"	d
CERT_SVC_ERR_MEMORY_ALLOCATION	./vcore/orig/cert-service.h	53;"	d
CERT_SVC_ERR_NO_ERROR	./vcore/orig/cert-service.h	39;"	d
CERT_SVC_ERR_NO_MORE_CERTIFICATE	./vcore/orig/cert-service.h	50;"	d
CERT_SVC_ERR_NO_ROOT_CERT	./vcore/orig/cert-service.h	42;"	d
CERT_SVC_ERR_PERMISSION_DENIED	./vcore/orig/cert-service.h	55;"	d
CERT_SVC_ERR_SYSTEM_CALL	./vcore/orig/cert-service.h	52;"	d
CERT_SVC_ERR_UNKNOWN_ERROR	./vcore/orig/cert-service.h	40;"	d
CERT_SVC_ERR_UNSUPPORTED_HASH_TYPE	./vcore/orig/cert-service.h	46;"	d
CERT_SVC_ERR_UNSUPPORTED_KEY_TYPE	./vcore/orig/cert-service.h	47;"	d
CERT_SVC_MAX_BUFFER_SIZE	./vcore/orig/cert-service.h	36;"	d
CERT_SVC_MAX_CERT_TYPE_SIZE	./vcore/orig/cert-service.h	34;"	d
CERT_SVC_MAX_FILE_NAME_SIZE	./vcore/orig/cert-service.h	35;"	d
CERT_SVC_SERVER_MAIN_H_	./vcore/server/include/cert-server-logic.h	24;"	d
CHILD_TEST_FAIL	./tests/dpl/src/test_runner_child.cpp	/^const int CHILD_TEST_FAIL    = 0;$/;"	m	namespace:__anon29	file:
CHILD_TEST_IGNORED	./tests/dpl/src/test_runner_child.cpp	/^const int CHILD_TEST_IGNORED = 2;$/;"	m	namespace:__anon29	file:
CHILD_TEST_PASS	./tests/dpl/src/test_runner_child.cpp	/^const int CHILD_TEST_PASS    = 1;$/;"	m	namespace:__anon29	file:
COLLECTION_CHAIN_BROKEN	./vcore/vcore/CertificateCollection.h	/^        COLLECTION_CHAIN_BROKEN,$/;"	e	enum:ValidationCore::CertificateCollection::CollectionStatus
COLLECTION_SORTED	./vcore/vcore/CertificateCollection.h	/^        COLLECTION_SORTED,$/;"	e	enum:ValidationCore::CertificateCollection::CollectionStatus
COLLECTION_UNSORTED	./vcore/vcore/CertificateCollection.h	/^        COLLECTION_UNSORTED,$/;"	e	enum:ValidationCore::CertificateCollection::CollectionStatus
CONSOLE	./vcore/dpl/log/src/log.cpp	/^const char *const CONSOLE  = "CONSOLE";$/;"	m	namespace:VcoreDPL::Log::__anon16	file:
CREATE_INSTANCE	./tests/pkcs12/new_test_cases.cpp	62;"	d	file:
CSVCollector	./tests/dpl/src/test_results_collector.cpp	/^    CSVCollector() {}$/;"	f	class:VcoreDPL::Test::__anon31::CSVCollector	file:
CSVCollector	./tests/dpl/src/test_results_collector.cpp	/^class CSVCollector :$/;"	c	namespace:VcoreDPL::Test::__anon31	file:
CSVParserPolicy	./tests/dpl/include/dpl/test/value_separated_policies.h	/^struct CSVParserPolicy$/;"	s	namespace:VcoreDPL
CSVReader	./tests/dpl/include/dpl/test/value_separated_reader.h	/^typedef VSReader<CSVParserPolicy, CSVTokenizerPolicy> CSVReader;$/;"	t	namespace:VcoreDPL
CSVTokenizerPolicy	./tests/dpl/include/dpl/test/value_separated_policies.h	/^struct CSVTokenizerPolicy$/;"	s	namespace:VcoreDPL
CYAN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* CYAN_BEGIN = "<font color=\\"cyan\\">";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
CYAN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* CYAN_BEGIN = "\\033[0;36m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
CYAN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* CYAN_BEGIN = "<font color=\\"cyan\\">";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
CYAN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* CYAN_BEGIN = "\\033[0;36m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
CYAN_END	./tests/dpl/src/colors.cpp	/^const char* CYAN_END = "<\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
CYAN_END	./tests/dpl/src/colors.cpp	/^const char* CYAN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
CYAN_END	./vcore/dpl/core/src/colors.cpp	/^const char* CYAN_END = "<\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
CYAN_END	./vcore/dpl/core/src/colors.cpp	/^const char* CYAN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
Catch	./tests/dpl/include/dpl/exception.h	314;"	d
Catch	./vcore/dpl/core/include/dpl/exception.h	314;"	d
CertSigHandler	./vcore/server/src/cert-server-main.c	/^void CertSigHandler(int signo)$/;"	f
CertStatus	./vcore/cert-svc/ccert.h	/^} CertStatus;$/;"	t	typeref:enum:certStatus_t
CertStatus_to_int	./vcore/server/src/cert-server-logic.c	/^static int CertStatus_to_int(CertStatus status)$/;"	f	file:
CertStoreId	./vcore/vcore/CertStoreType.cpp	/^namespace CertStoreId {$/;"	n	namespace:ValidationCore	file:
CertStoreId	./vcore/vcore/CertStoreType.h	/^namespace CertStoreId {$/;"	n	namespace:ValidationCore
CertStoreType	./vcore/cert-svc/ccert.h	/^} CertStoreType;$/;"	t	typeref:enum:certImportType_t
CertSvcCertificate	./vcore/cert-svc/ccert.h	/^} CertSvcCertificate;$/;"	t	typeref:struct:CertSvcCertificate_t
CertSvcCertificateField	./vcore/cert-svc/ccert.h	/^} CertSvcCertificateField;$/;"	t	typeref:enum:CertSvcCertificateField_t
CertSvcCertificateField_t	./vcore/cert-svc/ccert.h	/^typedef enum CertSvcCertificateField_t {$/;"	g
CertSvcCertificateForm	./vcore/cert-svc/ccert.h	/^} CertSvcCertificateForm;$/;"	t	typeref:enum:CertSvcCertificateForm_t
CertSvcCertificateForm_t	./vcore/cert-svc/ccert.h	/^typedef enum CertSvcCertificateForm_t {$/;"	g
CertSvcCertificateList	./vcore/cert-svc/ccert.h	/^} CertSvcCertificateList;$/;"	t	typeref:struct:CertSvcCertificateList_t
CertSvcCertificateList_t	./vcore/cert-svc/ccert.h	/^typedef struct CertSvcCertificateList_t {$/;"	s
CertSvcCertificate_t	./vcore/cert-svc/ccert.h	/^typedef struct CertSvcCertificate_t {$/;"	s
CertSvcGetSocketFromSystemd	./vcore/server/src/cert-server-main.c	/^int CertSvcGetSocketFromSystemd(int* pSockfd)$/;"	f
CertSvcInstance	./vcore/cert-svc/cinstance.h	/^} CertSvcInstance;$/;"	t	typeref:struct:CertSvcInstance_t
CertSvcInstanceImpl	./vcore/vcore/api.cpp	/^    CertSvcInstanceImpl()$/;"	f	class:__anon11::CertSvcInstanceImpl
CertSvcInstanceImpl	./vcore/vcore/api.cpp	/^class CertSvcInstanceImpl {$/;"	c	namespace:__anon11	file:
CertSvcInstance_t	./vcore/cert-svc/cinstance.h	/^typedef struct CertSvcInstance_t {$/;"	s
CertSvcServerComm	./vcore/server/src/cert-server-main.c	/^void CertSvcServerComm()$/;"	f
CertSvcStoreCertList	./vcore/cert-svc/ccert.h	/^} CertSvcStoreCertList;$/;"	t	typeref:struct:CertSvcStoreCertList_t
CertSvcStoreCertList_t	./vcore/cert-svc/ccert.h	/^typedef struct CertSvcStoreCertList_t{$/;"	s
CertSvcString	./vcore/cert-svc/cstring.h	/^} CertSvcString;$/;"	t	typeref:struct:CertSvcString_t
CertSvcStringList	./vcore/cert-svc/cstring.h	/^} CertSvcStringList;$/;"	t	typeref:struct:CertSvcStringList_t
CertSvcStringList_t	./vcore/cert-svc/cstring.h	/^typedef struct CertSvcStringList_t {$/;"	s
CertSvcString_t	./vcore/cert-svc/cstring.h	/^typedef struct CertSvcString_t {$/;"	s
CertSvcVisibility	./vcore/cert-svc/ccert.h	/^} CertSvcVisibility;$/;"	t	typeref:enum:CertSvcVisibility_t
CertSvcVisibility_t	./vcore/cert-svc/ccert.h	/^typedef enum CertSvcVisibility_t {$/;"	g
CertType	./vcore/cert-svc/ccert.h	/^} CertType;$/;"	t	typeref:enum:certType_t
Certificate	./vcore/vcore/Certificate.cpp	/^Certificate::Certificate(X509 *cert)$/;"	f	class:ValidationCore::Certificate
Certificate	./vcore/vcore/Certificate.cpp	/^Certificate::Certificate(const std::string &data,$/;"	f	class:ValidationCore::Certificate
Certificate	./vcore/vcore/Certificate.h	/^class Certificate : public std::enable_shared_from_this<Certificate> {$/;"	c	namespace:ValidationCore
CertificateCollection	./vcore/vcore/CertificateCollection.cpp	/^CertificateCollection::CertificateCollection()$/;"	f	class:ValidationCore::CertificateCollection
CertificateCollection	./vcore/vcore/CertificateCollection.h	/^class CertificateCollection {$/;"	c	namespace:ValidationCore
CertificateCollectionList	./vcore/vcore/CertificateCollection.h	/^typedef std::list<CertificateCollection> CertificateCollectionList;$/;"	t	namespace:ValidationCore
CertificateConfigReader	./vcore/vcore/CertificateConfigReader.cpp	/^CertificateConfigReader::CertificateConfigReader()$/;"	f	class:ValidationCore::CertificateConfigReader
CertificateConfigReader	./vcore/vcore/CertificateConfigReader.h	/^class CertificateConfigReader {$/;"	c	namespace:ValidationCore
CertificateIdentifier	./vcore/vcore/CertificateIdentifier.h	/^    CertificateIdentifier()$/;"	f	class:ValidationCore::CertificateIdentifier
CertificateIdentifier	./vcore/vcore/CertificateIdentifier.h	/^class CertificateIdentifier : public VcoreDPL::Noncopyable {$/;"	c	namespace:ValidationCore
CertificateList	./vcore/vcore/Certificate.h	/^typedef std::list<CertificatePtr> CertificateList;$/;"	t	namespace:ValidationCore
CertificateLoader	./vcore/vcore/CertificateLoader.h	/^    CertificateLoader()$/;"	f	class:ValidationCore::CertificateLoader
CertificateLoader	./vcore/vcore/CertificateLoader.h	/^class CertificateLoader : public VcoreDPL::Noncopyable$/;"	c	namespace:ValidationCore
CertificateLoaderComparator	./vcore/vcore/CertificateLoader.h	/^    class CertificateLoaderComparator$/;"	c	class:ValidationCore::CertificateLoader
CertificateLoaderResult	./vcore/vcore/CertificateLoader.h	/^    enum CertificateLoaderResult$/;"	g	class:ValidationCore::CertificateLoader
CertificatePtr	./vcore/vcore/Certificate.h	/^typedef std::shared_ptr<Certificate> CertificatePtr;$/;"	t	namespace:ValidationCore
Clear	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::Clear()$/;"	f	class:VcoreDPL::BinaryQueue
CollectCurrentTestGroupName	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual void CollectCurrentTestGroupName(const std::string& \/*groupName*\/)$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
CollectCurrentTestGroupName	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectCurrentTestGroupName(const std::string& name)$/;"	f	class:VcoreDPL::Test::__anon31::CSVCollector	file:
CollectCurrentTestGroupName	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectCurrentTestGroupName(const std::string& name)$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
CollectCurrentTestGroupName	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectCurrentTestGroupName(const std::string& name)$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
CollectCurrentTestGroupName	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectCurrentTestGroupName(const std::string& name)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
CollectResult	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectResult(const std::string& id,$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
CollectResult	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectResult(const std::string& id,$/;"	f	class:VcoreDPL::Test::__anon31::CSVCollector	file:
CollectResult	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectResult(const std::string& id,$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
CollectResult	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectResult(const std::string& id,$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
CollectResult	./tests/dpl/src/test_results_collector.cpp	/^    virtual void CollectResult(const std::string& id,$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
CollectResult	./tests/dpl/src/test_runner.cpp	/^void TestRunner::CollectResult($/;"	f	class:VcoreDPL::Test::TestRunner
CollectTestsCasesList	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual void CollectTestsCasesList(const TestCaseIdList& \/*list*\/) {}$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
CollectionStatus	./vcore/vcore/CertificateCollection.h	/^    enum CollectionStatus$/;"	g	class:ValidationCore::CertificateCollection
CollectorConstructorFunc	./tests/dpl/include/dpl/test/test_results_collector.h	/^    typedef TestResultsCollectorBase* (*CollectorConstructorFunc)();$/;"	t	class:VcoreDPL::Test::TestResultsCollectorBase
CollectorSpecificHelp	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual std::string CollectorSpecificHelp() const$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
CollectorSpecificHelp	./tests/dpl/src/test_results_collector.cpp	/^    virtual std::string CollectorSpecificHelp() const$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
CollectorSpecificHelp	./tests/dpl/src/test_results_collector.cpp	/^    virtual std::string CollectorSpecificHelp() const$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
CollectorSpecificHelp	./tests/dpl/src/test_results_collector.cpp	/^    virtual std::string CollectorSpecificHelp() const$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
ColorMark	./vcore/dpl/log/src/old_style_log_provider.cpp	/^struct ColorMark {$/;"	s	namespace:VcoreDPL::Log::__anon19	file:
Colors	./tests/dpl/include/dpl/colors.h	/^namespace Colors {$/;"	n	namespace:VcoreDPL
Colors	./tests/dpl/src/colors.cpp	/^namespace Colors {$/;"	n	namespace:VcoreDPL	file:
Colors	./vcore/dpl/core/include/dpl/colors.h	/^namespace Colors {$/;"	n	namespace:VcoreDPL
Colors	./vcore/dpl/core/src/colors.cpp	/^namespace Colors {$/;"	n	namespace:VcoreDPL	file:
CommonException	./tests/dpl/include/dpl/exception.h	/^namespace CommonException {$/;"	n	namespace:VcoreDPL
CommonException	./vcore/dpl/core/include/dpl/exception.h	/^namespace CommonException {$/;"	n	namespace:VcoreDPL
CommonException	./vcore/vcore/exception.h	/^namespace CommonException {$/;"	n	namespace:ValidationCore
Configure	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual bool Configure()$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
Configure	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool Configure()$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
Configure	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool Configure()$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
Configure	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool Configure()$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
ConsoleCollector	./tests/dpl/src/test_results_collector.cpp	/^    ConsoleCollector() {}$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
ConsoleCollector	./tests/dpl/src/test_results_collector.cpp	/^class ConsoleCollector :$/;"	c	namespace:VcoreDPL::Test::__anon31	file:
Constructor	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* CSVCollector::Constructor()$/;"	f	class:VcoreDPL::Test::__anon31::CSVCollector
Constructor	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* ConsoleCollector::Constructor()$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector
Constructor	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* HtmlCollector::Constructor()$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector
Constructor	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* TAPCollector::Constructor()$/;"	f	class:VcoreDPL::Test::TAPCollector
Constructor	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* XmlCollector::Constructor()$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector
ConstructorsMap	./tests/dpl/include/dpl/test/test_results_collector.h	/^    typedef std::map<std::string, CollectorConstructorFunc> ConstructorsMap;$/;"	t	class:VcoreDPL::Test::TestResultsCollectorBase
Consume	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::Consume(size_t size)$/;"	f	class:VcoreDPL::BinaryQueue
ConsumeToken	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    void ConsumeToken(std::unique_ptr<VSToken> && token)$/;"	f	class:VcoreDPL::VSParser
Create	./tests/dpl/src/test_results_collector.cpp	/^TestResultsCollectorBase* TestResultsCollectorBase::Create($/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
CryptoInit	./vcore/vcore/CryptoInit.cpp	/^CryptoInit::CryptoInit()$/;"	f	class:ValidationCore::CryptoInit
CryptoInit	./vcore/vcore/CryptoInit.h	/^class CryptoInit : public VcoreDPL::Noncopyable$/;"	c	namespace:ValidationCore
CryptoInitSingleton	./vcore/vcore/CryptoInit.h	/^typedef VcoreDPL::Singleton<CryptoInit> CryptoInitSingleton;$/;"	t	namespace:ValidationCore
DEBUG_BEGIN	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *DEBUG_BEGIN = GREEN_BEGIN;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
DEBUG_END	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *DEBUG_END = GREEN_END;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
DECLARE_EXCEPTION_TYPE	./tests/dpl/include/dpl/exception.h	317;"	d
DECLARE_EXCEPTION_TYPE	./vcore/dpl/core/include/dpl/exception.h	317;"	d
DEFAULT_ERRNO_STRING_SIZE	./tests/dpl/src/errno_string.cpp	/^const size_t DEFAULT_ERRNO_STRING_SIZE = 32;$/;"	m	namespace:VcoreDPL::__anon28	file:
DEFAULT_HTML_FILE_NAME	./tests/dpl/src/test_results_collector.cpp	/^const char *DEFAULT_HTML_FILE_NAME = "index.html";$/;"	m	namespace:VcoreDPL::Test::__anon31	file:
DEFAULT_TAP_FILE_NAME	./tests/dpl/src/test_results_collector.cpp	/^const char *DEFAULT_TAP_FILE_NAME = "results.tap";$/;"	m	namespace:VcoreDPL::Test::__anon31	file:
DEFAULT_XML_FILE_NAME	./tests/dpl/src/test_results_collector.cpp	/^const char *DEFAULT_XML_FILE_NAME = "results.xml";$/;"	m	namespace:VcoreDPL::Test::__anon31	file:
DIGEST_MD5	./vcore/vcore/XmlsecAdapter.cpp	/^static const char* DIGEST_MD5 = "md5";$/;"	m	namespace:ValidationCore	file:
DISABLED	./vcore/cert-svc/ccert.h	/^    DISABLED     =  0,$/;"	e	enum:certStatus_t
DLOG	./vcore/dpl/log/src/log.cpp	/^const char *const DLOG     = "DLOG";$/;"	m	namespace:VcoreDPL::Log::__anon16	file:
DLOGLogProvider	./vcore/dpl/log/include/dpl/log/dlog_log_provider.h	/^class DLOGLogProvider : public AbstractLogProvider$/;"	c	namespace:VcoreDPL::Log
DLOGLogProvider	./vcore/dpl/log/src/dlog_log_provider.cpp	/^DLOGLogProvider::DLOGLogProvider()$/;"	f	class:VcoreDPL::Log::DLOGLogProvider
DPL_ABSTRACT_INPUT_H	./tests/dpl/include/dpl/abstract_input.h	23;"	d
DPL_ABSTRACT_INPUT_OUTPUT_H	./tests/dpl/include/dpl/abstract_input_output.h	23;"	d
DPL_ABSTRACT_LOG_PROVIDER_H	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	23;"	d
DPL_ABSTRACT_OUTPUT_H	./tests/dpl/include/dpl/abstract_output.h	23;"	d
DPL_ANONYMOUS_VARIABLE	./tests/dpl/include/dpl/preprocessor.h	30;"	d
DPL_ANONYMOUS_VARIABLE	./tests/dpl/include/dpl/preprocessor.h	32;"	d
DPL_ASSERT_H	./tests/dpl/include/dpl/assert.h	23;"	d
DPL_ASSERT_H	./vcore/dpl/core/include/dpl/assert.h	23;"	d
DPL_AVAILABILITY_H	./tests/dpl/include/dpl/availability.h	22;"	d
DPL_BINARY_QUEUE_H	./tests/dpl/include/dpl/binary_queue.h	23;"	d
DPL_COLORS_H	./tests/dpl/include/dpl/colors.h	25;"	d
DPL_COLORS_H	./vcore/dpl/core/include/dpl/colors.h	25;"	d
DPL_DEPRECATED	./tests/dpl/include/dpl/availability.h	24;"	d
DPL_DEPRECATED_WITH_MESSAGE	./tests/dpl/include/dpl/availability.h	25;"	d
DPL_DLOG_LOG_PROVIDER_H	./vcore/dpl/log/include/dpl/log/dlog_log_provider.h	23;"	d
DPL_ERRNO_STRING_H	./tests/dpl/include/dpl/errno_string.h	23;"	d
DPL_FOREACH_H	./tests/dpl/include/dpl/foreach.h	25;"	d
DPL_FOREACH_IMPL	./tests/dpl/include/dpl/foreach.h	48;"	d
DPL_LEXICAL_CAST_H	./tests/dpl/include/dpl/lexical_cast.h	23;"	d
DPL_LOG_H	./vcore/dpl/log/include/dpl/log/log.h	23;"	d
DPL_MACRO_CONCAT	./tests/dpl/include/dpl/preprocessor.h	27;"	d
DPL_MACRO_CONCAT_IMPL	./tests/dpl/include/dpl/preprocessor.h	26;"	d
DPL_MACRO_DUMMY_LOGGING	./vcore/dpl/log/include/dpl/log/log.h	126;"	d
DPL_MACRO_FOR_LOGGING	./vcore/dpl/log/include/dpl/log/log.h	132;"	d
DPL_NONCOPYABLE_H	./tests/dpl/include/dpl/noncopyable.h	23;"	d
DPL_NONCOPYABLE_H	./vcore/dpl/core/include/dpl/noncopyable.h	23;"	d
DPL_OLD_STYLE_LOG_PROVIDER_H	./vcore/dpl/log/include/dpl/log/old_style_log_provider.h	23;"	d
DPL_PREPROCESSOR_H	./tests/dpl/include/dpl/preprocessor.h	24;"	d
DPL_SCOPED_FCLOSE_H	./tests/dpl/include/dpl/scoped_fclose.h	23;"	d
DPL_SCOPED_FREE_H	./tests/dpl/include/dpl/scoped_free.h	24;"	d
DPL_SCOPED_RESOURCE_H	./tests/dpl/include/dpl/scoped_resource.h	23;"	d
DPL_SINGLETON_H	./tests/dpl/include/dpl/singleton.h	23;"	d
DPL_SINGLETON_H	./vcore/dpl/core/include/dpl/singleton.h	23;"	d
DPL_SINGLETON_IMPL_H	./tests/dpl/include/dpl/singleton_impl.h	23;"	d
DPL_SINGLETON_IMPL_H	./vcore/dpl/core/include/dpl/singleton_impl.h	23;"	d
DPL_TEST_RESULTS_COLLECTOR_H	./tests/dpl/include/dpl/test/test_results_collector.h	24;"	d
DPL_TEST_RUNNER_CHILD_H	./tests/dpl/include/dpl/test/test_runner_child.h	23;"	d
DPL_TEST_RUNNER_H	./tests/dpl/include/dpl/test/test_runner.h	24;"	d
DPL_TEST_RUNNER_MULTIPROCESS_H	./tests/dpl/include/dpl/test/test_runner_multiprocess.h	23;"	d
DPL_UNUSED	./tests/dpl/include/dpl/availability.h	27;"	d
DPL_UNUSED_PARAM	./tests/dpl/include/dpl/availability.h	28;"	d
Debug	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^        Debug,$/;"	m	class:VcoreDPL::Log::AbstractLogProvider::LogLevel
DeleteBucket	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::DeleteBucket(BinaryQueue::Bucket *bucket)$/;"	f	class:VcoreDPL::BinaryQueue
Destroy	./tests/dpl/include/dpl/scoped_fclose.h	/^    static void Destroy(Type file)$/;"	f	struct:VcoreDPL::ScopedFClosePolicy
Destroy	./tests/dpl/include/dpl/scoped_free.h	/^    static void Destroy(Type ptr)$/;"	f	struct:VcoreDPL::ScopedFreePolicy
DisplayKnownException	./tests/dpl/include/dpl/exception.h	/^    static void DisplayKnownException(const Exception& e)$/;"	f	class:VcoreDPL::Exception
DisplayKnownException	./vcore/dpl/core/include/dpl/exception.h	/^    static void DisplayKnownException(const Exception& e)$/;"	f	class:VcoreDPL::Exception
DisplayKnownException	./vcore/vcore/exception.h	/^    static void DisplayKnownException(const Exception& e)$/;"	f	class:ValidationCore::Exception
DisplayUnknownException	./tests/dpl/include/dpl/exception.h	/^    static void DisplayUnknownException()$/;"	f	class:VcoreDPL::Exception
DisplayUnknownException	./vcore/dpl/core/include/dpl/exception.h	/^    static void DisplayUnknownException()$/;"	f	class:VcoreDPL::Exception
DisplayUnknownException	./vcore/vcore/exception.h	/^    static void DisplayUnknownException()$/;"	f	class:ValidationCore::Exception
Dump	./tests/dpl/include/dpl/exception.h	/^    void Dump() const$/;"	f	class:VcoreDPL::Exception
Dump	./vcore/dpl/core/include/dpl/exception.h	/^    void Dump() const$/;"	f	class:VcoreDPL::Exception
Dump	./vcore/vcore/exception.h	/^    void Dump() const$/;"	f	class:ValidationCore::Exception
DumpToString	./tests/dpl/include/dpl/exception.h	/^    std::string DumpToString() const$/;"	f	class:VcoreDPL::Exception
DumpToString	./vcore/dpl/core/include/dpl/exception.h	/^    std::string DumpToString() const$/;"	f	class:VcoreDPL::Exception
DumpToString	./vcore/vcore/exception.h	/^    std::string DumpToString() const$/;"	f	class:ValidationCore::Exception
EAP_TLS_CA_CERT_PATH	./tests/pkcs12/new_test_cases.cpp	941;"	d	file:
EAP_TLS_PATH	./tests/pkcs12/new_test_cases.cpp	940;"	d	file:
EAP_TLS_PRIVATEKEY_PATH	./tests/pkcs12/new_test_cases.cpp	942;"	d	file:
EAP_TLS_USER_CERT_PATH	./tests/pkcs12/new_test_cases.cpp	939;"	d	file:
EMAIL_STORE	./vcore/cert-svc/ccert.h	/^    EMAIL_STORE  =  1 << 2,$/;"	e	enum:certImportType_t
ENABLED	./vcore/cert-svc/ccert.h	/^    ENABLED      =  1$/;"	e	enum:certStatus_t
END_CERT	./vcore/vcore/api.cpp	61;"	d	file:
END_CERT	./vcore/vcore/pkcs12.cpp	47;"	d	file:
END_KEY	./vcore/vcore/pkcs12.cpp	51;"	d	file:
END_TRUSTED	./vcore/vcore/api.cpp	63;"	d	file:
END_TRUSTED	./vcore/vcore/pkcs12.cpp	49;"	d	file:
ERROR	./tests/dpl/include/dpl/test/test_runner_child.h	/^        ERROR$/;"	e	enum:VcoreDPL::Test::PipeWrapper::Status
ERROR_BEGIN	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *ERROR_BEGIN = RED_BEGIN;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
ERROR_DECODING_URL	./vcore/vcore/ReferenceValidator.h	/^        ERROR_DECODING_URL$/;"	e	enum:ValidationCore::ReferenceValidator::Result
ERROR_END	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *ERROR_END = RED_END;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
ERROR_INVALID_SIGNATURE	./vcore/vcore/XmlsecAdapter.h	/^        ERROR_INVALID_SIGNATURE$/;"	e	enum:ValidationCore::XmlSec::Result
ERROR_ISTREAM	./vcore/vcore/SignatureFinder.h	/^        ERROR_ISTREAM$/;"	e	enum:ValidationCore::SignatureFinder::Result
ERROR_OPENING_DIR	./vcore/vcore/ReferenceValidator.h	/^        ERROR_OPENING_DIR,$/;"	e	enum:ValidationCore::ReferenceValidator::Result
ERROR_OPENING_DIR	./vcore/vcore/SignatureFinder.h	/^        ERROR_OPENING_DIR,$/;"	e	enum:ValidationCore::SignatureFinder::Result
ERROR_READING_DIR	./vcore/vcore/ReferenceValidator.h	/^        ERROR_READING_DIR,$/;"	e	enum:ValidationCore::ReferenceValidator::Result
ERROR_READING_DIR	./vcore/vcore/SignatureFinder.h	/^        ERROR_READING_DIR,$/;"	e	enum:ValidationCore::SignatureFinder::Result
ERROR_REFERENCE_NOT_FOUND	./vcore/vcore/ReferenceValidator.h	/^        ERROR_REFERENCE_NOT_FOUND,$/;"	e	enum:ValidationCore::ReferenceValidator::Result
ERROR_UNSUPPORTED_FILE_TYPE	./vcore/vcore/ReferenceValidator.h	/^        ERROR_UNSUPPORTED_FILE_TYPE,$/;"	e	enum:ValidationCore::ReferenceValidator::Result
Empty	./tests/dpl/src/binary_queue.cpp	/^bool BinaryQueue::Empty() const$/;"	f	class:VcoreDPL::BinaryQueue
Error	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^        Error,$/;"	m	class:VcoreDPL::Log::AbstractLogProvider::LogLevel
EscapeSpecialCharacters	./tests/dpl/src/test_results_collector.cpp	/^    std::string EscapeSpecialCharacters(std::string s)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Exception	./tests/dpl/include/dpl/abstract_input.h	/^    class Exception$/;"	c	class:VcoreDPL::AbstractInput
Exception	./tests/dpl/include/dpl/abstract_output.h	/^    class Exception$/;"	c	class:VcoreDPL::AbstractOutput
Exception	./tests/dpl/include/dpl/binary_queue.h	/^    class Exception$/;"	c	class:VcoreDPL::BinaryQueue
Exception	./tests/dpl/include/dpl/exception.h	/^    Exception(const Exception &other)$/;"	f	class:VcoreDPL::Exception
Exception	./tests/dpl/include/dpl/exception.h	/^    Exception(const char *path,$/;"	f	class:VcoreDPL::Exception
Exception	./tests/dpl/include/dpl/exception.h	/^class Exception {$/;"	c	namespace:VcoreDPL
Exception	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^    class Exception$/;"	c	class:VcoreDPL::AbstractInputParser
Exception	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    class Exception$/;"	c	class:VcoreDPL::AbstractInputReader
Exception	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    class Exception$/;"	c	class:VcoreDPL::AbstractInputTokenizer
Exception	./vcore/dpl/core/include/dpl/exception.h	/^    Exception(const Exception &other)$/;"	f	class:VcoreDPL::Exception
Exception	./vcore/dpl/core/include/dpl/exception.h	/^    Exception(const char *path,$/;"	f	class:VcoreDPL::Exception
Exception	./vcore/dpl/core/include/dpl/exception.h	/^class Exception {$/;"	c	namespace:VcoreDPL
Exception	./vcore/vcore/Base64.h	/^    class Exception {$/;"	c	class:ValidationCore::Base64Decoder
Exception	./vcore/vcore/Base64.h	/^    class Exception {$/;"	c	class:ValidationCore::Base64Encoder
Exception	./vcore/vcore/Certificate.h	/^    class Exception {$/;"	c	class:ValidationCore::Certificate
Exception	./vcore/vcore/CertificateCollection.h	/^    class Exception {$/;"	c	class:ValidationCore::CertificateCollection
Exception	./vcore/vcore/CertificateConfigReader.h	/^    class Exception {$/;"	c	class:ValidationCore::CertificateConfigReader
Exception	./vcore/vcore/Ocsp.h	/^	class Exception {$/;"	c	class:ValidationCore::Ocsp
Exception	./vcore/vcore/SaxReader.h	/^    class Exception {$/;"	c	class:ValidationCore::SaxReader
Exception	./vcore/vcore/SignatureReader.h	/^    class Exception {$/;"	c	class:ValidationCore::SignatureReader
Exception	./vcore/vcore/XmlsecAdapter.h	/^    class Exception$/;"	c	class:ValidationCore::XmlSec
Exception	./vcore/vcore/exception.h	/^    Exception(const Exception &other)$/;"	f	class:ValidationCore::Exception
Exception	./vcore/vcore/exception.h	/^    Exception(const char *path,$/;"	f	class:ValidationCore::Exception
Exception	./vcore/vcore/exception.h	/^class Exception {$/;"	c	namespace:ValidationCore
ExecTestRunner	./tests/dpl/src/test_runner.cpp	/^int TestRunner::ExecTestRunner(const ArgsList& value)$/;"	f	class:VcoreDPL::Test::TestRunner
ExecTestRunner	./tests/dpl/src/test_runner.cpp	/^int TestRunner::ExecTestRunner(int argc, char *argv[])$/;"	f	class:VcoreDPL::Test::TestRunner
FAILED	./tests/dpl/include/dpl/test/test_results_collector.h	/^            FAILED,$/;"	e	enum:VcoreDPL::Test::TestResultsCollectorBase::FailStatus::Type
FAILED	./tests/dpl/include/dpl/test/test_runner.h	/^    enum Status { FAILED, IGNORED, PASS };$/;"	e	enum:VcoreDPL::Test::TestRunner::Status
FIELD_ISSUER	./vcore/vcore/Certificate.h	/^        FIELD_ISSUER,$/;"	e	enum:ValidationCore::Certificate::FieldType
FIELD_SUBJECT	./vcore/vcore/Certificate.h	/^        FIELD_SUBJECT$/;"	e	enum:ValidationCore::Certificate::FieldType
FINGERPRINT_MD5	./vcore/vcore/Certificate.h	/^        FINGERPRINT_MD5,$/;"	e	enum:ValidationCore::Certificate::FingerprintType
FINGERPRINT_SHA1	./vcore/vcore/Certificate.h	/^        FINGERPRINT_SHA1$/;"	e	enum:ValidationCore::Certificate::FingerprintType
FOREACH	./tests/dpl/include/dpl/foreach.h	55;"	d
FORM_BASE64	./vcore/vcore/Certificate.h	/^        FORM_BASE64$/;"	e	enum:ValidationCore::Certificate::FormType
FORM_DER	./vcore/vcore/Certificate.h	/^        FORM_DER,$/;"	e	enum:ValidationCore::Certificate::FormType
FREE_DELETER_H	./tests/dpl/include/dpl/free_deleter.h	23;"	d
FREE_INSTANCE	./tests/pkcs12/new_test_cases.cpp	64;"	d	file:
FailStatus	./tests/dpl/include/dpl/test/test_results_collector.h	/^    struct FailStatus$/;"	s	class:VcoreDPL::Test::TestResultsCollectorBase
FieldType	./vcore/vcore/Certificate.h	/^    enum FieldType$/;"	g	class:ValidationCore::Certificate
FileWrapper	./vcore/vcore/XmlsecAdapter.cpp	/^    FileWrapper(void *argFile, bool argReleased)$/;"	f	struct:__anon3::FileWrapper
FileWrapper	./vcore/vcore/XmlsecAdapter.cpp	/^struct FileWrapper {$/;"	s	namespace:__anon3	file:
FingerPrintMap	./vcore/vcore/CertificateIdentifier.h	/^	typedef std::map<Certificate::Fingerprint, CertStoreId::Set> FingerPrintMap;$/;"	t	class:ValidationCore::CertificateIdentifier
Fingerprint	./vcore/vcore/Certificate.h	/^    typedef std::vector<unsigned char> Fingerprint;$/;"	t	class:ValidationCore::Certificate
FingerprintToColonHex	./vcore/vcore/Certificate.cpp	/^std::string Certificate::FingerprintToColonHex($/;"	f	class:ValidationCore::Certificate
FingerprintType	./vcore/vcore/Certificate.h	/^    enum FingerprintType$/;"	g	class:ValidationCore::Certificate
Finish	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual void Finish() { }$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
Finish	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Finish()$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
Finish	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Finish()$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
Finish	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Finish()$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
Finish	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Finish()$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Flatten	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::Flatten(void *buffer, size_t bufferSize) const$/;"	f	class:VcoreDPL::BinaryQueue
FlattenConsume	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::FlattenConsume(void *buffer, size_t bufferSize)$/;"	f	class:VcoreDPL::BinaryQueue
FlushOutput	./tests/dpl/src/test_results_collector.cpp	/^    void FlushOutput()$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
FormType	./vcore/vcore/Certificate.h	/^    enum FormType$/;"	g	class:ValidationCore::Certificate
FunctionMap	./vcore/vcore/ParserSchema.h	/^    typedef std::map<TagDescription, FunctionPtr> FunctionMap;$/;"	t	class:ValidationCore::ParserSchema
FunctionPtr	./vcore/vcore/ParserSchema.h	/^    typedef void (ParserType::*FunctionPtr)(DataType &data);$/;"	t	class:ValidationCore::ParserSchema
GOOD	./vcore/vcore/Ocsp.h	/^		GOOD,$/;"	e	enum:ValidationCore::Ocsp::Result
GREEN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* GREEN_BEGIN = "<font color=\\"green\\">";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
GREEN_BEGIN	./tests/dpl/src/colors.cpp	/^const char* GREEN_BEGIN = "\\033[0;32m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
GREEN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* GREEN_BEGIN = "<font color=\\"green\\">";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
GREEN_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* GREEN_BEGIN = "\\033[0;32m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
GREEN_END	./tests/dpl/src/colors.cpp	/^const char* GREEN_END = "<\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
GREEN_END	./tests/dpl/src/colors.cpp	/^const char* GREEN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
GREEN_END	./vcore/dpl/core/src/colors.cpp	/^const char* GREEN_END = "<\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
GREEN_END	./vcore/dpl/core/src/colors.cpp	/^const char* GREEN_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
GREEN_RESULT_OK	./tests/dpl/src/test_results_collector.cpp	40;"	d	file:
GREEN_RESULT_OK	./tests/dpl/src/test_results_collector.cpp	984;"	d	file:
Get	./tests/dpl/include/dpl/scoped_resource.h	/^    ValueType Get() const$/;"	f	class:VcoreDPL::ScopedResource
GetAllowChildLogs	./tests/dpl/src/test_runner.cpp	/^bool TestRunner::GetAllowChildLogs()$/;"	f	class:VcoreDPL::Test::TestRunner
GetClassName	./tests/dpl/include/dpl/exception.h	/^    std::string GetClassName() const$/;"	f	class:VcoreDPL::Exception
GetClassName	./vcore/dpl/core/include/dpl/exception.h	/^    std::string GetClassName() const$/;"	f	class:VcoreDPL::Exception
GetClassName	./vcore/vcore/exception.h	/^    std::string GetClassName() const$/;"	f	class:ValidationCore::Exception
GetCollectorsNames	./tests/dpl/src/test_results_collector.cpp	/^std::vector<std::string> TestResultsCollectorBase::GetCollectorsNames()$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
GetCurrentGroupPosition	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetCurrentGroupPosition() const$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
GetErrnoString	./tests/dpl/src/errno_string.cpp	/^std::string GetErrnoString(int error)$/;"	f	namespace:VcoreDPL
GetFailed	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetFailed() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GetFormattedTime	./vcore/dpl/log/src/old_style_log_provider.cpp	/^std::string GetFormattedTime()$/;"	f	namespace:VcoreDPL::Log::__anon19
GetFunction	./tests/dpl/include/dpl/exception.h	/^    std::string GetFunction() const$/;"	f	class:VcoreDPL::Exception
GetFunction	./vcore/dpl/core/include/dpl/exception.h	/^    std::string GetFunction() const$/;"	f	class:VcoreDPL::Exception
GetFunction	./vcore/vcore/exception.h	/^    std::string GetFunction() const$/;"	f	class:ValidationCore::Exception
GetIgnored	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetIgnored() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GetLine	./tests/dpl/include/dpl/exception.h	/^    int GetLine() const$/;"	f	class:VcoreDPL::Exception
GetLine	./vcore/dpl/core/include/dpl/exception.h	/^    int GetLine() const$/;"	f	class:VcoreDPL::Exception
GetLine	./vcore/vcore/exception.h	/^    int GetLine() const$/;"	f	class:ValidationCore::Exception
GetLogLevel	./vcore/dpl/log/include/dpl/log/log.h	/^    AbstractLogProvider::LogLevel GetLogLevel() const { return m_level; }$/;"	f	class:VcoreDPL::Log::LogSystem
GetMessage	./tests/dpl/include/dpl/exception.h	/^    std::string GetMessage() const$/;"	f	class:VcoreDPL::Exception
GetMessage	./tests/dpl/include/dpl/test/test_runner.h	/^        std::string GetMessage() const$/;"	f	class:VcoreDPL::Test::TestRunner::Ignored
GetMessage	./tests/dpl/include/dpl/test/test_runner.h	/^        std::string GetMessage() const$/;"	f	class:VcoreDPL::Test::TestRunner::TestFailed
GetMessage	./vcore/dpl/core/include/dpl/exception.h	/^    std::string GetMessage() const$/;"	f	class:VcoreDPL::Exception
GetMessage	./vcore/vcore/exception.h	/^    std::string GetMessage() const$/;"	f	class:ValidationCore::Exception
GetNextToken	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    std::unique_ptr<VSToken> GetNextToken()$/;"	f	class:VcoreDPL::VSTokenizer
GetPassed	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetPassed() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GetPassedOrIgnoredPercend	./tests/dpl/src/test_results_collector.cpp	/^    float GetPassedOrIgnoredPercend() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GetPath	./tests/dpl/include/dpl/exception.h	/^    std::string GetPath() const$/;"	f	class:VcoreDPL::Exception
GetPath	./vcore/dpl/core/include/dpl/exception.h	/^    std::string GetPath() const$/;"	f	class:VcoreDPL::Exception
GetPath	./vcore/vcore/exception.h	/^    std::string GetPath() const$/;"	f	class:ValidationCore::Exception
GetReason	./tests/dpl/include/dpl/exception.h	/^    Exception *GetReason() const$/;"	f	class:VcoreDPL::Exception
GetReason	./vcore/dpl/core/include/dpl/exception.h	/^    Exception *GetReason() const$/;"	f	class:VcoreDPL::Exception
GetReason	./vcore/vcore/exception.h	/^    Exception *GetReason() const$/;"	f	class:ValidationCore::Exception
GetResult	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    VSResultPtr GetResult() const$/;"	f	class:VcoreDPL::VSParser
GetSeperators	./tests/dpl/src/value_separated_policies.cpp	/^std::string CSVTokenizerPolicy::GetSeperators()$/;"	f	class:VcoreDPL::CSVTokenizerPolicy
GetSuccesed	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetSuccesed() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GetTotal	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t GetTotal() const$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
GroupFinish	./tests/dpl/src/test_results_collector.cpp	/^    void GroupFinish(const std::size_t groupPosition)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
GroupStart	./tests/dpl/src/test_results_collector.cpp	/^    void GroupStart(const std::size_t pos, const std::string& name)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Html	./tests/dpl/include/dpl/colors.h	/^namespace Html {$/;"	n	namespace:VcoreDPL::Colors
Html	./tests/dpl/src/colors.cpp	/^namespace Html {$/;"	n	namespace:VcoreDPL::Colors	file:
Html	./vcore/dpl/core/include/dpl/colors.h	/^namespace Html {$/;"	n	namespace:VcoreDPL::Colors
Html	./vcore/dpl/core/src/colors.cpp	/^namespace Html {$/;"	n	namespace:VcoreDPL::Colors	file:
HtmlCollector	./tests/dpl/src/test_results_collector.cpp	/^    HtmlCollector() : m_filename(DEFAULT_HTML_FILE_NAME) {}$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
HtmlCollector	./tests/dpl/src/test_results_collector.cpp	/^class HtmlCollector :$/;"	c	namespace:VcoreDPL::Test::__anon31	file:
ICERT_BODY_PREFIX	./vcore/orig/cert-service-util.c	37;"	d	file:
ICERT_BODY_SUFIX	./vcore/orig/cert-service-util.c	38;"	d	file:
IGNORED	./tests/dpl/include/dpl/test/test_results_collector.h	/^            IGNORED,$/;"	e	enum:VcoreDPL::Test::TestResultsCollectorBase::FailStatus::Type
IGNORED	./tests/dpl/include/dpl/test/test_runner.h	/^    enum Status { FAILED, IGNORED, PASS };$/;"	e	enum:VcoreDPL::Test::TestRunner::Status
IMEIList	./vcore/vcore/SignatureData.h	/^    typedef std::list<std::string> IMEIList;$/;"	t	class:ValidationCore::SignatureData
IMPLEMENT_SINGLETON	./tests/dpl/include/dpl/singleton_impl.h	51;"	d
IMPLEMENT_SINGLETON	./vcore/dpl/core/include/dpl/singleton_impl.h	51;"	d
INFO_BEGIN	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *INFO_BEGIN = CYAN_BEGIN;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
INFO_END	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *INFO_END = CYAN_END;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
INTERNAL	./tests/dpl/include/dpl/test/test_results_collector.h	/^            INTERNAL$/;"	e	enum:VcoreDPL::Test::TestResultsCollectorBase::FailStatus::Type
INTERNAL_LOG	./tests/dpl/src/assert.cpp	37;"	d	file:
INTERNAL_LOG	./vcore/dpl/core/src/assert.cpp	36;"	d	file:
INVALID_DATA	./vcore/cert-svc/ccert.h	/^    INVALID_DATA     = 1 << 5$/;"	e	enum:certType_t
Ignored	./tests/dpl/include/dpl/test/test_runner.h	/^        Ignored()$/;"	f	class:VcoreDPL::Test::TestRunner::Ignored
Ignored	./tests/dpl/include/dpl/test/test_runner.h	/^        Ignored(const std::string &message) :$/;"	f	class:VcoreDPL::Test::TestRunner::Ignored
Ignored	./tests/dpl/include/dpl/test/test_runner.h	/^    class Ignored$/;"	c	class:VcoreDPL::Test::TestRunner
Impl	./vcore/vcore/ReferenceValidator.cpp	/^    Impl(const std::string &dirpath)$/;"	f	class:ValidationCore::ReferenceValidator::Impl
Impl	./vcore/vcore/ReferenceValidator.cpp	/^class ReferenceValidator::Impl$/;"	c	class:ValidationCore::ReferenceValidator	file:
Impl	./vcore/vcore/SignatureFinder.cpp	/^    Impl(const std::string& dir)$/;"	f	class:ValidationCore::SignatureFinder::Impl
Impl	./vcore/vcore/SignatureFinder.cpp	/^class SignatureFinder::Impl {$/;"	c	class:ValidationCore::SignatureFinder	file:
Info	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^        Info,$/;"	m	class:VcoreDPL::Log::AbstractLogProvider::LogLevel
InitGroup	./tests/dpl/src/test_runner.cpp	/^void TestRunner::InitGroup(const char* name)$/;"	f	class:VcoreDPL::Test::TestRunner
Instance	./tests/dpl/include/dpl/singleton_impl.h	/^Class &Singleton<Class>::Instance()$/;"	f	class:VcoreDPL::Singleton
Instance	./vcore/dpl/core/include/dpl/singleton_impl.h	/^Class &Singleton<Class>::Instance()$/;"	f	class:VcoreDPL::Singleton
InternalInstance	./tests/dpl/include/dpl/singleton_impl.h	/^Singleton<Class>& Singleton<Class>::InternalInstance()$/;"	f	class:VcoreDPL::Singleton
InternalInstance	./vcore/dpl/core/include/dpl/singleton_impl.h	/^Singleton<Class>& Singleton<Class>::InternalInstance()$/;"	f	class:VcoreDPL::Singleton
InvalidArgs	./tests/dpl/src/test_runner.cpp	/^void TestRunner::InvalidArgs(const std::string& message)$/;"	f	class:VcoreDPL::Test::TestRunner
IsStateValid	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    bool IsStateValid()$/;"	f	class:VcoreDPL::VSParser
IsStateValid	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    bool IsStateValid()$/;"	f	class:VcoreDPL::VSTokenizer
JOURNALD	./vcore/dpl/log/src/log.cpp	/^const char *const JOURNALD = "JOURNALD";$/;"	m	namespace:VcoreDPL::Log::__anon16	file:
JournalLogProvider	./vcore/dpl/log/include/dpl/log/journal_log_provider.h	/^class JournalLogProvider: public AbstractLogProvider$/;"	c	namespace:VcoreDPL::Log
JournalLogProvider	./vcore/dpl/log/src/journal_log_provider.cpp	/^JournalLogProvider::JournalLogProvider()$/;"	f	class:VcoreDPL::Log::JournalLogProvider
KnownExceptionToString	./tests/dpl/include/dpl/exception.h	/^    static std::string KnownExceptionToString(const Exception &e)$/;"	f	class:VcoreDPL::Exception
KnownExceptionToString	./vcore/dpl/core/include/dpl/exception.h	/^    static std::string KnownExceptionToString(const Exception &e)$/;"	f	class:VcoreDPL::Exception
KnownExceptionToString	./vcore/vcore/exception.h	/^    static std::string KnownExceptionToString(const Exception &e)$/;"	f	class:ValidationCore::Exception
LOG_TAG	./vcore/orig/cert-service-debug.h	30;"	d
LOG_TAG	./vcore/orig/cert-service-debug.h	32;"	d
LocateSourceFileName	./vcore/dpl/log/src/abstract_log_provider.cpp	/^const char *AbstractLogProvider::LocateSourceFileName(const char *filename)$/;"	f	class:VcoreDPL::Log::AbstractLogProvider
Log	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^namespace Log {$/;"	n	namespace:VcoreDPL
Log	./vcore/dpl/log/include/dpl/log/dlog_log_provider.h	/^namespace Log {$/;"	n	namespace:VcoreDPL
Log	./vcore/dpl/log/include/dpl/log/journal_log_provider.h	/^namespace Log {$/;"	n	namespace:VcoreDPL
Log	./vcore/dpl/log/include/dpl/log/log.h	/^namespace Log {$/;"	n	namespace:VcoreDPL
Log	./vcore/dpl/log/include/dpl/log/old_style_log_provider.h	/^namespace Log {$/;"	n	namespace:VcoreDPL
Log	./vcore/dpl/log/src/abstract_log_provider.cpp	/^namespace Log {$/;"	n	namespace:VcoreDPL	file:
Log	./vcore/dpl/log/src/dlog_log_provider.cpp	/^namespace Log {$/;"	n	namespace:VcoreDPL	file:
Log	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void DLOGLogProvider::Log(AbstractLogProvider::LogLevel level,$/;"	f	class:VcoreDPL::Log::DLOGLogProvider
Log	./vcore/dpl/log/src/journal_log_provider.cpp	/^namespace Log {$/;"	n	namespace:VcoreDPL	file:
Log	./vcore/dpl/log/src/journal_log_provider.cpp	/^void JournalLogProvider::Log(AbstractLogProvider::LogLevel level,$/;"	f	class:VcoreDPL::Log::JournalLogProvider
Log	./vcore/dpl/log/src/log.cpp	/^namespace Log {$/;"	n	namespace:VcoreDPL	file:
Log	./vcore/dpl/log/src/log.cpp	/^void LogSystem::Log(AbstractLogProvider::LogLevel level,$/;"	f	class:VcoreDPL::Log::LogSystem
Log	./vcore/dpl/log/src/old_style_log_provider.cpp	/^namespace Log {$/;"	n	namespace:VcoreDPL	file:
Log	./vcore/dpl/log/src/old_style_log_provider.cpp	/^void OldStyleLogProvider::Log(AbstractLogProvider::LogLevel level,$/;"	f	class:VcoreDPL::Log::OldStyleLogProvider
LogBasicTAP	./tests/dpl/src/test_results_collector.cpp	/^    void LogBasicTAP(bool isOK, const std::string& id,$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
LogDebug	./vcore/dpl/log/include/dpl/log/log.h	151;"	d
LogDebugPrint	./vcore/vcore/XmlsecAdapter.cpp	/^void LogDebugPrint(const char* file, int line, const char* func, $/;"	f	namespace:ValidationCore
LogError	./vcore/dpl/log/include/dpl/log/log.h	148;"	d
LogInfo	./vcore/dpl/log/include/dpl/log/log.h	152;"	d
LogLevel	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^    enum class LogLevel {$/;"	c	class:VcoreDPL::Log::AbstractLogProvider
LogPedantic	./vcore/dpl/log/include/dpl/log/log.h	154;"	d
LogSystem	./vcore/dpl/log/include/dpl/log/log.h	/^class LogSystem : private Noncopyable$/;"	c	namespace:VcoreDPL::Log
LogSystem	./vcore/dpl/log/src/log.cpp	/^LogSystem::LogSystem()$/;"	f	class:VcoreDPL::Log::LogSystem
LogSystemSingleton	./vcore/dpl/log/include/dpl/log/log.h	/^typedef Singleton<LogSystem> LogSystemSingleton;$/;"	t	namespace:VcoreDPL::Log
LogUnhandledException	./tests/dpl/src/exception.cpp	/^void LogUnhandledException(const std::string &str)$/;"	f	namespace:VcoreDPL
LogUnhandledException	./tests/dpl/src/exception.cpp	/^void LogUnhandledException(const std::string &str,$/;"	f	namespace:VcoreDPL
LogUnhandledException	./vcore/dpl/core/src/exception.cpp	/^void LogUnhandledException(const std::string &str)$/;"	f	namespace:VcoreDPL
LogUnhandledException	./vcore/dpl/core/src/exception.cpp	/^void LogUnhandledException(const std::string &str,$/;"	f	namespace:VcoreDPL
LogUnhandledException	./vcore/vcore/exception.cpp	/^void LogUnhandledException(const std::string &str)$/;"	f	namespace:ValidationCore
LogUnhandledException	./vcore/vcore/exception.cpp	/^void LogUnhandledException(const std::string &str,$/;"	f	namespace:ValidationCore
LogWarning	./vcore/dpl/log/include/dpl/log/log.h	153;"	d
MARK_ENCODED_CHAR	./vcore/vcore/ReferenceValidator.cpp	/^const char MARK_ENCODED_CHAR = '%';$/;"	m	namespace:__anon2	file:
MAX_STORE_ENUMS	./vcore/cert-svc/ccert.h	44;"	d
MAX_VALIDITY_PERIOD	./vcore/vcore/Ocsp.cpp	36;"	d	file:
MEIDList	./vcore/vcore/SignatureData.h	/^    typedef std::list<std::string> MEIDList;$/;"	t	class:ValidationCore::SignatureData
MIN_RSA_KEY_LENGTH	./vcore/vcore/CertificateLoader.cpp	/^const int MIN_RSA_KEY_LENGTH = 1024;$/;"	m	namespace:__anon15	file:
MULTI_TEST_ERROR	./tests/dpl/src/test_runner_multiprocess.cpp	/^const int MULTI_TEST_ERROR    = -1;$/;"	m	namespace:__anon30	file:
MULTI_TEST_FAILED	./tests/dpl/src/test_runner_multiprocess.cpp	/^const int MULTI_TEST_FAILED   = 1;$/;"	m	namespace:__anon30	file:
MULTI_TEST_IGNORED	./tests/dpl/src/test_runner_multiprocess.cpp	/^const int MULTI_TEST_IGNORED  = 2;$/;"	m	namespace:__anon30	file:
MULTI_TEST_INTERNAL	./tests/dpl/src/test_runner_multiprocess.cpp	/^const int MULTI_TEST_INTERNAL = 3;$/;"	m	namespace:__anon30	file:
MULTI_TEST_PASS	./tests/dpl/src/test_runner_multiprocess.cpp	/^const int MULTI_TEST_PASS     = 0;$/;"	m	namespace:__anon30	file:
MarkAssertion	./tests/dpl/src/test_runner.cpp	/^void TestRunner::MarkAssertion()$/;"	f	class:VcoreDPL::Test::TestRunner
NODE_BEGIN	./vcore/vcore/SaxReader.h	/^        NODE_BEGIN,$/;"	e	enum:ValidationCore::SaxReader::NodeType
NODE_END	./vcore/vcore/SaxReader.h	/^        NODE_END,$/;"	e	enum:ValidationCore::SaxReader::NodeType
NODE_TEXT	./vcore/vcore/SaxReader.h	/^        NODE_TEXT$/;"	e	enum:ValidationCore::SaxReader::NodeType
NODE_UNSUPPORTED	./vcore/vcore/SaxReader.h	/^        NODE_UNSUPPORTED,$/;"	e	enum:ValidationCore::SaxReader::NodeType
NONE	./tests/dpl/include/dpl/test/test_results_collector.h	/^            NONE,$/;"	e	enum:VcoreDPL::Test::TestResultsCollectorBase::FailStatus::Type
NONE_STORE	./vcore/cert-svc/ccert.h	/^    NONE_STORE   =  0,$/;"	e	enum:certImportType_t
NO_ERROR	./vcore/vcore/CertificateLoader.h	/^        NO_ERROR,$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
NO_ERROR	./vcore/vcore/ReferenceValidator.h	/^        NO_ERROR = 0,$/;"	e	enum:ValidationCore::ReferenceValidator::Result
NO_ERROR	./vcore/vcore/SignatureFinder.h	/^        NO_ERROR,$/;"	e	enum:ValidationCore::SignatureFinder::Result
NO_ERROR	./vcore/vcore/XmlsecAdapter.h	/^        NO_ERROR,$/;"	e	enum:ValidationCore::XmlSec::Result
NodeType	./vcore/vcore/SaxReader.h	/^    enum NodeType$/;"	g	class:ValidationCore::SaxReader
Noncopyable	./tests/dpl/include/dpl/noncopyable.h	/^class Noncopyable$/;"	c	namespace:VcoreDPL
Noncopyable	./tests/dpl/src/noncopyable.cpp	/^Noncopyable::Noncopyable()$/;"	f	class:VcoreDPL::Noncopyable
Noncopyable	./vcore/dpl/core/include/dpl/noncopyable.h	/^class Noncopyable$/;"	c	namespace:VcoreDPL
Noncopyable	./vcore/dpl/core/src/noncopyable.cpp	/^Noncopyable::Noncopyable()$/;"	f	class:VcoreDPL::Noncopyable
None	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^        None,$/;"	m	class:VcoreDPL::Log::AbstractLogProvider::LogLevel
NullStream	./vcore/dpl/log/include/dpl/log/log.h	/^    NullStream() {}$/;"	f	class:VcoreDPL::Log::NullStream
NullStream	./vcore/dpl/log/include/dpl/log/log.h	/^class NullStream$/;"	c	namespace:VcoreDPL::Log
NullValue	./tests/dpl/include/dpl/scoped_fclose.h	/^    static Type NullValue()$/;"	f	struct:VcoreDPL::ScopedFClosePolicy
NullValue	./tests/dpl/include/dpl/scoped_free.h	/^    static Type NullValue()$/;"	f	struct:VcoreDPL::ScopedFreePolicy
OCSP_BASICRESP_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<OCSP_BASICRESP, std::function<void(OCSP_BASICRESP*)>> OCSP_BASICRESP_PTR;$/;"	t	namespace:__anon4	file:
OCSP_REQUEST_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<OCSP_REQUEST,   std::function<void(OCSP_REQUEST*)>> OCSP_REQUEST_PTR;$/;"	t	namespace:__anon4	file:
OCSP_RESPONSE_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<OCSP_RESPONSE,  std::function<void(OCSP_RESPONSE*)>> OCSP_RESPONSE_PTR;$/;"	t	namespace:__anon4	file:
ObjectList	./vcore/vcore/SignatureData.h	/^typedef std::list<std::string> ObjectList;$/;"	t	namespace:ValidationCore
Ocsp	./vcore/vcore/Ocsp.cpp	/^Ocsp::Ocsp()$/;"	f	class:ValidationCore::Ocsp
Ocsp	./vcore/vcore/Ocsp.h	/^class Ocsp {$/;"	c	namespace:ValidationCore
OldStyleLogProvider	./vcore/dpl/log/include/dpl/log/old_style_log_provider.h	/^class OldStyleLogProvider : public AbstractLogProvider$/;"	c	namespace:VcoreDPL::Log
OldStyleLogProvider	./vcore/dpl/log/src/old_style_log_provider.cpp	/^OldStyleLogProvider::OldStyleLogProvider() {}$/;"	f	class:VcoreDPL::Log::OldStyleLogProvider
P12_END_USER	./vcore/cert-svc/ccert.h	/^    P12_END_USER     = 1 << 1,$/;"	e	enum:certType_t
P12_INTERMEDIATE	./vcore/cert-svc/ccert.h	/^    P12_INTERMEDIATE = 1 << 2,$/;"	e	enum:certType_t
P12_PKEY	./vcore/cert-svc/ccert.h	/^    P12_PKEY         = 1 << 4,$/;"	e	enum:certType_t
P12_TRUSTED	./vcore/cert-svc/ccert.h	/^    P12_TRUSTED      = 1 << 3,$/;"	e	enum:certType_t
PASS	./tests/dpl/include/dpl/test/test_runner.h	/^    enum Status { FAILED, IGNORED, PASS };$/;"	e	enum:VcoreDPL::Test::TestRunner::Status
PEDANTIC_BEGIN	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *PEDANTIC_BEGIN = PURPLE_BEGIN;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
PEDANTIC_END	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *PEDANTIC_END = PURPLE_END;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
PEM_CRT	./vcore/cert-svc/ccert.h	/^    PEM_CRT          = 1 << 0,$/;"	e	enum:certType_t
PIPE_CLOSED	./tests/dpl/include/dpl/test/test_runner_child.h	/^    static const int PIPE_CLOSED = -1;$/;"	m	class:VcoreDPL::Test::PipeWrapper
PURPLE_BEGIN	./tests/dpl/src/colors.cpp	/^const char* PURPLE_BEGIN = "<font color=\\"purple\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
PURPLE_BEGIN	./tests/dpl/src/colors.cpp	/^const char* PURPLE_BEGIN = "\\033[0;35m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
PURPLE_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* PURPLE_BEGIN = "<font color=\\"purple\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
PURPLE_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* PURPLE_BEGIN = "\\033[0;35m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
PURPLE_END	./tests/dpl/src/colors.cpp	/^const char* PURPLE_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
PURPLE_END	./tests/dpl/src/colors.cpp	/^const char* PURPLE_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
PURPLE_END	./vcore/dpl/core/src/colors.cpp	/^const char* PURPLE_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
PURPLE_END	./vcore/dpl/core/src/colors.cpp	/^const char* PURPLE_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
ParseCollectorFileArg	./tests/dpl/src/test_results_collector.cpp	/^bool ParseCollectorFileArg(const std::string &arg, std::string &filename)$/;"	f	namespace:VcoreDPL::Test::__anon31
ParseCollectorSpecificArg	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual bool ParseCollectorSpecificArg (const std::string& \/*arg*\/)$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
ParseCollectorSpecificArg	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool ParseCollectorSpecificArg(const std::string& arg)$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
ParseCollectorSpecificArg	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool ParseCollectorSpecificArg(const std::string& arg)$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
ParseCollectorSpecificArg	./tests/dpl/src/test_results_collector.cpp	/^    virtual bool ParseCollectorSpecificArg(const std::string& arg)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
ParserBase	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    typedef AbstractInputParser<ResultT, TokenT> ParserBase;$/;"	t	class:VcoreDPL::AbstractInputReader
ParserError	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^        typedef typename ParserBase::Exception::ParserError ParserError;$/;"	t	class:VcoreDPL::AbstractInputReader::Exception
ParserSchema	./vcore/vcore/ParserSchema.h	/^    ParserSchema(ParserType *parser)$/;"	f	class:ValidationCore::ParserSchema
ParserSchema	./vcore/vcore/ParserSchema.h	/^class ParserSchema {$/;"	c	namespace:ValidationCore
ParserSchemaException	./vcore/vcore/ParserSchema.h	/^namespace ParserSchemaException {$/;"	n	namespace:ValidationCore
PipeWrapper	./tests/dpl/include/dpl/test/test_runner_child.h	/^class PipeWrapper : VcoreDPL::Noncopyable$/;"	c	namespace:VcoreDPL::Test
PipeWrapper	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::PipeWrapper()$/;"	f	class:VcoreDPL::Test::PipeWrapper
Policy	./tests/dpl/include/dpl/scoped_fclose.h	/^    typedef ScopedFClosePolicy Policy;$/;"	t	class:VcoreDPL::ScopedFClose
Policy	./tests/dpl/include/dpl/scoped_free.h	/^    typedef ScopedFreePolicy<Memory> Policy;$/;"	t	class:VcoreDPL::ScopedFree
PrepareValue	./tests/dpl/src/value_separated_policies.cpp	/^void CSVTokenizerPolicy::PrepareValue(std::string &)$/;"	f	class:VcoreDPL::CSVTokenizerPolicy
PrintStats	./tests/dpl/src/test_results_collector.cpp	/^    void PrintStats(const std::string& name, const Statistic& stats)$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
PrintStats	./tests/dpl/src/test_results_collector.cpp	/^    void PrintStats(const std::string& title, const Statistic& stats)$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
PrintfErrorMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfErrorMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
PrintfErrorMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfErrorMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
PrintfErrorMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfErrorMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
PrintfIgnoredMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfIgnoredMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
PrintfIgnoredMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfIgnoredMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
PrintfIgnoredMessage	./tests/dpl/src/test_results_collector.cpp	/^    void PrintfIgnoredMessage(const char* type,$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Private	./tests/dpl/include/dpl/foreach.h	/^namespace Private {$/;"	n	namespace:VcoreDPL
ProduceString	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    void ProduceString(std::unique_ptr<VSToken> & token, std::string & data)$/;"	f	class:VcoreDPL::VSTokenizer
ProviderFn	./vcore/dpl/log/include/dpl/log/log.h	/^    typedef AbstractLogProvider *(*ProviderFn)();$/;"	t	class:VcoreDPL::Log::LogSystem
RAIIstr	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<char,           std::function<void(void*)>> RAIIstr;$/;"	t	namespace:__anon4	file:
READONLY	./tests/dpl/include/dpl/test/test_runner_child.h	/^        READONLY,$/;"	e	enum:VcoreDPL::Test::PipeWrapper::Usage
RED_BEGIN	./tests/dpl/src/colors.cpp	/^const char* RED_BEGIN = "<font color=\\"red\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
RED_BEGIN	./tests/dpl/src/colors.cpp	/^const char* RED_BEGIN = "\\033[0;31m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
RED_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* RED_BEGIN = "<font color=\\"red\\"><b>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
RED_BEGIN	./vcore/dpl/core/src/colors.cpp	/^const char* RED_BEGIN = "\\033[0;31m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
RED_END	./tests/dpl/src/colors.cpp	/^const char* RED_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
RED_END	./tests/dpl/src/colors.cpp	/^const char* RED_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
RED_END	./vcore/dpl/core/src/colors.cpp	/^const char* RED_END = "<\/b><\/font>";$/;"	m	namespace:VcoreDPL::Colors::Html	file:
RED_END	./vcore/dpl/core/src/colors.cpp	/^const char* RED_END = "\\033[m";$/;"	m	namespace:VcoreDPL::Colors::Text	file:
REGEXP_DISTRIBUTOR_SIGNATURE	./vcore/vcore/ReferenceValidator.cpp	/^const char *REGEXP_DISTRIBUTOR_SIGNATURE = "^signature[1-9][0-9]*\\\\.xml";$/;"	m	namespace:__anon2	file:
REGEXP_DISTRIBUTOR_SIGNATURE	./vcore/vcore/SignatureFinder.cpp	/^static const char *REGEXP_DISTRIBUTOR_SIGNATURE =$/;"	m	namespace:ValidationCore	file:
REVOKED	./vcore/vcore/Ocsp.h	/^		REVOKED$/;"	e	enum:ValidationCore::Ocsp::Result
RUNNER_ASSERT	./tests/dpl/include/dpl/test/test_runner.h	220;"	d
RUNNER_ASSERT_MSG	./tests/dpl/include/dpl/test/test_runner.h	204;"	d
RUNNER_CHILD_TEST	./tests/dpl/include/dpl/test/test_runner_child.h	77;"	d
RUNNER_FAIL	./tests/dpl/include/dpl/test/test_runner.h	222;"	d
RUNNER_IGNORED_MSG	./tests/dpl/include/dpl/test/test_runner.h	224;"	d
RUNNER_MULTIPROCESS_TEST	./tests/dpl/include/dpl/test/test_runner_multiprocess.h	46;"	d
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0101_certificate_new_from_file)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0103_is_signed_by)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0104_not_before_not_after)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T01051_cert_get_field_subject)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T01052_cert_get_field_issuer)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T01053_cert_get_field_other)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0106_chain_sort)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0201_message_verify_dsa_sha1)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0202_message_verify_rsa_sha1)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0203_message_verify_rsa_sha256)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0204_certificate_verify)$/;"	f
RUNNER_TEST	./tests/capi/test-certificate.cpp	/^RUNNER_TEST(T0205_certificate_verify_with_caflag_selfsign_root)$/;"	f
RUNNER_TEST	./tests/capi/test-primitive.cpp	/^RUNNER_TEST(T0301_dup_x509)$/;"	f
RUNNER_TEST	./tests/capi/test-primitive.cpp	/^RUNNER_TEST(T0302_dup_pubkey_der)$/;"	f
RUNNER_TEST	./tests/dpl/include/dpl/test/test_runner.h	194;"	d
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1001_certsvc_get_root_cert_list)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1002_certsvc_set_cert_to_disabled_and_get_status_for_system_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1003_add_pem_file_in_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1004_add_pem_file_in_all_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1005_add_crt_file_in_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1006_add_crt_file_in_all_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1007_install_p12_file_to_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1008_install_p12_file_to_all_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1009_install_pfx_file_to_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1010_install_pfx_file_to_all_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1011_get_all_end_user_certificate_from_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1012_delete_all_cert_from_multiple_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1013_install_pfx_file_to_one_store_and_get_list_from_multiple_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1014_installing_pfx_without_password_to_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1015_get_certificate_from_store) {$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1016_get_certificate_from_system_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1017_load_cert_list_from_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1018_get_duplicate_private_key)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1019_check_alias_exists)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1020_certsvc_set_cert_to_disabled_and_get_status_for_individual_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1021_add_pem_file_to_invalid_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1022_certsvc_set_cert_to_disabled_and_get_status_for_invalid_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1023_certsvc_set_cert_to_disabled_and_get_status_for_invalid_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1024_certsvc_set_and_get_for_invalid_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1025_install_invalid_pfx_file_to_individual_and_all_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1026_enable_disable_status_certificate_from_invalid_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1027_get_alias_name_from_gname_from_store)$/;"	f
RUNNER_TEST	./tests/pkcs12/new_test_cases.cpp	/^RUNNER_TEST(CERTSVC_PKCS12_1028_certsvc_set_cert_to_disabled_and_get_status_for_individual_store)$/;"	f
RUNNER_TEST	./tests/vcore/test-ocsp-check.cpp	/^RUNNER_TEST(T0031_check_positive)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0011_signature_finder)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00121_signature_validator_negative_hash_input)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00122_signature_validator_negative_signature_input)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00123_signature_validator_partner)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0012_signature_validator)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00131_signature_validator_negative_hash_input)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00132_signature_validator_negative_signature_input)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T00133_signature_validator_partner)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0013_signature_validator)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0014_signature_reference)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0021_Certificate)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0022_Certificate)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0023_Certificate)$/;"	f
RUNNER_TEST	./tests/vcore/test-signature-validator.cpp	/^RUNNER_TEST(T0024_Certificate_isCA)$/;"	f
RUNNER_TEST_GROUP_INIT	./tests/dpl/include/dpl/test/test_runner.h	185;"	d
ReThrow	./tests/dpl/include/dpl/exception.h	304;"	d
ReThrow	./vcore/dpl/core/include/dpl/exception.h	304;"	d
ReThrowMsg	./tests/dpl/include/dpl/exception.h	307;"	d
ReThrowMsg	./vcore/dpl/core/include/dpl/exception.h	307;"	d
Read	./tests/dpl/src/binary_queue.cpp	/^BinaryQueueAutoPtr BinaryQueue::Read(size_t size)$/;"	f	class:VcoreDPL::BinaryQueue
ReadInput	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    ResultT ReadInput()$/;"	f	class:VcoreDPL::AbstractInputReader
ReferenceSet	./vcore/vcore/SignatureData.h	/^typedef std::set<std::string> ReferenceSet;$/;"	t	namespace:ValidationCore
ReferenceValidator	./vcore/vcore/ReferenceValidator.cpp	/^ReferenceValidator::ReferenceValidator(const std::string &dirpath)$/;"	f	class:ValidationCore::ReferenceValidator
ReferenceValidator	./vcore/vcore/ReferenceValidator.h	/^class ReferenceValidator : VcoreDPL::Noncopyable$/;"	c	namespace:ValidationCore
RegisterCollectorConstructor	./tests/dpl/src/test_results_collector.cpp	/^void TestResultsCollectorBase::RegisterCollectorConstructor($/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
RegisterCollectorConstructors	./tests/dpl/src/test_results_collector.cpp	/^int RegisterCollectorConstructors()$/;"	f	namespace:VcoreDPL::Test::__anon32
RegisterHelperVariable	./tests/dpl/src/test_results_collector.cpp	/^static const int RegisterHelperVariable = RegisterCollectorConstructors();$/;"	m	namespace:VcoreDPL::Test::__anon32	file:
RegisterTest	./tests/dpl/src/test_runner.cpp	/^void TestRunner::RegisterTest(const char *testName, TestCase proc)$/;"	f	class:VcoreDPL::Test::TestRunner
Release	./tests/dpl/include/dpl/scoped_resource.h	/^    ValueType Release()$/;"	f	class:VcoreDPL::ScopedResource
RemoveProvider	./vcore/dpl/log/src/log.cpp	/^void LogSystem::RemoveProvider(AbstractLogProvider *provider)$/;"	f	class:VcoreDPL::Log::LogSystem
RemoveProviders	./vcore/dpl/log/src/log.cpp	/^void LogSystem::RemoveProviders()$/;"	f	class:VcoreDPL::Log::LogSystem
Reset	./tests/dpl/include/dpl/scoped_resource.h	/^    void Reset(ValueType value = ClassPolicy::NullValue())$/;"	f	class:VcoreDPL::ScopedResource
Reset	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    virtual void Reset(std::shared_ptr<AbstractInput> wia)$/;"	f	class:VcoreDPL::AbstractInputTokenizer
Reset	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    void Reset(std::shared_ptr<AbstractInput> ia)$/;"	f	class:VcoreDPL::VSTokenizer
ResponseCertBlock	./vcore/vcore/cert-svc-client.h	/^} ResponseCertBlock;$/;"	t	typeref:struct:__anon9
Result	./vcore/vcore/Ocsp.h	/^	enum Result {$/;"	g	class:ValidationCore::Ocsp
Result	./vcore/vcore/ReferenceValidator.h	/^    enum Result$/;"	g	class:ValidationCore::ReferenceValidator
Result	./vcore/vcore/SignatureFinder.h	/^    enum Result$/;"	g	class:ValidationCore::SignatureFinder
Result	./vcore/vcore/SignatureValidator.h	/^    enum Result$/;"	g	class:ValidationCore::SignatureValidator
Result	./vcore/vcore/XmlsecAdapter.h	/^    enum Result$/;"	g	class:ValidationCore::XmlSec
ResultType	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^    typedef Result ResultType;$/;"	t	class:VcoreDPL::AbstractInputParser
ResultType	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    typedef TokenT ResultType;$/;"	t	class:VcoreDPL::AbstractInputReader
RunChildProc	./tests/dpl/src/test_runner_child.cpp	/^void RunChildProc(TestRunner::TestCase procChild)$/;"	f	namespace:VcoreDPL::Test
RunMultiProc	./tests/dpl/src/test_runner_multiprocess.cpp	/^void RunMultiProc(TestRunner::TestCase procMulti)$/;"	f	namespace:VcoreDPL::Test
RunTestCase	./tests/dpl/src/test_runner.cpp	/^TestRunner::Status TestRunner::RunTestCase(const TestCaseStruct& testCase)$/;"	f	class:VcoreDPL::Test::TestRunner
RunTests	./tests/dpl/src/test_runner.cpp	/^void TestRunner::RunTests()$/;"	f	class:VcoreDPL::Test::TestRunner
SIGNATURE_AUTHOR	./vcore/vcore/SignatureFinder.cpp	/^static const char *SIGNATURE_AUTHOR = "author-signature.xml";$/;"	m	namespace:ValidationCore	file:
SIGNATURE_DISREGARD	./vcore/vcore/SignatureValidator.h	/^        SIGNATURE_DISREGARD,$/;"	e	enum:ValidationCore::SignatureValidator::Result
SIGNATURE_ERRORDESCRIBE	./tests/vcore/test-common.cpp	19;"	d	file:
SIGNATURE_ERRORDESCRIBE	./tests/vcore/test-common.cpp	32;"	d	file:
SIGNATURE_INVALID	./vcore/vcore/SignatureValidator.h	/^        SIGNATURE_INVALID,$/;"	e	enum:ValidationCore::SignatureValidator::Result
SIGNATURE_REVOKED	./vcore/vcore/SignatureValidator.h	/^        SIGNATURE_REVOKED$/;"	e	enum:ValidationCore::SignatureValidator::Result
SIGNATURE_VALID	./vcore/vcore/SignatureValidator.h	/^        SIGNATURE_VALID,$/;"	e	enum:ValidationCore::SignatureValidator::Result
SIGNATURE_VERIFIED	./vcore/vcore/SignatureValidator.h	/^        SIGNATURE_VERIFIED,$/;"	e	enum:ValidationCore::SignatureValidator::Result
SPECIAL_SYMBOL_AUTHOR_SIGNATURE_FILE	./vcore/vcore/ReferenceValidator.cpp	/^const char *SPECIAL_SYMBOL_AUTHOR_SIGNATURE_FILE = "author-signature.xml";$/;"	m	namespace:__anon2	file:
SPECIAL_SYMBOL_CURRENT_DIR	./vcore/vcore/ReferenceValidator.cpp	/^const char *SPECIAL_SYMBOL_CURRENT_DIR = ".";$/;"	m	namespace:__anon2	file:
SPECIAL_SYMBOL_UPPER_DIR	./vcore/vcore/ReferenceValidator.cpp	/^const char *SPECIAL_SYMBOL_UPPER_DIR = "..";$/;"	m	namespace:__anon2	file:
SSL_CTX_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<SSL_CTX,        std::function<void(SSL_CTX*)>> SSL_CTX_PTR;$/;"	t	namespace:__anon4	file:
START_CERT	./vcore/vcore/api.cpp	60;"	d	file:
START_CERT	./vcore/vcore/pkcs12.cpp	46;"	d	file:
START_KEY	./vcore/vcore/pkcs12.cpp	50;"	d	file:
START_TRUSTED	./vcore/vcore/api.cpp	62;"	d	file:
START_TRUSTED	./vcore/vcore/pkcs12.cpp	48;"	d	file:
SUCCESS	./tests/dpl/include/dpl/test/test_runner_child.h	/^        SUCCESS,$/;"	e	enum:VcoreDPL::Test::PipeWrapper::Status
SYSCALL	./vcore/vcore/pkcs12.cpp	44;"	d	file:
SYSTEM_STORE	./vcore/cert-svc/ccert.h	/^    SYSTEM_STORE =  1 << 3,$/;"	e	enum:certImportType_t
SaxReader	./vcore/vcore/SaxReader.cpp	/^SaxReader::SaxReader() :$/;"	f	class:ValidationCore::SaxReader
SaxReader	./vcore/vcore/SaxReader.h	/^class SaxReader {$/;"	c	namespace:ValidationCore
ScopedCertCtx	./vcore/vcore/Certificate.cpp	/^typedef std::unique_ptr<CERT_CONTEXT, std::function<int(CERT_CONTEXT*)> > ScopedCertCtx;$/;"	t	namespace:__anon12	file:
ScopedFClose	./tests/dpl/include/dpl/scoped_fclose.h	/^    explicit ScopedFClose(FILE* argFileStream = Policy::NullValue()) :$/;"	f	class:VcoreDPL::ScopedFClose
ScopedFClose	./tests/dpl/include/dpl/scoped_fclose.h	/^class ScopedFClose : public ScopedResource<ScopedFClosePolicy>$/;"	c	namespace:VcoreDPL
ScopedFClosePolicy	./tests/dpl/include/dpl/scoped_fclose.h	/^struct ScopedFClosePolicy$/;"	s	namespace:VcoreDPL
ScopedFree	./tests/dpl/include/dpl/scoped_free.h	/^    explicit ScopedFree(Memory *ptr = Policy::NullValue()) : BaseType(ptr) { }$/;"	f	class:VcoreDPL::ScopedFree
ScopedFree	./tests/dpl/include/dpl/scoped_free.h	/^class ScopedFree : public ScopedResource<ScopedFreePolicy<Memory> >$/;"	c	namespace:VcoreDPL
ScopedFreePolicy	./tests/dpl/include/dpl/scoped_free.h	/^struct ScopedFreePolicy$/;"	s	namespace:VcoreDPL
ScopedResource	./tests/dpl/include/dpl/scoped_resource.h	/^    explicit ScopedResource(ValueType value) : m_value(value) { }$/;"	f	class:VcoreDPL::ScopedResource
ScopedResource	./tests/dpl/include/dpl/scoped_resource.h	/^class ScopedResource :$/;"	c	namespace:VcoreDPL
SelectProvider	./vcore/dpl/log/src/log.cpp	/^void LogSystem::SelectProvider(const std::string &name)$/;"	f	class:VcoreDPL::Log::LogSystem
SelectedTestGroupSet	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef std::set<std::string> SelectedTestGroupSet;$/;"	t	class:VcoreDPL::Test::TestRunner
SelectedTestNameSet	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef std::set<std::string> SelectedTestNameSet;$/;"	t	class:VcoreDPL::Test::TestRunner
Set	./vcore/vcore/CertStoreType.cpp	/^Set::Set()$/;"	f	class:ValidationCore::CertStoreId::Set
Set	./vcore/vcore/CertStoreType.h	/^class Set {$/;"	c	namespace:ValidationCore::CertStoreId
SetLogLevel	./vcore/dpl/log/src/log.cpp	/^void LogSystem::SetLogLevel(const char *level)$/;"	f	class:VcoreDPL::Log::LogSystem
SetTag	./vcore/dpl/log/src/abstract_log_provider.cpp	/^void AbstractLogProvider::SetTag(const char *) {}$/;"	f	class:VcoreDPL::Log::AbstractLogProvider
SetTag	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void DLOGLogProvider::SetTag(const char *tag)$/;"	f	class:VcoreDPL::Log::DLOGLogProvider
SetTag	./vcore/dpl/log/src/log.cpp	/^void LogSystem::SetTag(const char* tag)$/;"	f	class:VcoreDPL::Log::LogSystem
SigComponents	./tests/capi/common-res.h	/^	SigComponents(std::string &cert, std::string &mes, std::string &sig)$/;"	f	class:TestData::SigComponents
SigComponents	./tests/capi/common-res.h	/^class SigComponents {$/;"	c	namespace:TestData
SignatureData	./vcore/vcore/SignatureData.cpp	/^SignatureData::SignatureData()$/;"	f	class:ValidationCore::SignatureData
SignatureData	./vcore/vcore/SignatureData.cpp	/^SignatureData::SignatureData(const std::string &fileName, int fileNumber)$/;"	f	class:ValidationCore::SignatureData
SignatureData	./vcore/vcore/SignatureData.h	/^class SignatureData {$/;"	c	namespace:ValidationCore
SignatureDataSet	./vcore/vcore/SignatureData.h	/^typedef std::set<SignatureData> SignatureDataSet;$/;"	t	namespace:ValidationCore
SignatureFileInfo	./vcore/vcore/SignatureFinder.h	/^    SignatureFileInfo(const std::string &fileName, int num)$/;"	f	class:ValidationCore::SignatureFileInfo
SignatureFileInfo	./vcore/vcore/SignatureFinder.h	/^class SignatureFileInfo {$/;"	c	namespace:ValidationCore
SignatureFileInfoSet	./vcore/vcore/SignatureFinder.h	/^typedef std::set<SignatureFileInfo> SignatureFileInfoSet;$/;"	t	namespace:ValidationCore
SignatureFinder	./vcore/vcore/SignatureFinder.cpp	/^SignatureFinder::SignatureFinder(const std::string& dir)$/;"	f	class:ValidationCore::SignatureFinder
SignatureFinder	./vcore/vcore/SignatureFinder.h	/^class SignatureFinder {$/;"	c	namespace:ValidationCore
SignatureReader	./vcore/vcore/SignatureReader.cpp	/^SignatureReader::SignatureReader() :$/;"	f	class:ValidationCore::SignatureReader
SignatureReader	./vcore/vcore/SignatureReader.h	/^class SignatureReader {$/;"	c	namespace:ValidationCore
SignatureValidator	./vcore/vcore/SignatureValidator.h	/^class SignatureValidator {$/;"	c	namespace:ValidationCore
SimplePipeWrapper	./tests/dpl/include/dpl/test/test_runner_multiprocess.h	/^class SimplePipeWrapper :$/;"	c	namespace:VcoreDPL::Test
SimplePipeWrapper	./tests/dpl/src/test_runner_multiprocess.cpp	/^SimplePipeWrapper::SimplePipeWrapper()$/;"	f	class:VcoreDPL::Test::SimplePipeWrapper
Singleton	./tests/dpl/include/dpl/singleton.h	/^    Singleton()$/;"	f	class:VcoreDPL::Singleton
Singleton	./tests/dpl/include/dpl/singleton.h	/^class Singleton :$/;"	c	namespace:VcoreDPL
Singleton	./vcore/dpl/core/include/dpl/singleton.h	/^    Singleton()$/;"	f	class:VcoreDPL::Singleton
Singleton	./vcore/dpl/core/include/dpl/singleton.h	/^class Singleton :$/;"	c	namespace:VcoreDPL
Size	./tests/dpl/src/binary_queue.cpp	/^size_t BinaryQueue::Size() const$/;"	f	class:VcoreDPL::BinaryQueue
SkipEmpty	./tests/dpl/src/value_separated_policies.cpp	/^bool CSVTokenizerPolicy::SkipEmpty()$/;"	f	class:VcoreDPL::CSVTokenizerPolicy
SkipLine	./tests/dpl/src/value_separated_policies.cpp	/^bool CSVParserPolicy::SkipLine(const std::vector<std::string> & )$/;"	f	class:VcoreDPL::CSVParserPolicy
Start	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual void Start(int count) { DPL_UNUSED_PARAM(count); }$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
Start	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Start(int count)$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
Start	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Start(int count)$/;"	f	class:VcoreDPL::Test::__anon31::CSVCollector	file:
Start	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Start(int count)$/;"	f	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
Start	./tests/dpl/src/test_results_collector.cpp	/^    virtual void Start(int count)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Statistic	./tests/dpl/src/test_results_collector.cpp	/^    Statistic() :$/;"	f	class:VcoreDPL::Test::__anon31::Statistic
Statistic	./tests/dpl/src/test_results_collector.cpp	/^class Statistic$/;"	c	namespace:VcoreDPL::Test::__anon31	file:
Status	./tests/dpl/include/dpl/test/test_runner.h	/^    enum Status { FAILED, IGNORED, PASS };$/;"	g	class:VcoreDPL::Test::TestRunner
Status	./tests/dpl/include/dpl/test/test_runner_child.h	/^    enum Status {$/;"	g	class:VcoreDPL::Test::PipeWrapper
TAPCollector	./tests/dpl/src/test_results_collector.cpp	/^    TAPCollector() : m_filename(DEFAULT_TAP_FILE_NAME)  {}$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
TAPCollector	./tests/dpl/src/test_results_collector.cpp	/^class TAPCollector :$/;"	c	namespace:VcoreDPL::Test	file:
THROW_DISABLE	./vcore/vcore/SaxReader.h	/^        THROW_DISABLE$/;"	e	enum:ValidationCore::SaxReader::ThrowType
THROW_ENABLE	./vcore/vcore/SaxReader.h	/^        THROW_ENABLE = 0,$/;"	e	enum:ValidationCore::SaxReader::ThrowType
TIMEOUT	./tests/dpl/include/dpl/test/test_runner_child.h	/^        TIMEOUT,$/;"	e	enum:VcoreDPL::Test::PipeWrapper::Status
TIZEN_DEVELOPER	./vcore/vcore/CertStoreType.h	/^const Type TIZEN_DEVELOPER = 1;$/;"	m	namespace:ValidationCore::CertStoreId
TIZEN_STORE	./vcore/vcore/CertStoreType.h	/^const Type TIZEN_STORE = 1 << 3;$/;"	m	namespace:ValidationCore::CertStoreId
TIZEN_TEST	./vcore/vcore/CertStoreType.h	/^const Type TIZEN_TEST = 1 << 1;$/;"	m	namespace:ValidationCore::CertStoreId
TIZEN_VERIFY	./vcore/vcore/CertStoreType.h	/^const Type TIZEN_VERIFY = 1 << 2;$/;"	m	namespace:ValidationCore::CertStoreId
TOKEN_ALGORITHM	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ALGORITHM = "Algorithm";$/;"	m	namespace:ValidationCore	file:
TOKEN_ATTR_IDENTIFIER	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ATTR_IDENTIFIER = "identifier";$/;"	m	namespace:ValidationCore	file:
TOKEN_ATTR_NAME	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_ATTR_NAME = "name";$/;"	m	namespace:__anon5	file:
TOKEN_ATTR_PROFILE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ATTR_PROFILE = "profile";$/;"	m	namespace:ValidationCore	file:
TOKEN_ATTR_ROLE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ATTR_ROLE = "role";$/;"	m	namespace:ValidationCore	file:
TOKEN_CANONICALIZATION_METHOD	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_CANONICALIZATION_METHOD =$/;"	m	namespace:ValidationCore	file:
TOKEN_CERTIFICATE_DOMAIN	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_CERTIFICATE_DOMAIN = "CertificateDomain";$/;"	m	namespace:__anon5	file:
TOKEN_CERTIFICATE_SET	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_CERTIFICATE_SET = "CertificateSet";$/;"	m	namespace:__anon5	file:
TOKEN_DIGEST_METHOD	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DIGEST_METHOD = "DigestMethod";$/;"	m	namespace:ValidationCore	file:
TOKEN_DIGEST_VALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DIGEST_VALUE = "DigestValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSAKEYVALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSAKEYVALUE = "DSAKeyValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_G_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_G_COMPONENT = "G";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_J_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_J_COMPONENT = "J";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_PGENCOUNTER_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_PGENCOUNTER_COMPONENT = "PgenCounter";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_P_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_P_COMPONENT = "P";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_Q_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_Q_COMPONENT = "Q";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_SEED_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_SEED_COMPONENT = "Seed";$/;"	m	namespace:ValidationCore	file:
TOKEN_DSA_Y_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_DSA_Y_COMPONENT = "Y";$/;"	m	namespace:ValidationCore	file:
TOKEN_ECKEY_VALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ECKEY_VALUE = "ECKeyValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_EXPONENT_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_EXPONENT_COMPONENT = "Exponent";$/;"	m	namespace:ValidationCore	file:
TOKEN_FINGERPRINT_SHA1	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_FINGERPRINT_SHA1 = "FingerprintSHA1";$/;"	m	namespace:__anon5	file:
TOKEN_ID	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ID = "Id";$/;"	m	namespace:ValidationCore	file:
TOKEN_IDENTIFIER	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_IDENTIFIER = "Identifier";$/;"	m	namespace:ValidationCore	file:
TOKEN_IMEI	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_IMEI = "IMEI";$/;"	m	namespace:ValidationCore	file:
TOKEN_KEY_INFO	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_KEY_INFO = "KeyInfo";$/;"	m	namespace:ValidationCore	file:
TOKEN_KEY_VALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_KEY_VALUE = "KeyValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_MEID	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_MEID = "MEID";$/;"	m	namespace:ValidationCore	file:
TOKEN_MODULUS_COMPONENT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_MODULUS_COMPONENT = "Modulus";$/;"	m	namespace:ValidationCore	file:
TOKEN_NAMED_CURVE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_NAMED_CURVE = "NamedCurve";$/;"	m	namespace:ValidationCore	file:
TOKEN_OBJECT	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_OBJECT = "Object";$/;"	m	namespace:ValidationCore	file:
TOKEN_PROFILE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_PROFILE = "Profile";$/;"	m	namespace:ValidationCore	file:
TOKEN_PROFILE_URI	./vcore/vcore/SignatureValidator.cpp	/^const std::string TOKEN_PROFILE_URI =$/;"	m	namespace:__anon1	file:
TOKEN_PUBLIC_KEY	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_PUBLIC_KEY = "PublicKey";$/;"	m	namespace:ValidationCore	file:
TOKEN_REFERENCE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_REFERENCE = "Reference";$/;"	m	namespace:ValidationCore	file:
TOKEN_ROLE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_ROLE = "Role";$/;"	m	namespace:ValidationCore	file:
TOKEN_ROLE_AUTHOR_URI	./vcore/vcore/SignatureValidator.cpp	/^const std::string TOKEN_ROLE_AUTHOR_URI =$/;"	m	namespace:__anon1	file:
TOKEN_ROLE_DISTRIBUTOR_URI	./vcore/vcore/SignatureValidator.cpp	/^const std::string TOKEN_ROLE_DISTRIBUTOR_URI =$/;"	m	namespace:__anon1	file:
TOKEN_RSA_KEY_VALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_RSA_KEY_VALUE = "RSAKeyValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNATURE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNATURE = "Signature";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNATURE_METHOD	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNATURE_METHOD = "SignatureMethod";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNATURE_PROPERTIES	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNATURE_PROPERTIES = "SignatureProperties";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNATURE_PROPERTY	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNATURE_PROPERTY = "SignatureProperty";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNATURE_VALUE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNATURE_VALUE = "SignatureValue";$/;"	m	namespace:ValidationCore	file:
TOKEN_SIGNED_INFO	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_SIGNED_INFO = "SignedInfo";$/;"	m	namespace:ValidationCore	file:
TOKEN_TARGET	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_TARGET = "Target";$/;"	m	namespace:ValidationCore	file:
TOKEN_TARGET_RESTRICTION	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_TARGET_RESTRICTION = "TargetRestriction";$/;"	m	namespace:ValidationCore	file:
TOKEN_TRANSFORM	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_TRANSFORM = "Transform";$/;"	m	namespace:ValidationCore	file:
TOKEN_TRANSFORMS	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_TRANSFORMS = "Transforms";$/;"	m	namespace:ValidationCore	file:
TOKEN_URI	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_URI = "URI";$/;"	m	namespace:ValidationCore	file:
TOKEN_VALUE_TIZEN_DEVELOPER	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_TIZEN_DEVELOPER = "tizen-developer";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_TIZEN_STORE	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_TIZEN_STORE = "tizen-store";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_TIZEN_TEST	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_TIZEN_TEST = "tizen-test";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_TIZEN_VERIFY	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_TIZEN_VERIFY = "tizen-verify";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_VISIBILITY_PARTNER	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_VISIBILITY_PARTNER = "tizen-partner";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_VISIBILITY_PARTNER_MANUFACTURER	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_VISIBILITY_PARTNER_MANUFACTURER = "tizen-partner-manufacturer";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_VISIBILITY_PARTNER_OPERATOR	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_VISIBILITY_PARTNER_OPERATOR = "tizen-partner-operator";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_VISIBILITY_PLATFORM	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_VISIBILITY_PLATFORM = "tizen-platform";$/;"	m	namespace:__anon5	file:
TOKEN_VALUE_VISIBILITY_PUBLIC	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string TOKEN_VALUE_VISIBILITY_PUBLIC = "tizen-public";$/;"	m	namespace:__anon5	file:
TOKEN_X509CERTIFICATE	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_X509CERTIFICATE = "X509Certificate";$/;"	m	namespace:ValidationCore	file:
TOKEN_X509DATA	./vcore/vcore/SignatureReader.cpp	/^static const std::string TOKEN_X509DATA = "X509Data";$/;"	m	namespace:ValidationCore	file:
TagDescription	./vcore/vcore/ParserSchema.h	/^        TagDescription(const std::string &tag,$/;"	f	struct:ValidationCore::ParserSchema::TagDescription
TagDescription	./vcore/vcore/ParserSchema.h	/^    struct TagDescription {$/;"	s	class:ValidationCore::ParserSchema
Terminate	./tests/dpl/src/test_runner.cpp	/^void TestRunner::Terminate()$/;"	f	class:VcoreDPL::Test::TestRunner
TerminateHandler	./tests/dpl/include/dpl/exception.h	/^    static void TerminateHandler()$/;"	f	class:VcoreDPL::Exception
TerminateHandler	./vcore/dpl/core/include/dpl/exception.h	/^    static void TerminateHandler()$/;"	f	class:VcoreDPL::Exception
TerminateHandler	./vcore/vcore/exception.h	/^    static void TerminateHandler()$/;"	f	class:ValidationCore::Exception
Test	./tests/dpl/include/dpl/test/test_results_collector.h	/^namespace Test {$/;"	n	namespace:VcoreDPL
Test	./tests/dpl/include/dpl/test/test_runner.h	/^namespace Test {$/;"	n	namespace:VcoreDPL
Test	./tests/dpl/include/dpl/test/test_runner_child.h	/^namespace Test {$/;"	n	namespace:VcoreDPL
Test	./tests/dpl/include/dpl/test/test_runner_multiprocess.h	/^namespace Test {$/;"	n	namespace:VcoreDPL
Test	./tests/dpl/src/test_results_collector.cpp	/^namespace Test {$/;"	n	namespace:VcoreDPL	file:
Test	./tests/dpl/src/test_runner.cpp	/^namespace Test {$/;"	n	namespace:VcoreDPL	file:
Test	./tests/dpl/src/test_runner_child.cpp	/^namespace Test {$/;"	n	namespace:VcoreDPL	file:
Test	./tests/dpl/src/test_runner_multiprocess.cpp	/^namespace Test {$/;"	n	namespace:VcoreDPL	file:
TestCase	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef void (*TestCase)();$/;"	t	class:VcoreDPL::Test::TestRunner
TestCaseGroupMap	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef std::map<std::string, TestCaseStructList> TestCaseGroupMap;$/;"	t	class:VcoreDPL::Test::TestRunner
TestCaseIdList	./tests/dpl/include/dpl/test/test_results_collector.h	/^    typedef std::list<std::string> TestCaseIdList;$/;"	t	class:VcoreDPL::Test::TestResultsCollectorBase
TestCaseStruct	./tests/dpl/include/dpl/test/test_runner.h	/^        TestCaseStruct(const std::string &n, TestCase p) :$/;"	f	struct:VcoreDPL::Test::TestRunner::TestCaseStruct
TestCaseStruct	./tests/dpl/include/dpl/test/test_runner.h	/^    struct TestCaseStruct$/;"	s	class:VcoreDPL::Test::TestRunner
TestCaseStructList	./tests/dpl/include/dpl/test/test_runner.h	/^    typedef std::list<TestCaseStruct> TestCaseStructList;$/;"	t	class:VcoreDPL::Test::TestRunner
TestData	./tests/capi/common-res.h	/^namespace TestData {$/;"	n
TestData	./tests/vcore/test-common.h	/^namespace TestData {$/;"	n
TestFailed	./tests/dpl/include/dpl/test/test_runner.h	/^        TestFailed()$/;"	f	class:VcoreDPL::Test::TestRunner::TestFailed
TestFailed	./tests/dpl/include/dpl/test/test_runner.h	/^    class TestFailed$/;"	c	class:VcoreDPL::Test::TestRunner
TestFailed	./tests/dpl/src/test_runner.cpp	/^TestRunner::TestFailed::TestFailed(const char* aTest,$/;"	f	class:VcoreDPL::Test::TestRunner::TestFailed
TestFailed	./tests/dpl/src/test_runner.cpp	/^TestRunner::TestFailed::TestFailed(const std::string &message)$/;"	f	class:VcoreDPL::Test::TestRunner::TestFailed
TestResultsCollectorBase	./tests/dpl/include/dpl/test/test_results_collector.h	/^class TestResultsCollectorBase :$/;"	c	namespace:VcoreDPL::Test
TestResultsCollectorBasePtr	./tests/dpl/include/dpl/test/test_results_collector.h	/^TestResultsCollectorBasePtr;$/;"	t	namespace:VcoreDPL::Test
TestResultsCollectors	./tests/dpl/include/dpl/test/test_runner.h	/^    TestResultsCollectors;$/;"	t	class:VcoreDPL::Test::TestRunner
TestRunner	./tests/dpl/include/dpl/test/test_runner.h	/^    TestRunner()$/;"	f	class:VcoreDPL::Test::TestRunner
TestRunner	./tests/dpl/include/dpl/test/test_runner.h	/^class TestRunner$/;"	c	namespace:VcoreDPL::Test
TestRunnerSingleton	./tests/dpl/include/dpl/test/test_runner.h	/^typedef VcoreDPL::Singleton<TestRunner> TestRunnerSingleton;$/;"	t	namespace:VcoreDPL::Test
Text	./tests/dpl/include/dpl/colors.h	/^namespace Text {$/;"	n	namespace:VcoreDPL::Colors
Text	./tests/dpl/src/colors.cpp	/^namespace Text {$/;"	n	namespace:VcoreDPL::Colors	file:
Text	./vcore/dpl/core/include/dpl/colors.h	/^namespace Text {$/;"	n	namespace:VcoreDPL::Colors
Text	./vcore/dpl/core/src/colors.cpp	/^namespace Text {$/;"	n	namespace:VcoreDPL::Colors	file:
ThisType	./tests/dpl/include/dpl/scoped_resource.h	/^    typedef ScopedResource<ClassPolicy> ThisType;$/;"	t	class:VcoreDPL::ScopedResource
Throw	./tests/dpl/include/dpl/exception.h	293;"	d
Throw	./vcore/dpl/core/include/dpl/exception.h	293;"	d
ThrowMsg	./tests/dpl/include/dpl/exception.h	296;"	d
ThrowMsg	./vcore/dpl/core/include/dpl/exception.h	296;"	d
ThrowType	./vcore/vcore/SaxReader.h	/^    enum ThrowType$/;"	g	class:ValidationCore::SaxReader
TokenType	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^    typedef Token TokenType;$/;"	t	class:VcoreDPL::AbstractInputParser
TokenType	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    typedef ResultT TokenType;$/;"	t	class:VcoreDPL::AbstractInputReader
TokenType	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    typedef Token TokenType;$/;"	t	class:VcoreDPL::AbstractInputTokenizer
TokenizerBase	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    typedef AbstractInputTokenizer<TokenT> TokenizerBase;$/;"	t	class:VcoreDPL::AbstractInputReader
TokenizerError	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^        typedef typename TokenizerBase::Exception::TokenizerError TokenizerError;$/;"	t	class:VcoreDPL::AbstractInputReader::Exception
Try	./tests/dpl/include/dpl/exception.h	291;"	d
Try	./vcore/dpl/core/include/dpl/exception.h	291;"	d
TryAgainAtEnd	./tests/dpl/src/value_separated_policies.cpp	/^bool CSVTokenizerPolicy::TryAgainAtEnd(int)$/;"	f	class:VcoreDPL::CSVTokenizerPolicy
Type	./tests/dpl/include/dpl/scoped_fclose.h	/^    typedef FILE* Type;$/;"	t	struct:VcoreDPL::ScopedFClosePolicy
Type	./tests/dpl/include/dpl/scoped_free.h	/^    typedef Class* Type;$/;"	t	struct:VcoreDPL::ScopedFreePolicy
Type	./tests/dpl/include/dpl/test/test_results_collector.h	/^        enum Type$/;"	g	struct:VcoreDPL::Test::TestResultsCollectorBase::FailStatus
Type	./vcore/vcore/CertStoreType.h	/^typedef unsigned int Type;$/;"	t	namespace:ValidationCore::CertStoreId
UIntToString	./tests/dpl/src/test_results_collector.cpp	/^    std::string UIntToString(const unsigned int value)$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
UNHANDLED_EXCEPTION_HANDLER_BEGIN	./tests/dpl/include/dpl/exception.h	339;"	d
UNHANDLED_EXCEPTION_HANDLER_BEGIN	./vcore/dpl/core/include/dpl/exception.h	339;"	d
UNHANDLED_EXCEPTION_HANDLER_END	./tests/dpl/include/dpl/exception.h	341;"	d
UNHANDLED_EXCEPTION_HANDLER_END	./vcore/dpl/core/include/dpl/exception.h	341;"	d
UNKNOWN_ERROR	./vcore/vcore/CertificateLoader.h	/^        UNKNOWN_ERROR$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
UNSUPPORTED_CERTIFICATE_FIELD	./vcore/vcore/CertificateLoader.h	/^        UNSUPPORTED_CERTIFICATE_FIELD,$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
UnRef	./tests/dpl/include/dpl/exception.h	/^    static void UnRef(Exception* e)$/;"	f	class:VcoreDPL::Exception
UnRef	./vcore/dpl/core/include/dpl/exception.h	/^    static void UnRef(Exception* e)$/;"	f	class:VcoreDPL::Exception
UnRef	./vcore/vcore/exception.h	/^    static void UnRef(Exception* e)$/;"	f	class:ValidationCore::Exception
UnknownBoolType	./tests/dpl/include/dpl/scoped_resource.h	/^    typedef ValueType ThisType::*UnknownBoolType;$/;"	t	class:VcoreDPL::ScopedResource::ThisType
UnknownExceptionToString	./tests/dpl/include/dpl/exception.h	/^    static std::string UnknownExceptionToString()$/;"	f	class:VcoreDPL::Exception
UnknownExceptionToString	./vcore/dpl/core/include/dpl/exception.h	/^    static std::string UnknownExceptionToString()$/;"	f	class:VcoreDPL::Exception
UnknownExceptionToString	./vcore/vcore/exception.h	/^    static std::string UnknownExceptionToString()$/;"	f	class:ValidationCore::Exception
UpdateElementAttribute	./tests/dpl/src/test_results_collector.cpp	/^    void UpdateElementAttribute(const std::size_t elementPosition,$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
UpdateGroupHeader	./tests/dpl/src/test_results_collector.cpp	/^    void UpdateGroupHeader(const std::size_t groupPosition,$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
Usage	./tests/dpl/include/dpl/test/test_runner_child.h	/^    enum Usage {$/;"	g	class:VcoreDPL::Test::PipeWrapper
Usage	./tests/dpl/src/test_runner.cpp	/^void TestRunner::Usage()$/;"	f	class:VcoreDPL::Test::TestRunner
VALIDATION_DISABLE	./vcore/vcore/SaxReader.h	/^        VALIDATION_DISABLE,$/;"	e	enum:ValidationCore::SaxReader::ValidationType
VALIDATION_DTD	./vcore/vcore/SaxReader.h	/^        VALIDATION_DTD$/;"	e	enum:ValidationCore::SaxReader::ValidationType
VALIDATION_XMLSCHEME	./vcore/vcore/SaxReader.h	/^        VALIDATION_XMLSCHEME,$/;"	e	enum:ValidationCore::SaxReader::ValidationType
VALUE_SEPARATED_PARSER_H	./tests/dpl/include/dpl/test/value_separated_parser.h	23;"	d
VALUE_SEPARATED_POLICIES_H	./tests/dpl/include/dpl/test/value_separated_policies.h	23;"	d
VALUE_SEPARATED_READER_H	./tests/dpl/include/dpl/test/value_separated_reader.h	30;"	d
VALUE_SEPARATED_TOKENIZER_H	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	23;"	d
VALUE_SEPARATED_TOKENS_H	./tests/dpl/include/dpl/test/value_separated_tokens.h	23;"	d
VCORE_DECLARE_EXCEPTION_TYPE	./vcore/vcore/exception.h	317;"	d
VCORE_MAX_APPID_SIZE	./vcore/vcore/cert-svc-client.h	37;"	d
VCORE_MAX_FILENAME_SIZE	./vcore/vcore/cert-svc-client.h	33;"	d
VCORE_MAX_GROUP_ID_SIZE	./vcore/vcore/cert-svc-client.h	36;"	d
VCORE_MAX_PASSWORD_SIZE	./vcore/vcore/cert-svc-client.h	38;"	d
VCORE_MAX_RECV_DATA_SIZE	./vcore/vcore/cert-svc-client.h	34;"	d
VCORE_MAX_SEND_DATA_SIZE	./vcore/vcore/cert-svc-client.h	35;"	d
VCORE_PKEY_TEMP_PATH	./vcore/vcore/cert-svc-client.h	41;"	d
VCORE_SOCKET_ERROR	./vcore/vcore/cert-svc-client.h	39;"	d
VCORE_SOCK_PATH	./vcore/vcore/cert-svc-client.h	40;"	d
VCORE_UNHANDLED_EXCEPTION_HANDLER_BEGIN	./vcore/vcore/exception.h	339;"	d
VCORE_UNHANDLED_EXCEPTION_HANDLER_END	./vcore/vcore/exception.h	341;"	d
VC_DECLARE_DELETER	./vcore/vcore/ValidatorCommon.h	38;"	d
VIS_PARTNER	./vcore/vcore/CertStoreType.h	/^const Type VIS_PARTNER = 1 << 7;$/;"	m	namespace:ValidationCore::CertStoreId
VIS_PARTNER_MANUFACTURER	./vcore/vcore/CertStoreType.h	/^const Type VIS_PARTNER_MANUFACTURER = 1 << 9;$/;"	m	namespace:ValidationCore::CertStoreId
VIS_PARTNER_OPERATOR	./vcore/vcore/CertStoreType.h	/^const Type VIS_PARTNER_OPERATOR = 1 << 8;$/;"	m	namespace:ValidationCore::CertStoreId
VIS_PLATFORM	./vcore/vcore/CertStoreType.h	/^const Type VIS_PLATFORM = 1 << 10;$/;"	m	namespace:ValidationCore::CertStoreId
VIS_PUBLIC	./vcore/vcore/CertStoreType.h	/^const Type VIS_PUBLIC = 1 << 6;$/;"	m	namespace:ValidationCore::CertStoreId
VPN_STORE	./vcore/cert-svc/ccert.h	/^    VPN_STORE    =  1 << 0,$/;"	e	enum:certImportType_t
VSLine	./tests/dpl/include/dpl/test/value_separated_parser.h	/^typedef std::vector<std::string> VSLine;$/;"	t	namespace:VcoreDPL
VSParser	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    VSParser() : m_switchLine(true), m_result(new VSResult()) {}$/;"	f	class:VcoreDPL::VSParser
VSParser	./tests/dpl/include/dpl/test/value_separated_parser.h	/^class VSParser : public AbstractInputParser<VSResultPtr, VSToken>$/;"	c	namespace:VcoreDPL
VSReader	./tests/dpl/include/dpl/test/value_separated_reader.h	/^    VSReader(std::shared_ptr<AbstractInput> wia)$/;"	f	class:VcoreDPL::VSReader
VSReader	./tests/dpl/include/dpl/test/value_separated_reader.h	/^class VSReader : public AbstractInputReader<VSResultPtr, VSToken>$/;"	c	namespace:VcoreDPL
VSResult	./tests/dpl/include/dpl/test/value_separated_parser.h	/^typedef std::vector<VSLine> VSResult;$/;"	t	namespace:VcoreDPL
VSResultPtr	./tests/dpl/include/dpl/test/value_separated_parser.h	/^typedef std::shared_ptr<VSResult> VSResultPtr;$/;"	t	namespace:VcoreDPL
VSToken	./tests/dpl/include/dpl/test/value_separated_tokens.h	/^class VSToken$/;"	c	namespace:VcoreDPL
VSToken	./tests/dpl/src/value_separated_tokens.cpp	/^VSToken::VSToken() : m_newline(true)$/;"	f	class:VcoreDPL::VSToken
VSToken	./tests/dpl/src/value_separated_tokens.cpp	/^VSToken::VSToken(const std::string & c) :  m_newline(false), m_cell(c)$/;"	f	class:VcoreDPL::VSToken
VSTokenizer	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    VSTokenizer() {}$/;"	f	class:VcoreDPL::VSTokenizer
VSTokenizer	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^class VSTokenizer : public AbstractInputTokenizer<VSToken>$/;"	c	namespace:VcoreDPL
Validate	./tests/dpl/src/value_separated_policies.cpp	/^bool CSVParserPolicy::Validate(std::shared_ptr<std::vector<std::vector<std::string> > > & result)$/;"	f	class:VcoreDPL::CSVParserPolicy
ValidationCore	./vcore/vcore/Base64.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/Base64.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CertStoreType.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/CertStoreType.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/Certificate.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/Certificate.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CertificateCollection.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/CertificateCollection.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CertificateConfigReader.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/CertificateConfigReader.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CertificateIdentifier.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CertificateLoader.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/CertificateLoader.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/CryptoInit.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/CryptoInit.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/Ocsp.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/Ocsp.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/ParserSchema.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/ReferenceValidator.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/ReferenceValidator.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/SaxReader.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/SaxReader.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/SignatureData.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/SignatureData.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/SignatureFinder.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/SignatureFinder.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/SignatureReader.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/SignatureReader.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/SignatureValidator.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/SignatureValidator.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/TimeConversion.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/TimeConversion.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/ValidatorCommon.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/ValidatorFactories.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/ValidatorFactories.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/XmlsecAdapter.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/XmlsecAdapter.h	/^namespace ValidationCore {$/;"	n
ValidationCore	./vcore/vcore/exception.cpp	/^namespace ValidationCore {$/;"	n	file:
ValidationCore	./vcore/vcore/exception.h	/^namespace ValidationCore {$/;"	n
ValidationCore_EXCEPTION_H	./vcore/vcore/exception.h	23;"	d
ValidationType	./vcore/vcore/SaxReader.h	/^    enum ValidationType$/;"	g	class:ValidationCore::SaxReader
ValidatorCoreUniversalFree	./vcore/vcore/ValidatorCommon.h	/^struct ValidatorCoreUniversalFree {};$/;"	s	namespace:ValidationCore
ValueReference	./tests/dpl/include/dpl/foreach.h	/^T& ValueReference(T& t)$/;"	f	namespace:VcoreDPL::Private
ValueReference	./tests/dpl/include/dpl/foreach.h	/^const T& ValueReference(const T& t)$/;"	f	namespace:VcoreDPL::Private
ValueType	./tests/dpl/include/dpl/scoped_resource.h	/^    typedef typename ClassPolicy::Type ValueType;$/;"	t	class:VcoreDPL::ScopedResource
VcoreCatch	./vcore/vcore/exception.h	314;"	d
VcoreCertResponseData	./vcore/vcore/cert-svc-client.h	/^} VcoreCertResponseData;$/;"	t	typeref:struct:__anon8
VcoreDPL	./tests/dpl/include/dpl/abstract_input.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/abstract_input_output.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/abstract_output.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/assert.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/binary_queue.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/colors.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/errno_string.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/exception.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/foreach.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/free_deleter.h	/^namespace VcoreDPL$/;"	n
VcoreDPL	./tests/dpl/include/dpl/lexical_cast.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/noncopyable.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/scoped_fclose.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/scoped_free.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/scoped_resource.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/singleton.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/singleton_impl.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/test_results_collector.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/test_runner.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/test_runner_child.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/test_runner_multiprocess.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/value_separated_parser.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/value_separated_policies.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/value_separated_reader.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/include/dpl/test/value_separated_tokens.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./tests/dpl/src/assert.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/binary_queue.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/colors.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/errno_string.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/exception.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/noncopyable.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/test_results_collector.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/test_runner.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/test_runner_child.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/test_runner_multiprocess.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/value_separated_policies.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./tests/dpl/src/value_separated_tokens.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/core/include/dpl/assert.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/include/dpl/colors.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/include/dpl/exception.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/include/dpl/noncopyable.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/include/dpl/singleton.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/include/dpl/singleton_impl.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/core/src/assert.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/core/src/colors.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/core/src/exception.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/core/src/noncopyable.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/log/include/dpl/log/dlog_log_provider.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/log/include/dpl/log/journal_log_provider.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/log/include/dpl/log/log.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/log/include/dpl/log/old_style_log_provider.h	/^namespace VcoreDPL {$/;"	n
VcoreDPL	./vcore/dpl/log/src/abstract_log_provider.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/log/src/dlog_log_provider.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/log/src/journal_log_provider.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/log/src/log.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL	./vcore/dpl/log/src/old_style_log_provider.cpp	/^namespace VcoreDPL {$/;"	n	file:
VcoreDPL_EXCEPTION_H	./tests/dpl/include/dpl/exception.h	23;"	d
VcoreDPL_EXCEPTION_H	./vcore/dpl/core/include/dpl/exception.h	23;"	d
VcoreReThrow	./vcore/vcore/exception.h	304;"	d
VcoreReThrowMsg	./vcore/vcore/exception.h	307;"	d
VcoreRequestData	./vcore/vcore/cert-svc-client.h	/^} VcoreRequestData;$/;"	t	typeref:struct:__anon7
VcoreRequestType	./vcore/vcore/cert-svc-client.h	/^} VcoreRequestType;$/;"	t	typeref:enum:__anon6
VcoreResponseData	./vcore/vcore/cert-svc-client.h	/^} VcoreResponseData;$/;"	t	typeref:struct:__anon10
VcoreThrow	./vcore/vcore/exception.h	293;"	d
VcoreThrowMsg	./vcore/vcore/exception.h	296;"	d
VcoreTry	./vcore/vcore/exception.h	291;"	d
VisitBuckets	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::VisitBuckets(BucketVisitor *visitor) const$/;"	f	class:VcoreDPL::BinaryQueue
WARNING_BEGIN	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *WARNING_BEGIN = BOLD_GOLD_BEGIN;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
WARNING_END	./vcore/dpl/log/src/old_style_log_provider.cpp	/^const char *WARNING_END = BOLD_GOLD_END;$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
WIFI_STORE	./vcore/cert-svc/ccert.h	/^    WIFI_STORE   =  1 << 1,$/;"	e	enum:certImportType_t
WRITEONLY	./tests/dpl/include/dpl/test/test_runner_child.h	/^        WRITEONLY$/;"	e	enum:VcoreDPL::Test::PipeWrapper::Usage
WRONG_ARGUMENTS	./vcore/vcore/CertificateLoader.h	/^        WRONG_ARGUMENTS,$/;"	e	enum:ValidationCore::CertificateLoader::CertificateLoaderResult
Warning	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^        Warning,$/;"	m	class:VcoreDPL::Log::AbstractLogProvider::LogLevel
Write	./tests/dpl/src/binary_queue.cpp	/^size_t BinaryQueue::Write(const BinaryQueue &buffer, size_t bufferSize)$/;"	f	class:VcoreDPL::BinaryQueue
X509	./vcore/vcore/Certificate.h	/^typedef struct x509_st X509;$/;"	t	typeref:struct:x509_st
X509_NAME	./vcore/vcore/Certificate.h	/^typedef struct X509_name_st X509_NAME;$/;"	t	typeref:struct:X509_name_st
X509_STACK_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<STACK_OF(X509), std::function<void(STACK_OF(X509)*)>> X509_STACK_PTR;$/;"	t	namespace:__anon4	file:
X509_STORE_CTX_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<X509_STORE_CTX, std::function<void(X509_STORE_CTX*)>> X509_STORE_CTX_PTR;$/;"	t	namespace:__anon4	file:
X509_STORE_PTR	./vcore/vcore/Ocsp.cpp	/^typedef std::unique_ptr<X509_STORE,     std::function<void(X509_STORE*)>> X509_STORE_PTR;$/;"	t	namespace:__anon4	file:
XML_EMPTY_NAMESPACE	./vcore/vcore/CertificateConfigReader.cpp	/^const std::string XML_EMPTY_NAMESPACE = "";$/;"	m	namespace:__anon5	file:
XML_NAMESPACE	./vcore/vcore/SignatureReader.cpp	/^static const std::string XML_NAMESPACE =$/;"	m	namespace:ValidationCore	file:
XML_NAMESPACE_DIGITALSIG	./vcore/vcore/SignatureReader.cpp	/^static const std::string XML_NAMESPACE_DIGITALSIG =$/;"	m	namespace:ValidationCore	file:
XML_OBJ_NS	./vcore/vcore/SignatureReader.cpp	/^static const std::string XML_OBJ_NS =$/;"	m	namespace:ValidationCore	file:
XmlCollector	./tests/dpl/src/test_results_collector.cpp	/^    XmlCollector() : m_filename(DEFAULT_XML_FILE_NAME) {}$/;"	f	class:VcoreDPL::Test::__anon31::XmlCollector	file:
XmlCollector	./tests/dpl/src/test_results_collector.cpp	/^class XmlCollector :$/;"	c	namespace:VcoreDPL::Test::__anon31	file:
XmlSec	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::XmlSec() :$/;"	f	class:ValidationCore::XmlSec
XmlSec	./vcore/vcore/XmlsecAdapter.h	/^class XmlSec : public VcoreDPL::Noncopyable$/;"	c	namespace:ValidationCore
XmlSecContext	./vcore/vcore/XmlsecAdapter.h	/^        XmlSecContext() :$/;"	f	struct:ValidationCore::XmlSec::XmlSecContext
XmlSecContext	./vcore/vcore/XmlsecAdapter.h	/^    struct XmlSecContext$/;"	s	class:ValidationCore::XmlSec
XmlSecSingleton	./vcore/vcore/XmlsecAdapter.h	/^typedef VcoreDPL::Singleton<XmlSec> XmlSecSingleton;$/;"	t	namespace:ValidationCore
_ASN1_GetTimeT	./vcore/vcore/SignatureValidator.cpp	/^static tm _ASN1_GetTimeT(ASN1_TIME *time)$/;"	f	namespace:__anon1
_BASE64_H_	./vcore/vcore/Base64.h	17;"	d
_CERTIFICATELOADER_H_	./vcore/vcore/CertificateLoader.h	17;"	d
_CERTSVC_CCERT_H_	./vcore/cert-svc/ccert.h	23;"	d
_CERTSVC_CERROR_H_	./vcore/cert-svc/cerror.h	24;"	d
_CERTSVC_CINSTANCE_H_	./vcore/cert-svc/cinstance.h	23;"	d
_CERTSVC_CPKCS12_H_	./vcore/cert-svc/cpkcs12.h	23;"	d
_CERTSVC_CSTRING_H_	./vcore/cert-svc/cstring.h	23;"	d
_CERTSVC_C_API_EXTENDED_H_	./vcore/cert-svc/cprimitives.h	23;"	d
_CERT_SVC_VERIFY_PKCS12	./vcore/vcore/pkcs12.cpp	53;"	d	file:
_PARSERSCHEMA_H_	./vcore/vcore/ParserSchema.h	23;"	d
_PKCS12_H_	./vcore/vcore/pkcs12.h	23;"	d
_SAXREADER_H_	./vcore/vcore/SaxReader.h	25;"	d
_SIGNATUREDATA_H_	./vcore/vcore/SignatureData.h	23;"	d
_VALIDATION_CORE_CERTIFICATECOLLECTION_H_	./vcore/vcore/CertificateCollection.h	23;"	d
_VALIDATION_CORE_CERTIFICATE_CONFIG_READER_H_	./vcore/vcore/CertificateConfigReader.h	23;"	d
_VALIDATION_CORE_CERTSTORETYPE_H_	./vcore/vcore/CertStoreType.h	25;"	d
_VALIDATION_CORE_REFERENCEVALIDATOR_H_	./vcore/vcore/ReferenceValidator.h	23;"	d
_VALIDATION_CORE_SIGNATUREFINDER_H_	./vcore/vcore/SignatureFinder.h	25;"	d
_VALIDATION_CORE_SIGNATUREREADER_H_	./vcore/vcore/SignatureReader.h	23;"	d
_VALIDATION_CORE_SIGNATUREVALIDATOR_H_	./vcore/vcore/SignatureValidator.h	23;"	d
_VALIDATION_CORE_TIMECONVERSION_H_	./vcore/vcore/TimeConversion.h	23;"	d
_VALIDATION_CORE_XMLSECADAPTER_H_	./vcore/vcore/XmlsecAdapter.h	23;"	d
_VALIDATORCOMMON_H_	./vcore/vcore/ValidatorCommon.h	23;"	d
_WRT_ENGINE_SRC_INSTALLER_CORE_VALIDATION_CORE_CERTIFICATEIDENTIFICATOR_H_	./vcore/vcore/CertificateIdentifier.h	25;"	d
_WRT_ENGINE_SRC_INSTALLER_CORE_VALIDATION_CORE_VALIDATORFACTORY_H_	./vcore/vcore/ValidatorFactories.h	23;"	d
_cert_filename_list	./vcore/orig/cert-service.h	/^typedef struct _cert_filename_list {$/;"	s
_cert_svc_linked_list	./vcore/orig/cert-service.h	/^typedef struct _cert_svc_linked_list {$/;"	s
_get_string_field_and_check	./tests/capi/test-certificate.cpp	/^void _get_string_field_and_check($/;"	f
_recv_fixed_lenghth	./vcore/vcore/cert-svc-client.c	/^int _recv_fixed_lenghth(int sockfd, char *buff, int length)$/;"	f
_vcore_client_get_certificate_list_from_store	./vcore/vcore/cert-svc-client.c	/^int _vcore_client_get_certificate_list_from_store(int reqType, CertStoreType storeType, int is_root_app, $/;"	f
add	./vcore/vcore/CertStoreType.cpp	/^void Set::add(Type second)$/;"	f	class:ValidationCore::CertStoreId::Set
add	./vcore/vcore/CertificateIdentifier.h	/^    void add(const Certificate::Fingerprint &fingerprint,$/;"	f	class:ValidationCore::CertificateIdentifier
addBeginTagCallback	./vcore/vcore/ParserSchema.h	/^    void addBeginTagCallback($/;"	f	class:ValidationCore::ParserSchema
addCert	./vcore/vcore/api.cpp	/^    inline size_t addCert(const CertificatePtr &cert) {$/;"	f	class:__anon11::CertSvcInstanceImpl
addEndTagCallback	./vcore/vcore/ParserSchema.h	/^    void addEndTagCallback($/;"	f	class:ValidationCore::ParserSchema
add_file_to_dir	./vcore/server/src/cert-server-logic.c	/^int add_file_to_dir(const char* dir, const char* pGname, const char* pData, size_t dataLen)$/;"	f
add_file_to_system_cert_dir	./vcore/server/src/cert-server-logic.c	/^int add_file_to_system_cert_dir(const char* pGname, const char* pData, size_t dataLen)$/;"	f
add_shared_owner_prefix	./vcore/server/src/cert-server-logic.c	/^char *add_shared_owner_prefix(const char *name)$/;"	f
allStoreType	./tests/pkcs12/new_test_cases.cpp	/^const CertStoreType allStoreType = (CertStoreType)(WIFI_STORE | VPN_STORE | EMAIL_STORE);$/;"	v
allowBrokenChain	./vcore/vcore/XmlsecAdapter.h	/^        bool allowBrokenChain;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
append	./vcore/vcore/Base64.cpp	/^void Base64Decoder::append(const std::string &data)$/;"	f	class:ValidationCore::Base64Decoder
append	./vcore/vcore/Base64.cpp	/^void Base64Encoder::append(const std::string &data)$/;"	f	class:ValidationCore::Base64Encoder
append_to_crt_file	./etc/make-ca-certificate.sh	/^function append_to_crt_file {$/;"	f
asn1GeneralizedTimeToTimeT	./vcore/vcore/TimeConversion.cpp	/^int asn1GeneralizedTimeToTimeT(ASN1_GENERALIZEDTIME *tm, time_t *res)$/;"	f	namespace:ValidationCore
asn1TimeToTimeT	./vcore/vcore/TimeConversion.cpp	/^int asn1TimeToTimeT(ASN1_TIME *t, time_t *res)$/;"	f	namespace:ValidationCore
associated_gname	./vcore/vcore/cert-svc-client.h	/^    char             associated_gname[VCORE_MAX_FILENAME_SIZE * 2 + 1]; \/* for associated_gname *\/$/;"	m	struct:__anon7
attribute	./vcore/vcore/SaxReader.cpp	/^std::string SaxReader::attribute(const std::string &token, ThrowType throwStatus)$/;"	f	class:ValidationCore::SaxReader
back	./vcore/vcore/CertificateCollection.cpp	/^CertificatePtr CertificateCollection::back() const {$/;"	f	class:ValidationCore::CertificateCollection
bare_filename	./vcore/vcore/pkcs12.cpp	/^static char *bare_filename(char *filepath)$/;"	f	file:
base64Decode	./vcore/vcore/api.cpp	/^    int base64Decode($/;"	f	class:__anon11::CertSvcInstanceImpl
base64DecodeTable	./vcore/orig/cert-service-util.c	/^static int base64DecodeTable[256] = {$/;"	v	file:
base64Encode	./vcore/vcore/api.cpp	/^    inline int base64Encode($/;"	f	class:__anon11::CertSvcInstanceImpl
begin	./vcore/dpl/log/src/old_style_log_provider.cpp	/^    const char *const begin;$/;"	m	struct:VcoreDPL::Log::__anon19::ColorMark	file:
begin	./vcore/vcore/CertificateCollection.cpp	/^CertificateCollection::const_iterator CertificateCollection::begin() const {$/;"	f	class:ValidationCore::CertificateCollection
beginNode	./vcore/vcore/ParserSchema.h	/^    void beginNode(DataType &dataContainer)$/;"	f	class:ValidationCore::ParserSchema
blankFunction	./vcore/vcore/CertificateConfigReader.cpp	/^void CertificateConfigReader::blankFunction(CertificateIdentifier &)$/;"	f	class:ValidationCore::CertificateConfigReader
blankFunction	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::blankFunction(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
buffer	./tests/dpl/include/dpl/binary_queue.h	/^        const void *buffer;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
c_certsvc_pkcs12_alias_exists_in_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_alias_exists_in_store(CertStoreType storeType, const char *alias, int *isUnique)$/;"	f
c_certsvc_pkcs12_delete_certificate_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_delete_certificate_from_store(CertStoreType storeType, const char* gname)$/;"	f
c_certsvc_pkcs12_free_aliases_loaded_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_free_aliases_loaded_from_store(CertSvcStoreCertList** certList)$/;"	f
c_certsvc_pkcs12_free_certificates	./vcore/vcore/pkcs12.cpp	/^void c_certsvc_pkcs12_free_certificates(char **certs)$/;"	f
c_certsvc_pkcs12_get_certificate_alias_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_certificate_alias_from_store(CertStoreType storeType, const char *gname, char **alias)$/;"	f
c_certsvc_pkcs12_get_certificate_buffer_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_certificate_buffer_from_store(CertStoreType storeType, const char* gname, char** certBuffer, size_t* certSize)$/;"	f
c_certsvc_pkcs12_get_certificate_list_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_certificate_list_from_store(CertStoreType storeType, int is_root_app, CertSvcStoreCertList** certList, size_t *length)$/;"	f
c_certsvc_pkcs12_get_certificate_status_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_certificate_status_from_store(CertStoreType storeType, const char *gname, CertStatus *status)$/;"	f
c_certsvc_pkcs12_get_end_user_certificate_list_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_end_user_certificate_list_from_store(CertStoreType storeType, CertSvcStoreCertList** certList, size_t *length)$/;"	f
c_certsvc_pkcs12_get_root_certificate_list_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_get_root_certificate_list_from_store(CertStoreType storeType, CertSvcStoreCertList** certList, size_t *length)$/;"	f
c_certsvc_pkcs12_has_password	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_has_password(const char *filepath, int *passworded)$/;"	f
c_certsvc_pkcs12_import_from_file_to_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_import_from_file_to_store(CertStoreType storeTypes, const char *path, const char *password, const char *alias)$/;"	f
c_certsvc_pkcs12_load_certificates_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_load_certificates_from_store(CertStoreType storeType, const char *gname, char ***certs, size_t *ncerts)$/;"	f
c_certsvc_pkcs12_private_key_load_from_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_private_key_load_from_store(CertStoreType storeType, const char *gname, char **certBuffer, size_t *certSize)$/;"	f
c_certsvc_pkcs12_set_certificate_status_to_store	./vcore/vcore/pkcs12.cpp	/^int c_certsvc_pkcs12_set_certificate_status_to_store(CertStoreType storeType, int is_root_app, const char* gname, CertStatus status)$/;"	f
cell	./tests/dpl/src/value_separated_tokens.cpp	/^const std::string & VSToken::cell() const$/;"	f	class:VcoreDPL::VSToken
certBlockCount	./vcore/vcore/cert-svc-client.h	/^    size_t                 certBlockCount;$/;"	m	struct:__anon10
certBlockList	./vcore/vcore/cert-svc-client.h	/^    ResponseCertBlock*     certBlockList; \/\/ array$/;"	m	struct:__anon10
certBuf	./vcore/orig/cert-service.h	/^	cert_svc_mem_buff* certBuf;$/;"	m	struct:__anon27
certChainArr	./tests/capi/common-res.cpp	/^std::string certChainArr[3] = {$/;"	v
certChainSelfSignedArr	./tests/capi/common-res.cpp	/^std::string certChainSelfSignedArr[2] = {$/;"	v
certCount	./vcore/vcore/cert-svc-client.h	/^    size_t                 certCount;$/;"	m	struct:__anon10
certDesc	./vcore/orig/cert-service.h	/^	cert_svc_cert_descriptor* certDesc;$/;"	m	struct:__anon27
certEE	./tests/capi/common-res.cpp	/^const std::string TestData::certEE =$/;"	m	class:TestData	file:
certEE	./tests/vcore/test-common.cpp	/^const std::string TestData::certEE =$/;"	m	class:TestData	file:
certFullField	./tests/capi/common-res.cpp	/^const std::string TestData::certFullField =$/;"	m	class:TestData	file:
certIM	./tests/vcore/test-common.cpp	/^const std::string TestData::certIM =$/;"	m	class:TestData	file:
certImportType_t	./vcore/cert-svc/ccert.h	/^typedef enum certImportType_t {$/;"	g
certLink	./vcore/orig/cert-service.h	/^	cert_svc_linked_list* certLink;$/;"	m	struct:__anon27
certList	./vcore/vcore/cert-svc-client.h	/^    VcoreCertResponseData* certList;$/;"	m	struct:__anon10
certRoot	./tests/vcore/test-common.cpp	/^const std::string TestData::certRoot =$/;"	m	class:TestData	file:
certStatus	./vcore/vcore/cert-svc-client.h	/^    CertStatus             certStatus;$/;"	m	struct:__anon10
certStatus	./vcore/vcore/cert-svc-client.h	/^    CertStatus       certStatus;$/;"	m	struct:__anon7
certStatus_t	./vcore/cert-svc/ccert.h	/^typedef enum certStatus_t {$/;"	g
certType	./vcore/vcore/cert-svc-client.h	/^    CertType         certType;$/;"	m	struct:__anon7
certType_t	./vcore/cert-svc/ccert.h	/^typedef enum certType_t {$/;"	g
certVerisign	./tests/vcore/test-common.cpp	/^const std::string TestData::certVerisign =$/;"	m	class:TestData	file:
cert_store_db	./vcore/server/src/cert-server-main.c	/^sqlite3 *cert_store_db = NULL;$/;"	v
cert_svc_cert_context_final	./vcore/orig/cert-service.c	/^int cert_svc_cert_context_final(CERT_CONTEXT* context)$/;"	f
cert_svc_cert_context_init	./vcore/orig/cert-service.c	/^CERT_CONTEXT* cert_svc_cert_context_init()$/;"	f
cert_svc_cert_descriptor	./vcore/orig/cert-service.h	/^} cert_svc_cert_descriptor;$/;"	t	typeref:struct:__anon25
cert_svc_cert_fld_desc	./vcore/orig/cert-service.h	/^} cert_svc_cert_fld_desc;$/;"	t	typeref:struct:__anon22
cert_svc_client_comm	./vcore/vcore/cert-svc-client.c	/^VcoreResponseData cert_svc_client_comm(VcoreRequestData* pClientData) {$/;"	f
cert_svc_extension_fields	./vcore/orig/cert-service.h	/^} cert_svc_extension_fields;$/;"	t	typeref:struct:__anon24
cert_svc_filename_list	./vcore/orig/cert-service.h	/^} cert_svc_filename_list;$/;"	t	typeref:struct:_cert_filename_list
cert_svc_information_fields	./vcore/orig/cert-service.h	/^} cert_svc_information_fields;$/;"	t	typeref:struct:__anon23
cert_svc_linked_list	./vcore/orig/cert-service.h	/^} cert_svc_linked_list;$/;"	t	typeref:struct:_cert_svc_linked_list
cert_svc_load_file_to_context	./vcore/orig/cert-service.c	/^int cert_svc_load_file_to_context(CERT_CONTEXT* ctx, const char* filePath)$/;"	f
cert_svc_mem_buff	./vcore/orig/cert-service.h	/^} cert_svc_mem_buff;$/;"	t	typeref:struct:__anon26
cert_svc_name_fld_data	./vcore/orig/cert-service.h	/^} cert_svc_name_fld_data;$/;"	t	typeref:struct:__anon21
cert_svc_util_base64_decode	./vcore/orig/cert-service-util.c	/^static int cert_svc_util_base64_decode(const unsigned char *in, int inLen, unsigned char *out, int* outLen)$/;"	f	file:
cert_svc_util_get_extension	./vcore/orig/cert-service-util.c	/^int cert_svc_util_get_extension(const char* filePath, cert_svc_mem_buff* certBuf) {$/;"	f
cert_svc_util_get_file_size	./vcore/orig/cert-service-util.c	/^static int cert_svc_util_get_file_size(const char* filepath, unsigned long int* length)$/;"	f	file:
cert_svc_util_load_file_to_buffer	./vcore/orig/cert-service-util.c	/^int cert_svc_util_load_file_to_buffer(const char* filePath, cert_svc_mem_buff* certBuf)$/;"	f
cert_svc_validity_fld_data	./vcore/orig/cert-service.h	/^} cert_svc_validity_fld_data;$/;"	t	typeref:struct:__anon20
certificate	./tests/capi/common-res.h	/^	std::string certificate;$/;"	m	class:TestData::SigComponents
certificate	./vcore/orig/cert-service.h	/^	cert_svc_mem_buff* certificate;$/;"	m	struct:_cert_svc_linked_list
certificatePath	./vcore/vcore/XmlsecAdapter.h	/^        std::string certificatePath;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
certificatePtr	./vcore/vcore/XmlsecAdapter.h	/^        CertificatePtr certificatePtr;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
certificateVerify	./vcore/vcore/api.cpp	/^    inline int certificateVerify($/;"	f	class:__anon11::CertSvcInstanceImpl
certsvc_base64_decode	./vcore/vcore/api.cpp	/^int certsvc_base64_decode(CertSvcString base64, CertSvcString *message)$/;"	f
certsvc_base64_encode	./vcore/vcore/api.cpp	/^int certsvc_base64_encode(CertSvcString message, CertSvcString *base64)$/;"	f
certsvc_certificate_chain_sort	./vcore/vcore/api.cpp	/^int certsvc_certificate_chain_sort($/;"	f
certsvc_certificate_dup_pubkey_der	./vcore/vcore/api.cpp	/^int certsvc_certificate_dup_pubkey_der($/;"	f
certsvc_certificate_dup_x509	./vcore/vcore/api.cpp	/^int certsvc_certificate_dup_x509(CertSvcCertificate certificate, X509 **cert)$/;"	f
certsvc_certificate_free	./vcore/vcore/api.cpp	/^void certsvc_certificate_free(CertSvcCertificate certificate)$/;"	f
certsvc_certificate_free_x509	./vcore/vcore/api.cpp	/^void certsvc_certificate_free_x509(X509 *x509)$/;"	f
certsvc_certificate_get_not_after	./vcore/vcore/api.cpp	/^int certsvc_certificate_get_not_after($/;"	f
certsvc_certificate_get_not_before	./vcore/vcore/api.cpp	/^int certsvc_certificate_get_not_before($/;"	f
certsvc_certificate_get_string_field	./vcore/vcore/api.cpp	/^int certsvc_certificate_get_string_field($/;"	f
certsvc_certificate_get_visibility	./vcore/vcore/api.cpp	/^int certsvc_certificate_get_visibility(CertSvcCertificate certificate, CertSvcVisibility *visibility)$/;"	f
certsvc_certificate_is_root_ca	./vcore/vcore/api.cpp	/^int certsvc_certificate_is_root_ca(CertSvcCertificate certificate, int *status)$/;"	f
certsvc_certificate_is_signed_by	./vcore/vcore/api.cpp	/^int certsvc_certificate_is_signed_by($/;"	f
certsvc_certificate_list_all_free	./vcore/vcore/api.cpp	/^void certsvc_certificate_list_all_free(CertSvcCertificateList handler)$/;"	f
certsvc_certificate_list_free	./vcore/vcore/api.cpp	/^void certsvc_certificate_list_free(CertSvcCertificateList handler)$/;"	f
certsvc_certificate_list_get_length	./vcore/vcore/api.cpp	/^int certsvc_certificate_list_get_length($/;"	f
certsvc_certificate_list_get_one	./vcore/vcore/api.cpp	/^int certsvc_certificate_list_get_one($/;"	f
certsvc_certificate_new_from_file	./vcore/vcore/api.cpp	/^int certsvc_certificate_new_from_file($/;"	f
certsvc_certificate_new_from_memory	./vcore/vcore/api.cpp	/^int certsvc_certificate_new_from_memory($/;"	f
certsvc_certificate_save_file	./vcore/vcore/api.cpp	/^int certsvc_certificate_save_file($/;"	f
certsvc_certificate_verify	./vcore/vcore/api.cpp	/^int certsvc_certificate_verify($/;"	f
certsvc_certificate_verify_with_caflag	./vcore/vcore/api.cpp	/^int certsvc_certificate_verify_with_caflag($/;"	f
certsvc_get_certificate	./vcore/vcore/api.cpp	/^int certsvc_get_certificate(CertSvcInstance instance,$/;"	f
certsvc_instance_free	./vcore/vcore/api.cpp	/^void certsvc_instance_free(CertSvcInstance instance) {$/;"	f
certsvc_instance_new	./vcore/vcore/api.cpp	/^int certsvc_instance_new(CertSvcInstance *instance) {$/;"	f
certsvc_instance_reset	./vcore/vcore/api.cpp	/^void certsvc_instance_reset(CertSvcInstance instance) {$/;"	f
certsvc_message_verify	./vcore/vcore/api.cpp	/^int certsvc_message_verify($/;"	f
certsvc_pkcs12_check_alias_exists_in_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_check_alias_exists_in_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_delete_certificate_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_delete_certificate_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_dup_evp_pkey_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_dup_evp_pkey_from_store($/;"	f
certsvc_pkcs12_free_certificate_list_loaded_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_free_certificate_list_loaded_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_free_evp_pkey	./vcore/vcore/api.cpp	/^void certsvc_pkcs12_free_evp_pkey(EVP_PKEY* pkey)$/;"	f
certsvc_pkcs12_get_alias_name_for_certificate_in_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_alias_name_for_certificate_in_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_get_certificate_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_certificate_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_get_certificate_info_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_certificate_info_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_get_certificate_list_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_certificate_list_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_get_certificate_status_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_certificate_status_from_store($/;"	f
certsvc_pkcs12_get_end_user_certificate_list_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_end_user_certificate_list_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_get_root_certificate_list_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_get_root_certificate_list_from_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_has_password	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_has_password($/;"	f
certsvc_pkcs12_import_from_file_to_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_import_from_file_to_store(CertSvcInstance instance,$/;"	f
certsvc_pkcs12_load_certificate_list_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_load_certificate_list_from_store($/;"	f
certsvc_pkcs12_private_key_dup_from_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_private_key_dup_from_store($/;"	f
certsvc_pkcs12_private_key_free	./vcore/vcore/api.cpp	/^void certsvc_pkcs12_private_key_free(char *buffer)$/;"	f
certsvc_pkcs12_set_certificate_status_to_store	./vcore/vcore/api.cpp	/^int certsvc_pkcs12_set_certificate_status_to_store(CertSvcInstance instance,$/;"	f
certsvc_string_free	./vcore/vcore/api.cpp	/^void certsvc_string_free(CertSvcString string)$/;"	f
certsvc_string_list_free	./vcore/vcore/api.cpp	/^void certsvc_string_list_free(CertSvcStringList handler)$/;"	f
certsvc_string_list_get_length	./vcore/vcore/api.cpp	/^int certsvc_string_list_get_length($/;"	f
certsvc_string_list_get_one	./vcore/vcore/api.cpp	/^int certsvc_string_list_get_one($/;"	f
certsvc_string_new	./vcore/vcore/api.cpp	/^int certsvc_string_new($/;"	f
certsvc_string_not_managed	./vcore/vcore/api.cpp	/^int certsvc_string_not_managed($/;"	f
certsvc_string_to_cstring	./vcore/vcore/api.cpp	/^void certsvc_string_to_cstring($/;"	f
check	./vcore/vcore/Ocsp.cpp	/^Ocsp::Result Ocsp::check(const SignatureData &data)$/;"	f	class:ValidationCore::Ocsp
check	./vcore/vcore/SignatureValidator.cpp	/^SignatureValidator::Result SignatureValidator::check($/;"	f	class:ValidationCore::SignatureValidator
checkAliasExistsInStore	./vcore/server/src/cert-server-logic.c	/^int checkAliasExistsInStore($/;"	f
checkInternal	./vcore/vcore/Ocsp.cpp	/^Ocsp::Result checkInternal($/;"	f	namespace:ValidationCore
checkInternal	./vcore/vcore/SignatureValidator.cpp	/^static SignatureValidator::Result checkInternal($/;"	f	namespace:ValidationCore
checkList	./vcore/vcore/SignatureValidator.cpp	/^SignatureValidator::Result SignatureValidator::checkList($/;"	f	class:ValidationCore::SignatureValidator
checkObjectReferences	./vcore/vcore/SignatureValidator.cpp	/^static bool checkObjectReferences(const ValidationCore::SignatureData &data)$/;"	f	namespace:__anon1
checkProfileURI	./vcore/vcore/SignatureValidator.cpp	/^static bool checkProfileURI(const ValidationCore::SignatureData &data)$/;"	f	namespace:__anon1
checkReferences	./vcore/vcore/ReferenceValidator.cpp	/^    Result checkReferences(const SignatureData &signatureData){$/;"	f	class:ValidationCore::ReferenceValidator::Impl
checkReferences	./vcore/vcore/ReferenceValidator.cpp	/^ReferenceValidator::Result ReferenceValidator::checkReferences($/;"	f	class:ValidationCore::ReferenceValidator
checkRoleURI	./vcore/vcore/SignatureValidator.cpp	/^static bool checkRoleURI(const ValidationCore::SignatureData &data)$/;"	f	namespace:__anon1
checkValidStoreType	./vcore/vcore/api.cpp	/^    inline bool checkValidStoreType(CertStoreType storeType)$/;"	f	class:__anon11::CertSvcInstanceImpl
check_alias_exist_in_database	./vcore/server/src/cert-server-logic.c	/^int check_alias_exist_in_database($/;"	f
ckmc_remove_alias_with_shared_owner_prefix	./vcore/server/src/cert-server-logic.c	/^int ckmc_remove_alias_with_shared_owner_prefix(const char *name, int *result)$/;"	f
clear	./vcore/vcore/CertificateCollection.cpp	/^void CertificateCollection::clear(void)$/;"	f	class:ValidationCore::CertificateCollection
closeAll	./tests/dpl/src/test_runner_child.cpp	/^void PipeWrapper::closeAll()$/;"	f	class:VcoreDPL::Test::PipeWrapper
closeHelp	./tests/dpl/src/test_runner_child.cpp	/^void PipeWrapper::closeHelp(int desc)$/;"	f	class:VcoreDPL::Test::PipeWrapper
closeOutput	./tests/dpl/src/test_runner_child.cpp	/^int closeOutput() {$/;"	f	namespace:__anon29
commonName	./vcore/orig/cert-service.h	/^	unsigned char* commonName;$/;"	m	struct:__anon21
common_name	./vcore/vcore/cert-svc-client.h	/^    char                   common_name[VCORE_MAX_FILENAME_SIZE* 2 + 1]; \/*for common_name*\/$/;"	m	struct:__anon10
common_name	./vcore/vcore/cert-svc-client.h	/^    char             common_name[VCORE_MAX_FILENAME_SIZE * 2 + 1]; \/* for common_name *\/$/;"	m	struct:__anon7
completeCertificateChain	./vcore/vcore/CertificateCollection.cpp	/^bool CertificateCollection::completeCertificateChain()$/;"	f	class:ValidationCore::CertificateCollection
consoleLevel	./vcore/dpl/log/src/old_style_log_provider.cpp	/^std::map<AbstractLogProvider::LogLevel, ColorMark> consoleLevel = {$/;"	m	namespace:VcoreDPL::Log::__anon19	file:
const_iterator	./vcore/vcore/CertificateCollection.h	/^    typedef CertificateList::const_iterator const_iterator;$/;"	t	class:ValidationCore::CertificateCollection
containObjectReference	./vcore/vcore/SignatureData.cpp	/^bool SignatureData::containObjectReference(const std::string &ref) const$/;"	f	class:ValidationCore::SignatureData
contains	./vcore/vcore/CertStoreType.cpp	/^bool Set::contains(Type second) const$/;"	f	class:ValidationCore::CertStoreId::Set
convertBase64NodeToBigNum	./vcore/vcore/CertificateLoader.cpp	/^bool CertificateLoader::convertBase64NodeToBigNum(const std::string& strNode,$/;"	f	class:ValidationCore::CertificateLoader
countryName	./vcore/orig/cert-service.h	/^	unsigned char* countryName;$/;"	m	struct:__anon21
createCertificateIdentifier	./vcore/vcore/ValidatorFactories.cpp	/^const CertificateIdentifier& createCertificateIdentifier()$/;"	f	namespace:ValidationCore
createFromFile	./vcore/vcore/Certificate.cpp	/^CertificatePtr Certificate::createFromFile(const std::string &location)$/;"	f	class:ValidationCore::Certificate
create_BIO	./vcore/vcore/Ocsp.cpp	/^inline BIO_PTR create_BIO(BIO *bio)$/;"	f	namespace:__anon4
create_OCSP_BASICRESP	./vcore/vcore/Ocsp.cpp	/^inline OCSP_BASICRESP_PTR create_OCSP_BASICRESP(OCSP_BASICRESP *basicResp)$/;"	f	namespace:__anon4
create_OCSP_REQUEST	./vcore/vcore/Ocsp.cpp	/^inline OCSP_REQUEST_PTR create_OCSP_REQUEST()$/;"	f	namespace:__anon4
create_OCSP_RESPONSE	./vcore/vcore/Ocsp.cpp	/^inline OCSP_RESPONSE_PTR create_OCSP_RESPONSE(OCSP_RESPONSE *resp)$/;"	f	namespace:__anon4
create_RAIIstr	./vcore/vcore/Ocsp.cpp	/^inline RAIIstr create_RAIIstr(char *str)$/;"	f	namespace:__anon4
create_SSL_CTX	./vcore/vcore/Ocsp.cpp	/^inline SSL_CTX_PTR create_SSL_CTX()$/;"	f	namespace:__anon4
create_x509_stack	./vcore/vcore/Ocsp.cpp	/^inline X509_STACK_PTR create_x509_stack()$/;"	f	namespace:__anon4
create_x509_store	./vcore/vcore/Ocsp.cpp	/^inline X509_STORE_PTR create_x509_store()$/;"	f	namespace:__anon4
create_x509_store_ctx	./vcore/vcore/Ocsp.cpp	/^inline X509_STORE_CTX_PTR create_x509_store_ctx()$/;"	f	namespace:__anon4
data	./vcore/orig/cert-service.h	/^	unsigned char* data;$/;"	m	struct:__anon22
data	./vcore/orig/cert-service.h	/^	unsigned char* data;$/;"	m	struct:__anon26
dataBlock	./vcore/vcore/cert-svc-client.h	/^    char                   dataBlock[VCORE_MAX_RECV_DATA_SIZE];$/;"	m	struct:__anon10
dataBlock	./vcore/vcore/cert-svc-client.h	/^    char             dataBlock[VCORE_MAX_RECV_DATA_SIZE];$/;"	m	struct:__anon9
dataBlock	./vcore/vcore/cert-svc-client.h	/^    char             dataBlock[VCORE_MAX_SEND_DATA_SIZE];    \/* for cert & key buffer *\/$/;"	m	struct:__anon7
dataBlockLen	./vcore/vcore/cert-svc-client.h	/^    size_t                 dataBlockLen;$/;"	m	struct:__anon10
dataBlockLen	./vcore/vcore/cert-svc-client.h	/^    size_t           dataBlockLen;$/;"	m	struct:__anon7
dataBlockLen	./vcore/vcore/cert-svc-client.h	/^    size_t           dataBlockLen;$/;"	m	struct:__anon9
datasize	./vcore/orig/cert-service.h	/^	int datasize;$/;"	m	struct:__anon22
debug	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void debug(const char *tag, const char *msg)$/;"	f	namespace:VcoreDPL::Log::__anon18
decodeProcent	./vcore/vcore/ReferenceValidator.cpp	/^std::string ReferenceValidator::Impl::decodeProcent(const std::string &path) {$/;"	f	class:ValidationCore::ReferenceValidator::Impl
deinitialize	./vcore/vcore/ParserSchema.h	/^    void deinitialize()$/;"	f	class:ValidationCore::ParserSchema
deinitialize	./vcore/vcore/SaxReader.cpp	/^void SaxReader::deinitialize()$/;"	f	class:ValidationCore::SaxReader
deinitialize	./vcore/vcore/XmlsecAdapter.cpp	/^void XmlSec::deinitialize(void)$/;"	f	class:ValidationCore::XmlSec
del_file_from_dir	./vcore/server/src/cert-server-logic.c	/^int del_file_from_dir(const char* dir, const char *pGname)$/;"	f
del_file_from_system_cert_dir	./vcore/server/src/cert-server-logic.c	/^int del_file_from_system_cert_dir(const char *pGname)$/;"	f
deleteCertificateFromStore	./vcore/server/src/cert-server-logic.c	/^int deleteCertificateFromStore(sqlite3 *db_handle, CertStoreType storeType, const char *pGname) {$/;"	f
deleter	./tests/dpl/include/dpl/binary_queue.h	/^        BufferDeleter deleter;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
dfsCheckDirectories	./vcore/vcore/ReferenceValidator.cpp	/^ReferenceValidator::Result ReferenceValidator::Impl::dfsCheckDirectories($/;"	f	class:ValidationCore::ReferenceValidator::Impl
disabled_certs	./etc/cert_svc_store_db.sql	/^CREATE TABLE disabled_certs ($/;"	t
disabled_certs.certificate	./etc/cert_svc_store_db.sql	/^    gname               TEXT PRIMARY KEY not null,$/;"	F
disabled_certs.gname	./etc/cert_svc_store_db.sql	/^CREATE TABLE disabled_certs ($/;"	F
dlogMacro	./vcore/dpl/log/src/dlog_log_provider.cpp	/^typedef void (*dlogMacro)(const char *, const char *);$/;"	t	namespace:VcoreDPL::Log::__anon18	file:
dlogMacros	./vcore/dpl/log/src/dlog_log_provider.cpp	/^std::map<AbstractLogProvider::LogLevel, dlogMacro> dlogMacros = {$/;"	m	namespace:VcoreDPL::Log::__anon18	file:
dumpNode	./vcore/vcore/SaxReader.cpp	/^void SaxReader::dumpNode(std::string &buffer)$/;"	f	class:ValidationCore::SaxReader
email	./etc/cert_svc_store_db.sql	/^CREATE TABLE email ($/;"	t
email.associated_gname	./etc/cert_svc_store_db.sql	/^    private_key_gname   TEXT,$/;"	F
email.common_name	./etc/cert_svc_store_db.sql	/^    gname               TEXT PRIMARY KEY not null,$/;"	F
email.enabled	./etc/cert_svc_store_db.sql	/^    is_root_cert        INT,$/;"	F
email.gname	./etc/cert_svc_store_db.sql	/^CREATE TABLE email ($/;"	F
email.is_root_app_enabled	./etc/cert_svc_store_db.sql	/^    enabled             INT not null,$/;"	F
email.is_root_cert	./etc/cert_svc_store_db.sql	/^    associated_gname    TEXT,$/;"	F
email.private_key_gname	./etc/cert_svc_store_db.sql	/^    common_name         TEXT not null,$/;"	F
emailAddress	./vcore/orig/cert-service.h	/^	unsigned char* emailAddress;$/;"	m	struct:__anon21
empty	./vcore/vcore/CertificateCollection.cpp	/^bool CertificateCollection::empty() const {$/;"	f	class:ValidationCore::CertificateCollection
enable_disable_cert_status	./vcore/server/src/cert-server-logic.c	/^int enable_disable_cert_status($/;"	f
end	./vcore/dpl/log/src/old_style_log_provider.cpp	/^    const char *const end;$/;"	m	struct:VcoreDPL::Log::__anon19::ColorMark	file:
end	./vcore/vcore/CertificateCollection.cpp	/^CertificateCollection::const_iterator CertificateCollection::end() const {$/;"	f	class:ValidationCore::CertificateCollection
endNode	./vcore/vcore/ParserSchema.h	/^    void endNode(DataType &dataContainer)$/;"	f	class:ValidationCore::ParserSchema
endTAPLine	./tests/dpl/src/test_results_collector.cpp	/^    void endTAPLine()$/;"	f	class:VcoreDPL::Test::TAPCollector	file:
error	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void error(const char *tag, const char *msg)$/;"	f	namespace:VcoreDPL::Log::__anon18
errorBrokenChain	./vcore/vcore/XmlsecAdapter.h	/^        bool errorBrokenChain;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
evaluate_query	./vcore/server/src/cert-server-main.c	/^int evaluate_query(sqlite3 *db_handle, char *query) {$/;"	f
execute_insert_update_query	./vcore/server/src/cert-server-logic.c	/^int execute_insert_update_query(sqlite3 *db_handle, char *query)$/;"	f
execute_select_query	./vcore/server/src/cert-server-logic.c	/^int execute_select_query(sqlite3 *db_handle, char *query, sqlite3_stmt **stmt)$/;"	f
ext	./vcore/orig/cert-service.h	/^	cert_svc_extension_fields ext;$/;"	m	struct:__anon25
fields	./vcore/orig/cert-service.h	/^	cert_svc_cert_fld_desc* fields;$/;"	m	struct:__anon24
file	./vcore/vcore/XmlsecAdapter.cpp	/^    void *file;$/;"	m	struct:__anon3::FileWrapper	file:
fileCloseCallback	./vcore/vcore/XmlsecAdapter.cpp	/^int XmlSec::fileCloseCallback(void *context)$/;"	f	class:ValidationCore::XmlSec
fileExtractPrefix	./vcore/vcore/XmlsecAdapter.cpp	/^void XmlSec::fileExtractPrefix(XmlSecContext *context)$/;"	f	class:ValidationCore::XmlSec
fileMatchCallback	./vcore/vcore/XmlsecAdapter.cpp	/^int XmlSec::fileMatchCallback(const char *filename)$/;"	f	class:ValidationCore::XmlSec
fileNames	./vcore/orig/cert-service.h	/^	cert_svc_filename_list* fileNames;$/;"	m	struct:__anon27
fileOpenCallback	./vcore/vcore/XmlsecAdapter.cpp	/^void* XmlSec::fileOpenCallback(const char *filename)$/;"	f	class:ValidationCore::XmlSec
fileReadCallback	./vcore/vcore/XmlsecAdapter.cpp	/^int XmlSec::fileReadCallback(void *context,$/;"	f	class:ValidationCore::XmlSec
filename	./vcore/orig/cert-service.h	/^	char* filename;$/;"	m	struct:_cert_filename_list
filipCert	./tests/capi/common-res.cpp	/^std::string filipCert =$/;"	v
filipMes	./tests/capi/common-res.cpp	/^std::string filipMes = "Q3plZ28gdHUgc3p1a2Fzej8K";$/;"	v
filipSigSHA1	./tests/capi/common-res.cpp	/^std::string filipSigSHA1 =$/;"	v
filipSigSHA256	./tests/capi/common-res.cpp	/^std::string filipSigSHA256 =$/;"	v
filterByXML	./tests/dpl/src/test_runner.cpp	/^bool TestRunner::filterByXML(std::map<std::string, bool> & casesMap)$/;"	f	class:VcoreDPL::Test::TestRunner
filterGroupsByXmls	./tests/dpl/src/test_runner.cpp	/^bool TestRunner::filterGroupsByXmls(const std::vector<std::string> & files)$/;"	f	class:VcoreDPL::Test::TestRunner
finalize	./vcore/vcore/Base64.cpp	/^bool Base64Decoder::finalize()$/;"	f	class:ValidationCore::Base64Decoder
finalize	./vcore/vcore/Base64.cpp	/^void Base64Encoder::finalize()$/;"	f	class:ValidationCore::Base64Encoder
find	./vcore/vcore/CertificateIdentifier.h	/^    CertStoreId::Set find(const Certificate::Fingerprint &fingerprint) const$/;"	f	class:ValidationCore::CertificateIdentifier
find	./vcore/vcore/CertificateIdentifier.h	/^    CertStoreId::Set find(const CertificatePtr &certificate) const$/;"	f	class:ValidationCore::CertificateIdentifier
find	./vcore/vcore/SignatureFinder.cpp	/^SignatureFinder::Result SignatureFinder::Impl::find(SignatureFileInfoSet &set)$/;"	f	class:ValidationCore::SignatureFinder::Impl
find	./vcore/vcore/SignatureFinder.cpp	/^SignatureFinder::Result SignatureFinder::find(SignatureFileInfoSet &set) {$/;"	f	class:ValidationCore::SignatureFinder
fingerPrintMap	./vcore/vcore/CertificateIdentifier.h	/^    FingerPrintMap fingerPrintMap;$/;"	m	class:ValidationCore::CertificateIdentifier
firstDay	./vcore/orig/cert-service.h	/^	unsigned int firstDay;$/;"	m	struct:__anon20
firstHour	./vcore/orig/cert-service.h	/^	unsigned int firstHour;$/;"	m	struct:__anon20
firstMinute	./vcore/orig/cert-service.h	/^	unsigned int firstMinute;$/;"	m	struct:__anon20
firstMonth	./vcore/orig/cert-service.h	/^	unsigned int firstMonth;$/;"	m	struct:__anon20
firstSecond	./vcore/orig/cert-service.h	/^	unsigned int firstSecond;$/;"	m	struct:__anon20
firstYear	./vcore/orig/cert-service.h	/^	unsigned int firstYear;$/;"	m	struct:__anon20
freePkcsIdListFromStore	./vcore/vcore/api.cpp	/^    inline int freePkcsIdListFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
free_deleter	./tests/dpl/include/dpl/free_deleter.h	/^struct free_deleter$/;"	s	namespace:VcoreDPL
g2	./vcore/vcore/TimeConversion.cpp	37;"	d	file:
g2	./vcore/vcore/TimeConversion.cpp	83;"	d	file:
generate_random_filepath	./vcore/vcore/pkcs12.cpp	/^static int generate_random_filepath(char **filepath)$/;"	f	file:
get	./vcore/vcore/Base64.cpp	/^std::string Base64Decoder::get() const$/;"	f	class:ValidationCore::Base64Decoder
get	./vcore/vcore/Base64.cpp	/^std::string Base64Encoder::get()$/;"	f	class:ValidationCore::Base64Encoder
get	./vcore/vcore/ValidatorCommon.h	/^    T* get(void)$/;"	f	class:ValidationCore::AutoPtr
getAlternativeNameDNS	./vcore/vcore/Certificate.cpp	/^Certificate::AltNameSet Certificate::getAlternativeNameDNS() const$/;"	f	class:ValidationCore::Certificate
getBase64	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getBase64(void) const$/;"	f	class:ValidationCore::Certificate
getCertDetailFromStore	./vcore/vcore/api.cpp	/^    inline int getCertDetailFromStore(CertStoreType storeType,$/;"	f	class:__anon11::CertSvcInstanceImpl
getCertFromList	./vcore/vcore/api.cpp	/^    inline int getCertFromList($/;"	f	class:__anon11::CertSvcInstanceImpl
getCertFromStore	./vcore/vcore/api.cpp	/^    inline int getCertFromStore(CertSvcInstance instance,$/;"	f	class:__anon11::CertSvcInstanceImpl
getCertList	./vcore/vcore/SignatureData.cpp	/^CertificateList SignatureData::getCertList() const$/;"	f	class:ValidationCore::SignatureData
getCertListLen	./vcore/vcore/api.cpp	/^    inline int getCertListLen(const CertSvcCertificateList &handler, size_t *len) {$/;"	f	class:__anon11::CertSvcInstanceImpl
getCertificateAliasFromStore	./vcore/server/src/cert-server-logic.c	/^int getCertificateAliasFromStore(sqlite3 *db_handle, CertStoreType storeType, const char *gname, char *alias)$/;"	f
getCertificateDetailFromStore	./vcore/server/src/cert-server-logic.c	/^int getCertificateDetailFromStore($/;"	f
getCertificateDetailFromSystemStore	./vcore/server/src/cert-server-logic.c	/^int getCertificateDetailFromSystemStore($/;"	f
getCertificateList	./vcore/vcore/CertificateCollection.cpp	/^CertificateList CertificateCollection::getCertificateList() const$/;"	f	class:ValidationCore::CertificateCollection
getCertificateListFromStore	./vcore/server/src/cert-server-logic.c	/^int getCertificateListFromStore($/;"	f
getCertificatePtr	./vcore/vcore/CertificateLoader.h	/^    CertificatePtr getCertificatePtr() const$/;"	f	class:ValidationCore::CertificateLoader
getCertificateStatusFromStore	./vcore/server/src/cert-server-logic.c	/^int getCertificateStatusFromStore($/;"	f
getChain	./vcore/vcore/CertificateCollection.cpp	/^CertificateList CertificateCollection::getChain() const$/;"	f	class:ValidationCore::CertificateCollection
getCommonName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getCommonName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getCountryName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getCountryName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getDER	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getDER(void) const$/;"	f	class:ValidationCore::Certificate
getEmailAddres	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getEmailAddres(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getEndEntityCertificatePtr	./vcore/vcore/SignatureData.cpp	/^CertificatePtr SignatureData::getEndEntityCertificatePtr() const$/;"	f	class:ValidationCore::SignatureData
getField	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getField(FieldType type, int fieldNid) const$/;"	f	class:ValidationCore::Certificate
getField	./vcore/vcore/api.cpp	/^    inline int getField(const CertSvcCertificate &cert,$/;"	f	class:__anon11::CertSvcInstanceImpl
getFileName	./vcore/vcore/SignatureFinder.h	/^    std::string getFileName() const$/;"	f	class:ValidationCore::SignatureFileInfo
getFileNumber	./vcore/vcore/SignatureFinder.h	/^    int getFileNumber() const$/;"	f	class:ValidationCore::SignatureFileInfo
getFingerprint	./vcore/vcore/Certificate.cpp	/^Certificate::Fingerprint Certificate::getFingerprint($/;"	f	class:ValidationCore::Certificate
getFullPath	./vcore/vcore/SignatureFinder.cpp	/^std::string SignatureFinder::Impl::getFullPath(const std::string &file)$/;"	f	class:ValidationCore::SignatureFinder::Impl
getIMEIList	./vcore/vcore/SignatureData.cpp	/^const SignatureData::IMEIList& SignatureData::getIMEIList() const$/;"	f	class:ValidationCore::SignatureData
getIssuerCertFromStore	./vcore/vcore/CertificateCollection.cpp	/^CertificatePtr getIssuerCertFromStore(const CertificatePtr &certPtr)$/;"	f	namespace:__anon14
getKeyUsageString	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getKeyUsageString() const$/;"	f	class:ValidationCore::Certificate
getLocalityName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getLocalityName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getMEIDList	./vcore/vcore/SignatureData.cpp	/^const SignatureData::MEIDList& SignatureData::getMEIDList() const$/;"	f	class:ValidationCore::SignatureData
getMidTime	./vcore/vcore/SignatureValidator.cpp	/^static struct tm getMidTime(const struct tm &tb, const struct tm &ta)$/;"	f	namespace:__anon1
getNameHash	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getNameHash(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getNotAfter	./vcore/vcore/Certificate.cpp	/^time_t Certificate::getNotAfter() const$/;"	f	class:ValidationCore::Certificate
getNotAfter	./vcore/vcore/api.cpp	/^    inline int getNotAfter(const CertSvcCertificate &cert,$/;"	f	class:__anon11::CertSvcInstanceImpl
getNotAfterTime	./vcore/vcore/Certificate.cpp	/^ASN1_TIME* Certificate::getNotAfterTime() const$/;"	f	class:ValidationCore::Certificate
getNotBefore	./vcore/vcore/Certificate.cpp	/^time_t Certificate::getNotBefore() const$/;"	f	class:ValidationCore::Certificate
getNotBefore	./vcore/vcore/api.cpp	/^    inline int getNotBefore(const CertSvcCertificate &cert,$/;"	f	class:__anon11::CertSvcInstanceImpl
getNotBeforeTime	./vcore/vcore/Certificate.cpp	/^ASN1_TIME* Certificate::getNotBeforeTime() const$/;"	f	class:ValidationCore::Certificate
getOCSPURL	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getOCSPURL() const$/;"	f	class:ValidationCore::Certificate
getObjectList	./vcore/vcore/SignatureData.cpp	/^ObjectList SignatureData::getObjectList() const$/;"	f	class:ValidationCore::SignatureData
getOneLine	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getOneLine(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getOrganizationName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getOrganizationName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getOrganizationalUnitName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getOrganizationalUnitName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getPkcsCertificateListFromStore	./vcore/vcore/api.cpp	/^    inline int getPkcsCertificateListFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
getPkcsIdEndUserListFromStore	./vcore/vcore/api.cpp	/^    inline int getPkcsIdEndUserListFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
getPkcsIdListFromStore	./vcore/vcore/api.cpp	/^    inline int getPkcsIdListFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
getPkcsIdRootListFromStore	./vcore/vcore/api.cpp	/^    inline int getPkcsIdRootListFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
getPkcsPrivateKeyFromStore	./vcore/vcore/api.cpp	/^    inline int getPkcsPrivateKeyFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
getProfileURI	./vcore/vcore/SignatureData.cpp	/^std::string SignatureData::getProfileURI() const$/;"	f	class:ValidationCore::SignatureData
getPubkeyDER	./vcore/vcore/api.cpp	/^    inline int getPubkeyDER(const CertSvcCertificate &certificate,$/;"	f	class:__anon11::CertSvcInstanceImpl
getPublicKeyAlgoString	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getPublicKeyAlgoString() const$/;"	f	class:ValidationCore::Certificate
getPublicKeyDER	./vcore/vcore/Certificate.cpp	/^void Certificate::getPublicKeyDER(unsigned char **pubkey, size_t *len) const$/;"	f	class:ValidationCore::Certificate
getPublicKeyString	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getPublicKeyString() const$/;"	f	class:ValidationCore::Certificate
getReader	./vcore/vcore/ParserSchema.h	/^    SaxReader& getReader()$/;"	f	class:ValidationCore::ParserSchema
getReferenceSet	./vcore/vcore/SignatureData.cpp	/^const ReferenceSet& SignatureData::getReferenceSet() const$/;"	f	class:ValidationCore::SignatureData
getRoleURI	./vcore/vcore/SignatureData.cpp	/^std::string SignatureData::getRoleURI() const$/;"	f	class:ValidationCore::SignatureData
getRootCaCertificatePtr	./vcore/vcore/SignatureData.cpp	/^CertificatePtr SignatureData::getRootCaCertificatePtr() const$/;"	f	class:ValidationCore::SignatureData
getRunIgnored	./tests/dpl/src/test_runner.cpp	/^bool TestRunner::getRunIgnored() const$/;"	f	class:VcoreDPL::Test::TestRunner
getSerialNumberString	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getSerialNumberString() const$/;"	f	class:ValidationCore::Certificate
getSignatureAlgorithmString	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getSignatureAlgorithmString() const$/;"	f	class:ValidationCore::Certificate
getSignatureFileName	./vcore/vcore/SignatureData.cpp	/^std::string SignatureData::getSignatureFileName() const$/;"	f	class:ValidationCore::SignatureData
getSignatureNumber	./vcore/vcore/SignatureData.cpp	/^int SignatureData::getSignatureNumber() const$/;"	f	class:ValidationCore::SignatureData
getStateOrProvinceName	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getStateOrProvinceName(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getStorageType	./vcore/vcore/SignatureData.cpp	/^const CertStoreId::Set& SignatureData::getStorageType() const$/;"	f	class:ValidationCore::SignatureData
getStringFromList	./vcore/vcore/api.cpp	/^    inline int getStringFromList($/;"	f	class:__anon11::CertSvcInstanceImpl
getStringListLen	./vcore/vcore/api.cpp	/^    inline int getStringListLen($/;"	f	class:__anon11::CertSvcInstanceImpl
getText	./vcore/vcore/ParserSchema.h	/^    std::string& getText()$/;"	f	class:ValidationCore::ParserSchema
getUID	./vcore/vcore/Certificate.cpp	/^std::string Certificate::getUID(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getVersion	./vcore/vcore/Certificate.cpp	/^long Certificate::getVersion() const$/;"	f	class:ValidationCore::Certificate
getVisibility	./vcore/vcore/api.cpp	/^    int getVisibility(CertSvcCertificate certificate, CertSvcVisibility *visibility)$/;"	f	class:__anon11::CertSvcInstanceImpl
getVisibilityLevel	./vcore/vcore/SignatureData.cpp	/^CertStoreId::Type SignatureData::getVisibilityLevel() const$/;"	f	class:ValidationCore::SignatureData
getX509	./vcore/vcore/Certificate.cpp	/^X509* Certificate::getX509(void) const$/;"	f	class:ValidationCore::Certificate
getX509Copy	./vcore/vcore/api.cpp	/^    inline int getX509Copy(const CertSvcCertificate &certificate, X509** cert)$/;"	f	class:__anon11::CertSvcInstanceImpl
getX509Name	./vcore/vcore/Certificate.cpp	/^X509_NAME *Certificate::getX509Name(FieldType type) const$/;"	f	class:ValidationCore::Certificate
getXMLNode	./tests/dpl/src/test_runner.cpp	/^std::string getXMLNode(xmlNodePtr node)$/;"	f	namespace:__anon33
get_certificate_buffer_from_store	./vcore/server/src/cert-server-logic.c	/^int get_certificate_buffer_from_store($/;"	f
get_complete_path	./vcore/server/src/cert-server-logic.c	/^char *get_complete_path(const char *str1, const char *str2)$/;"	f
get_content_into_buf_DER	./vcore/orig/cert-service-util.c	/^int get_content_into_buf_DER(unsigned char* content, cert_svc_mem_buff* cert)$/;"	f
get_content_into_buf_PEM	./vcore/orig/cert-service-util.c	/^int get_content_into_buf_PEM(unsigned char* content, cert_svc_mem_buff* cert)$/;"	f
gname	./vcore/cert-svc/ccert.h	/^    char *gname;            \/\/ keyfile group name$/;"	m	struct:CertSvcStoreCertList_t
gname	./vcore/vcore/cert-svc-client.h	/^    char             gname[VCORE_MAX_FILENAME_SIZE * 2 + 1]; \/* for gname *\/$/;"	m	struct:__anon7
gname	./vcore/vcore/cert-svc-client.h	/^    char             gname[VCORE_MAX_FILENAME_SIZE * 2 + 1];$/;"	m	struct:__anon8
google2nd	./tests/capi/common-res.cpp	/^const std::string TestData::google2nd =$/;"	m	class:TestData	file:
google2nd	./tests/vcore/test-common.cpp	/^const std::string TestData::google2nd =$/;"	m	class:TestData	file:
google3rd	./tests/vcore/test-common.cpp	/^const std::string TestData::google3rd =$/;"	m	class:TestData	file:
googleCA	./tests/capi/common-res.cpp	/^const std::string TestData::googleCA =$/;"	m	class:TestData	file:
googleCA	./tests/vcore/test-common.cpp	/^const std::string TestData::googleCA =$/;"	m	class:TestData	file:
handle_crt_pem_file_installation	./vcore/vcore/pkcs12.cpp	/^int handle_crt_pem_file_installation(CertStoreType storeType, const char *path, const char *alias)$/;"	f
hexCharToInt	./vcore/vcore/CertificateConfigReader.cpp	/^int hexCharToInt(char c)$/;"	f	namespace:__anon5
hexToInt	./vcore/vcore/ReferenceValidator.cpp	/^int ReferenceValidator::Impl::hexToInt(char a) {$/;"	f	class:ValidationCore::ReferenceValidator::Impl
impl	./vcore/vcore/api.cpp	/^inline CertSvcInstanceImpl *impl(CertSvcInstance instance) {$/;"	f	namespace:__anon11
info	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void info(const char *tag, const char *msg)$/;"	f	namespace:VcoreDPL::Log::__anon18
info	./vcore/orig/cert-service.h	/^	cert_svc_information_fields info;$/;"	m	struct:__anon25
initialize	./vcore/vcore/CertificateConfigReader.cpp	/^void CertificateConfigReader::initialize($/;"	f	class:ValidationCore::CertificateConfigReader
initialize	./vcore/vcore/ParserSchema.h	/^    void initialize($/;"	f	class:ValidationCore::ParserSchema
initialize	./vcore/vcore/SaxReader.cpp	/^void SaxReader::initialize($/;"	f	class:ValidationCore::SaxReader
initialize	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::initialize($/;"	f	class:ValidationCore::SignatureReader
initialize_db	./vcore/server/src/cert-server-main.c	/^int initialize_db(void)$/;"	f
initialize_req_data	./vcore/vcore/cert-svc-client.c	/^void initialize_req_data(VcoreRequestData *pData)$/;"	f
initialize_res_data	./vcore/vcore/cert-svc-client.c	/^void initialize_res_data(VcoreResponseData *pData)$/;"	f
initialize_store_in_dir	./etc/initialize_store_db.sh	/^function initialize_store_in_dir {$/;"	f
installCertificateToStore	./vcore/server/src/cert-server-logic.c	/^int installCertificateToStore($/;"	f
install_crt_file	./vcore/vcore/pkcs12.cpp	/^int install_crt_file($/;"	f
install_pem_file_format_to_store	./vcore/vcore/pkcs12.cpp	/^int install_pem_file_format_to_store(CertStoreType storeType, const char *certBuffer, size_t certLength,$/;"	f
instance	./tests/pkcs12/new_test_cases.cpp	/^static CertSvcInstance instance;$/;"	v	file:
int_to_CertStatus	./vcore/server/src/cert-server-logic.c	/^static CertStatus int_to_CertStatus(int intval)$/;"	f	file:
isAliasUnique	./vcore/vcore/cert-svc-client.h	/^    int                    isAliasUnique;$/;"	m	struct:__anon10
isAuthorSignature	./vcore/vcore/SignatureData.cpp	/^bool SignatureData::isAuthorSignature() const$/;"	f	class:ValidationCore::SignatureData
isCA	./vcore/vcore/Certificate.cpp	/^int Certificate::isCA() const$/;"	f	class:ValidationCore::Certificate
isCertListSorted	./vcore/vcore/SignatureData.cpp	/^bool SignatureData::isCertListSorted() const$/;"	f	class:ValidationCore::SignatureData
isChain	./vcore/vcore/CertificateCollection.cpp	/^bool CertificateCollection::isChain() const$/;"	f	class:ValidationCore::CertificateCollection
isContainsVis	./vcore/vcore/CertStoreType.cpp	/^bool Set::isContainsVis() const$/;"	f	class:ValidationCore::CertStoreId::Set
isDistributorSignature	./vcore/vcore/ReferenceValidator.cpp	/^    inline bool isDistributorSignature(const char *cstring) const$/;"	f	class:ValidationCore::ReferenceValidator::Impl	file:
isEmpty	./vcore/vcore/CertStoreType.cpp	/^bool Set::isEmpty() const$/;"	f	class:ValidationCore::CertStoreId::Set
isEmpty	./vcore/vcore/SaxReader.cpp	/^bool SaxReader::isEmpty(void)$/;"	f	class:ValidationCore::SaxReader
isNewLine	./tests/dpl/src/value_separated_tokens.cpp	/^bool VSToken::isNewLine()$/;"	f	class:VcoreDPL::VSToken
isReady	./tests/dpl/src/test_runner_child.cpp	/^bool PipeWrapper::isReady()$/;"	f	class:VcoreDPL::Test::PipeWrapper
isRootCA	./vcore/vcore/api.cpp	/^    inline int isRootCA(const CertSvcCertificate &cert, int *status){$/;"	f	class:__anon11::CertSvcInstanceImpl
isRootCert	./vcore/vcore/Certificate.cpp	/^bool Certificate::isRootCert()$/;"	f	class:ValidationCore::Certificate
isSignedBy	./vcore/vcore/Certificate.cpp	/^bool Certificate::isSignedBy(const CertificatePtr &parent) const$/;"	f	class:ValidationCore::Certificate
isSignedBy	./vcore/vcore/api.cpp	/^    inline int isSignedBy(const CertSvcCertificate &child,$/;"	f	class:__anon11::CertSvcInstanceImpl
is_root_app	./vcore/vcore/cert-svc-client.h	/^    int              is_root_app;$/;"	m	struct:__anon7
issuer	./vcore/orig/cert-service.h	/^	cert_svc_name_fld_data issuer;$/;"	m	struct:__anon23
issuerStr	./vcore/orig/cert-service.h	/^	unsigned char* issuerStr;$/;"	m	struct:__anon23
issuerUID	./vcore/orig/cert-service.h	/^	unsigned char* issuerUID;$/;"	m	struct:__anon23
journalLevel	./vcore/dpl/log/src/journal_log_provider.cpp	/^std::map<AbstractLogProvider::LogLevel, int> journalLevel = {$/;"	m	namespace:VcoreDPL::Log::__anon17	file:
left	./tests/dpl/include/dpl/binary_queue.h	/^        size_t left;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
lexical_cast	./tests/dpl/include/dpl/lexical_cast.h	/^TargetType lexical_cast(const SourceType &data)$/;"	f	namespace:VcoreDPL
load	./vcore/vcore/CertificateCollection.cpp	/^void CertificateCollection::load(const CertificateList &certList)$/;"	f	class:ValidationCore::CertificateCollection
loadCertificate	./vcore/vcore/CertificateLoader.cpp	/^CertificateLoader::CertificateLoaderResult CertificateLoader::loadCertificate($/;"	f	class:ValidationCore::CertificateLoader
loadCertificateBasedOnDSAComponents	./vcore/vcore/CertificateLoader.cpp	/^    loadCertificateBasedOnDSAComponents(const std::string& strP,$/;"	f	class:ValidationCore::CertificateLoader
loadCertificateBasedOnExponentAndModulus	./vcore/vcore/CertificateLoader.cpp	/^    loadCertificateBasedOnExponentAndModulus(const std::string &m_modulus,$/;"	f	class:ValidationCore::CertificateLoader
loadCertificateBasedOnSubjectName	./vcore/vcore/CertificateLoader.cpp	/^    loadCertificateBasedOnSubjectName(const std::string &subjectName)$/;"	f	class:ValidationCore::CertificateLoader
loadCertificateFromRawData	./vcore/vcore/CertificateLoader.cpp	/^CertificateLoader::CertificateLoaderResult CertificateLoader::loadCertificateFromRawData(const std::string &rawData)$/;"	f	class:ValidationCore::CertificateLoader
loadCertificateWithECKEY	./vcore/vcore/CertificateLoader.cpp	/^    loadCertificateWithECKEY(const std::string &curveName,$/;"	f	class:ValidationCore::CertificateLoader
loadCertificatesFromStore	./vcore/server/src/cert-server-logic.c	/^int loadCertificatesFromStore($/;"	f
loadDERCertificateMemory	./vcore/vcore/XmlsecAdapter.cpp	/^void XmlSec::loadDERCertificateMemory(XmlSecContext *context,$/;"	f	class:ValidationCore::XmlSec
loadPEMCertificateFile	./vcore/vcore/XmlsecAdapter.cpp	/^void XmlSec::loadPEMCertificateFile(XmlSecContext *context,$/;"	f	class:ValidationCore::XmlSec
localityName	./vcore/orig/cert-service.h	/^	unsigned char* localityName;$/;"	m	struct:__anon21
m_allocatedStringSet	./vcore/vcore/api.cpp	/^    std::set<char *> m_allocatedStringSet;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_allowChildLogs	./tests/dpl/include/dpl/test/test_runner.h	/^    bool m_allowChildLogs;$/;"	m	class:VcoreDPL::Test::TestRunner
m_b64	./vcore/vcore/Base64.h	/^    BIO *m_b64;$/;"	m	class:ValidationCore::Base64Encoder
m_beginFunctionMap	./vcore/vcore/ParserSchema.h	/^    FunctionMap m_beginFunctionMap;$/;"	m	class:ValidationCore::ParserSchema
m_bmem	./vcore/vcore/Base64.h	/^    BIO *m_bmem;$/;"	m	class:ValidationCore::Base64Encoder
m_buckets	./tests/dpl/include/dpl/binary_queue.h	/^    BucketList m_buckets;$/;"	m	class:VcoreDPL::BinaryQueue
m_cell	./tests/dpl/include/dpl/test/value_separated_tokens.h	/^    std::string m_cell;$/;"	m	class:VcoreDPL::VSToken
m_certList	./vcore/vcore/CertificateCollection.h	/^    CertificateList m_certList;$/;"	m	class:ValidationCore::CertificateCollection
m_certList	./vcore/vcore/SignatureData.h	/^    CertificateList m_certList;$/;"	m	class:ValidationCore::SignatureData
m_certificateCounter	./vcore/vcore/api.cpp	/^    size_t m_certificateCounter;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_certificateDomain	./vcore/vcore/CertificateConfigReader.h	/^    CertStoreId::Type m_certificateDomain;$/;"	m	class:ValidationCore::CertificateConfigReader
m_certificateMap	./vcore/vcore/api.cpp	/^    std::map<size_t, CertificatePtr> m_certificateMap;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_certificatePtr	./vcore/vcore/CertificateLoader.h	/^    CertificatePtr m_certificatePtr;$/;"	m	class:ValidationCore::CertificateLoader
m_certificateSorted	./vcore/vcore/SignatureData.h	/^    bool m_certificateSorted;$/;"	m	class:ValidationCore::SignatureData
m_certificateStorage	./vcore/vcore/CertStoreType.h	/^    Type m_certificateStorage;$/;"	m	class:ValidationCore::CertStoreId::Set
m_className	./tests/dpl/include/dpl/exception.h	/^    std::string m_className;$/;"	m	class:VcoreDPL::Exception
m_className	./vcore/dpl/core/include/dpl/exception.h	/^    std::string m_className;$/;"	m	class:VcoreDPL::Exception
m_className	./vcore/vcore/exception.h	/^    std::string m_className;$/;"	m	class:ValidationCore::Exception
m_collectedData	./tests/dpl/src/test_results_collector.cpp	/^    std::stringstream m_collectedData;$/;"	m	class:VcoreDPL::Test::TAPCollector	file:
m_collectionStatus	./vcore/vcore/CertificateCollection.h	/^    CollectionStatus m_collectionStatus;$/;"	m	class:ValidationCore::CertificateCollection
m_collectors	./tests/dpl/include/dpl/test/test_runner.h	/^    TestResultsCollectors m_collectors;$/;"	m	class:VcoreDPL::Test::TestRunner
m_constructorsMap	./tests/dpl/include/dpl/test/test_results_collector.h	/^    static ConstructorsMap m_constructorsMap;$/;"	m	class:VcoreDPL::Test::TestResultsCollectorBase
m_constructorsMap	./tests/dpl/src/test_results_collector.cpp	/^    m_constructorsMap;$/;"	m	class:VcoreDPL::Test::TestResultsCollectorBase	file:
m_count	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t m_count;$/;"	m	class:VcoreDPL::Test::__anon31::Statistic	file:
m_currentGroup	./tests/dpl/include/dpl/test/test_runner.h	/^    std::string m_currentGroup;$/;"	m	class:VcoreDPL::Test::TestRunner
m_currentGroup	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_currentGroup;$/;"	m	class:VcoreDPL::Test::__anon31::CSVCollector	file:
m_currentGroup	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_currentGroup;$/;"	m	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
m_currentGroup	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_currentGroup;$/;"	m	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
m_data	./vcore/vcore/ValidatorCommon.h	/^    mutable T *m_data;$/;"	m	class:ValidationCore::AutoPtr
m_dir	./vcore/vcore/SignatureFinder.cpp	/^    std::string m_dir;$/;"	m	class:ValidationCore::SignatureFinder::Impl	file:
m_dirpath	./vcore/vcore/ReferenceValidator.cpp	/^    std::string m_dirpath;$/;"	m	class:ValidationCore::ReferenceValidator::Impl	file:
m_dsaKeyGComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyGComponent;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeyJComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyJComponent;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeyPComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyPComponent;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeyPGenCounter	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyPGenCounter;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeyQComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyQComponent;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeySeedComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeySeedComponent;$/;"	m	class:ValidationCore::SignatureReader
m_dsaKeyYComponent	./vcore/vcore/SignatureReader.h	/^    std::string m_dsaKeyYComponent;$/;"	m	class:ValidationCore::SignatureReader
m_endFunctionMap	./vcore/vcore/ParserSchema.h	/^    FunctionMap m_endFunctionMap;$/;"	m	class:ValidationCore::ParserSchema
m_exceptionCount	./tests/dpl/include/dpl/exception.h	/^    static unsigned int m_exceptionCount;$/;"	m	class:VcoreDPL::Exception
m_exceptionCount	./tests/dpl/src/exception.cpp	/^unsigned int Exception::m_exceptionCount = 0;$/;"	m	class:VcoreDPL::Exception	file:
m_exceptionCount	./vcore/dpl/core/include/dpl/exception.h	/^    static unsigned int m_exceptionCount;$/;"	m	class:VcoreDPL::Exception
m_exceptionCount	./vcore/dpl/core/src/exception.cpp	/^unsigned int Exception::m_exceptionCount = 0;$/;"	m	class:VcoreDPL::Exception	file:
m_exceptionCount	./vcore/vcore/exception.cpp	/^unsigned int Exception::m_exceptionCount = 0;$/;"	m	class:ValidationCore::Exception	file:
m_exceptionCount	./vcore/vcore/exception.h	/^    static unsigned int m_exceptionCount;$/;"	m	class:ValidationCore::Exception
m_exponent	./vcore/vcore/SignatureReader.h	/^    std::string m_exponent;$/;"	m	class:ValidationCore::SignatureReader
m_failed	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t m_failed;$/;"	m	class:VcoreDPL::Test::__anon31::Statistic	file:
m_fileName	./vcore/vcore/SignatureData.h	/^    std::string m_fileName;$/;"	m	class:ValidationCore::SignatureData
m_fileName	./vcore/vcore/SignatureFinder.h	/^    std::string m_fileName;$/;"	m	class:ValidationCore::SignatureFileInfo
m_fileNumber	./vcore/vcore/SignatureFinder.h	/^    int m_fileNumber;$/;"	m	class:ValidationCore::SignatureFileInfo
m_filename	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_filename;$/;"	m	class:VcoreDPL::Test::TAPCollector	file:
m_filename	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_filename;$/;"	m	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
m_filename	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_filename;$/;"	m	class:VcoreDPL::Test::__anon31::XmlCollector	file:
m_finalized	./vcore/vcore/Base64.h	/^    bool m_finalized;$/;"	m	class:ValidationCore::Base64Decoder
m_finalized	./vcore/vcore/Base64.h	/^    bool m_finalized;$/;"	m	class:ValidationCore::Base64Encoder
m_finished	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    bool m_finished;$/;"	m	class:VcoreDPL::VSTokenizer
m_fp	./tests/dpl/src/test_results_collector.cpp	/^    ScopedFClose m_fp;$/;"	m	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
m_fp	./tests/dpl/src/test_results_collector.cpp	/^    ScopedFClose m_fp;$/;"	m	class:VcoreDPL::Test::__anon31::XmlCollector	file:
m_function	./tests/dpl/include/dpl/exception.h	/^    std::string m_function;$/;"	m	class:VcoreDPL::Exception
m_function	./vcore/dpl/core/include/dpl/exception.h	/^    std::string m_function;$/;"	m	class:VcoreDPL::Exception
m_function	./vcore/vcore/exception.h	/^    std::string m_function;$/;"	m	class:ValidationCore::Exception
m_functions	./vcore/vcore/ParserSchema.h	/^    ParserType *m_functions;$/;"	m	class:ValidationCore::ParserSchema
m_groupsStats	./tests/dpl/src/test_results_collector.cpp	/^    std::map<std::string, Statistic> m_groupsStats;$/;"	m	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
m_groupsStats	./tests/dpl/src/test_results_collector.cpp	/^    std::map<std::string, Statistic> m_groupsStats;$/;"	m	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
m_idListCounter	./vcore/vcore/api.cpp	/^    size_t m_idListCounter;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_idListMap	./vcore/vcore/api.cpp	/^    std::map<size_t, std::vector<size_t> > m_idListMap;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_identifier	./vcore/vcore/SignatureData.h	/^    std::string m_identifier;$/;"	m	class:ValidationCore::SignatureData
m_ignored	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t m_ignored;$/;"	m	class:VcoreDPL::Test::__anon31::Statistic	file:
m_imeiList	./vcore/vcore/SignatureData.h	/^    IMEIList m_imeiList;$/;"	m	class:ValidationCore::SignatureData
m_impl	./vcore/vcore/ReferenceValidator.h	/^    Impl *m_impl;$/;"	m	class:ValidationCore::ReferenceValidator
m_impl	./vcore/vcore/SignatureFinder.h	/^    Impl *m_impl;$/;"	m	class:ValidationCore::SignatureFinder
m_initialized	./vcore/vcore/XmlsecAdapter.h	/^    bool m_initialized;$/;"	m	class:ValidationCore::XmlSec
m_input	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    std::shared_ptr<AbstractInput> m_input;$/;"	m	class:VcoreDPL::AbstractInputTokenizer
m_input	./vcore/vcore/Base64.h	/^    std::string m_input;$/;"	m	class:ValidationCore::Base64Decoder
m_lastException	./tests/dpl/include/dpl/exception.h	/^    static Exception* m_lastException;$/;"	m	class:VcoreDPL::Exception
m_lastException	./tests/dpl/src/exception.cpp	/^Exception* Exception::m_lastException = NULL;$/;"	m	class:VcoreDPL::Exception	file:
m_lastException	./vcore/dpl/core/include/dpl/exception.h	/^    static Exception* m_lastException;$/;"	m	class:VcoreDPL::Exception
m_lastException	./vcore/dpl/core/src/exception.cpp	/^Exception* Exception::m_lastException = NULL;$/;"	m	class:VcoreDPL::Exception	file:
m_lastException	./vcore/vcore/exception.cpp	/^Exception* Exception::m_lastException = NULL;$/;"	m	class:ValidationCore::Exception	file:
m_lastException	./vcore/vcore/exception.h	/^    static Exception* m_lastException;$/;"	m	class:ValidationCore::Exception
m_level	./vcore/dpl/log/include/dpl/log/log.h	/^    AbstractLogProvider::LogLevel m_level;$/;"	m	class:VcoreDPL::Log::LogSystem
m_line	./tests/dpl/include/dpl/exception.h	/^    int m_line;$/;"	m	class:VcoreDPL::Exception
m_line	./vcore/dpl/core/include/dpl/exception.h	/^    int m_line;$/;"	m	class:VcoreDPL::Exception
m_line	./vcore/vcore/exception.h	/^    int m_line;$/;"	m	class:ValidationCore::Exception
m_meidList	./vcore/vcore/SignatureData.h	/^    MEIDList m_meidList;$/;"	m	class:ValidationCore::SignatureData
m_message	./tests/dpl/include/dpl/exception.h	/^    std::string m_message;$/;"	m	class:VcoreDPL::Exception
m_message	./tests/dpl/include/dpl/test/test_runner.h	/^        std::string m_message;$/;"	m	class:VcoreDPL::Test::TestRunner::Ignored
m_message	./tests/dpl/include/dpl/test/test_runner.h	/^        std::string m_message;$/;"	m	class:VcoreDPL::Test::TestRunner::TestFailed
m_message	./vcore/dpl/core/include/dpl/exception.h	/^    std::string m_message;$/;"	m	class:VcoreDPL::Exception
m_message	./vcore/vcore/exception.h	/^    std::string m_message;$/;"	m	class:ValidationCore::Exception
m_modulus	./vcore/vcore/SignatureReader.h	/^    std::string m_modulus;$/;"	m	class:ValidationCore::SignatureReader
m_nameCurveURI	./vcore/vcore/SignatureReader.h	/^    std::string m_nameCurveURI;$/;"	m	class:ValidationCore::SignatureReader
m_newline	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    bool m_newline;$/;"	m	class:VcoreDPL::VSTokenizer
m_newline	./tests/dpl/include/dpl/test/value_separated_tokens.h	/^    bool m_newline;$/;"	m	class:VcoreDPL::VSToken
m_noHash	./vcore/vcore/XmlsecAdapter.h	/^    bool m_noHash;$/;"	m	class:ValidationCore::XmlSec
m_objectList	./vcore/vcore/SignatureData.h	/^    ObjectList m_objectList;$/;"	m	class:ValidationCore::SignatureData
m_output	./tests/dpl/src/test_results_collector.cpp	/^    std::ofstream m_output;$/;"	m	class:VcoreDPL::Test::TAPCollector	file:
m_output	./vcore/vcore/Base64.h	/^    std::string m_output;$/;"	m	class:ValidationCore::Base64Decoder
m_outputBuffer	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_outputBuffer;$/;"	m	class:VcoreDPL::Test::__anon31::XmlCollector	file:
m_pList	./vcore/vcore/XmlsecAdapter.h	/^    std::list<std::string>* m_pList;$/;"	m	class:ValidationCore::XmlSec
m_parser	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    std::unique_ptr<ParserBase> m_parser;$/;"	m	class:VcoreDPL::AbstractInputReader
m_parserSchema	./vcore/vcore/CertificateConfigReader.h	/^    ParserSchema<CertificateConfigReader, CertificateIdentifier> m_parserSchema;$/;"	m	class:ValidationCore::CertificateConfigReader
m_parserSchema	./vcore/vcore/SignatureReader.h	/^    ParserSchema<SignatureReader, SignatureData> m_parserSchema;$/;"	m	class:ValidationCore::SignatureReader
m_partialHash	./vcore/vcore/XmlsecAdapter.h	/^    bool m_partialHash;$/;"	m	class:ValidationCore::XmlSec
m_passed	./tests/dpl/src/test_results_collector.cpp	/^    std::size_t m_passed;$/;"	m	class:VcoreDPL::Test::__anon31::Statistic	file:
m_path	./tests/dpl/include/dpl/exception.h	/^    std::string m_path;$/;"	m	class:VcoreDPL::Exception
m_path	./vcore/dpl/core/include/dpl/exception.h	/^    std::string m_path;$/;"	m	class:VcoreDPL::Exception
m_path	./vcore/vcore/exception.h	/^    std::string m_path;$/;"	m	class:ValidationCore::Exception
m_pipefd	./tests/dpl/include/dpl/test/test_runner_child.h	/^    int m_pipefd[2];$/;"	m	class:VcoreDPL::Test::PipeWrapper
m_profileURI	./vcore/vcore/SignatureData.h	/^    std::string m_profileURI;$/;"	m	class:ValidationCore::SignatureData
m_providerCtor	./vcore/dpl/log/include/dpl/log/log.h	/^    std::unordered_map<std::string, ProviderFn> m_providerCtor;$/;"	m	class:VcoreDPL::Log::LogSystem
m_providers	./vcore/dpl/log/include/dpl/log/log.h	/^    AbstractLogProviderPtrList m_providers;$/;"	m	class:VcoreDPL::Log::LogSystem
m_publicKey	./vcore/vcore/SignatureReader.h	/^    std::string m_publicKey;$/;"	m	class:ValidationCore::SignatureReader
m_queue	./tests/dpl/include/dpl/test/value_separated_tokenizer.h	/^    BinaryQueue m_queue;$/;"	m	class:VcoreDPL::VSTokenizer
m_reader	./vcore/vcore/ParserSchema.h	/^    SaxReader m_reader;$/;"	m	class:ValidationCore::ParserSchema
m_reader	./vcore/vcore/SaxReader.h	/^    xmlTextReaderPtr m_reader;$/;"	m	class:ValidationCore::SaxReader
m_reason	./tests/dpl/include/dpl/exception.h	/^    Exception *m_reason;$/;"	m	class:VcoreDPL::Exception
m_reason	./vcore/dpl/core/include/dpl/exception.h	/^    Exception *m_reason;$/;"	m	class:VcoreDPL::Exception
m_reason	./vcore/vcore/exception.h	/^    Exception *m_reason;$/;"	m	class:ValidationCore::Exception
m_referenceSet	./vcore/vcore/SignatureData.h	/^    ReferenceSet m_referenceSet;$/;"	m	class:ValidationCore::SignatureData
m_result	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    VSResultPtr m_result;$/;"	m	class:VcoreDPL::VSParser
m_resultBuffer	./tests/dpl/src/test_results_collector.cpp	/^    std::string m_resultBuffer;$/;"	m	class:VcoreDPL::Test::__anon31::XmlCollector	file:
m_roleURI	./vcore/vcore/SignatureData.h	/^    std::string m_roleURI;$/;"	m	class:ValidationCore::SignatureData
m_runIgnored	./tests/dpl/include/dpl/test/test_runner.h	/^    bool m_runIgnored;$/;"	m	class:VcoreDPL::Test::TestRunner
m_selectedTestGroupSet	./tests/dpl/include/dpl/test/test_runner.h	/^    SelectedTestGroupSet m_selectedTestGroupSet;$/;"	m	class:VcoreDPL::Test::TestRunner
m_selectedTestNamesSet	./tests/dpl/include/dpl/test/test_runner.h	/^    SelectedTestNameSet m_selectedTestNamesSet;$/;"	m	class:VcoreDPL::Test::TestRunner
m_signatureNumber	./vcore/vcore/SignatureData.h	/^    int m_signatureNumber;$/;"	m	class:ValidationCore::SignatureData
m_signaturePropertiesCounter	./vcore/vcore/SignatureReader.h	/^    int m_signaturePropertiesCounter;$/;"	m	class:ValidationCore::SignatureReader
m_signatureRegexp	./vcore/vcore/ReferenceValidator.cpp	/^    pcrecpp::RE m_signatureRegexp;$/;"	m	class:ValidationCore::ReferenceValidator::Impl	file:
m_signatureRegexp	./vcore/vcore/SignatureFinder.cpp	/^    pcrecpp::RE m_signatureRegexp;$/;"	m	class:ValidationCore::SignatureFinder::Impl	file:
m_size	./tests/dpl/include/dpl/binary_queue.h	/^    size_t m_size;$/;"	m	class:VcoreDPL::BinaryQueue
m_startTestId	./tests/dpl/include/dpl/test/test_runner.h	/^    std::string m_startTestId;$/;"	m	class:VcoreDPL::Test::TestRunner
m_stats	./tests/dpl/src/test_results_collector.cpp	/^    Statistic m_stats;$/;"	m	class:VcoreDPL::Test::__anon31::ConsoleCollector	file:
m_stats	./tests/dpl/src/test_results_collector.cpp	/^    Statistic m_stats;$/;"	m	class:VcoreDPL::Test::__anon31::HtmlCollector	file:
m_stats	./tests/dpl/src/test_results_collector.cpp	/^    Statistic m_stats;$/;"	m	class:VcoreDPL::Test::__anon31::XmlCollector	file:
m_storeIdSet	./vcore/vcore/SignatureData.h	/^    CertStoreId::Set m_storeIdSet;$/;"	m	class:ValidationCore::SignatureData
m_stringListCounter	./vcore/vcore/api.cpp	/^    size_t m_stringListCounter;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_stringListMap	./vcore/vcore/api.cpp	/^    std::map<size_t, std::vector<std::string> > m_stringListMap;$/;"	m	class:__anon11::CertSvcInstanceImpl	file:
m_switchLine	./tests/dpl/include/dpl/test/value_separated_parser.h	/^    bool m_switchLine;$/;"	m	class:VcoreDPL::VSParser
m_tag	./vcore/dpl/log/include/dpl/log/dlog_log_provider.h	/^    std::unique_ptr<char[]> m_tag;$/;"	m	class:VcoreDPL::Log::DLOGLogProvider
m_targetRestrictionObjectFound	./vcore/vcore/SignatureReader.h	/^    bool m_targetRestrictionObjectFound;$/;"	m	class:ValidationCore::SignatureReader
m_terminate	./tests/dpl/include/dpl/test/test_runner.h	/^    bool m_terminate;$/;"	m	class:VcoreDPL::Test::TestRunner
m_terminateHandler	./tests/dpl/include/dpl/exception.h	/^    static void (*m_terminateHandler)();$/;"	m	class:VcoreDPL::Exception
m_terminateHandler	./tests/dpl/src/exception.cpp	/^void (*Exception::m_terminateHandler)() = NULL;$/;"	m	namespace:VcoreDPL	file:
m_terminateHandler	./vcore/dpl/core/include/dpl/exception.h	/^    static void (*m_terminateHandler)();$/;"	m	class:VcoreDPL::Exception
m_terminateHandler	./vcore/dpl/core/src/exception.cpp	/^void (*Exception::m_terminateHandler)() = NULL;$/;"	m	namespace:VcoreDPL	file:
m_terminateHandler	./vcore/vcore/exception.cpp	/^void (*Exception::m_terminateHandler)() = NULL;$/;"	m	namespace:ValidationCore	file:
m_terminateHandler	./vcore/vcore/exception.h	/^    static void (*m_terminateHandler)();$/;"	m	class:ValidationCore::Exception
m_testGroups	./tests/dpl/include/dpl/test/test_runner.h	/^    TestCaseGroupMap m_testGroups;$/;"	m	class:VcoreDPL::Test::TestRunner
m_testIndex	./tests/dpl/src/test_results_collector.cpp	/^    int m_testIndex;$/;"	m	class:VcoreDPL::Test::TAPCollector	file:
m_textNode	./vcore/vcore/ParserSchema.h	/^    std::string m_textNode;$/;"	m	class:ValidationCore::ParserSchema
m_tokenizer	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    std::unique_ptr<TokenizerBase> m_tokenizer;$/;"	m	class:VcoreDPL::AbstractInputReader
m_totalAssertions	./tests/dpl/include/dpl/test/test_runner.h	/^    std::atomic<int> m_totalAssertions;$/;"	m	class:VcoreDPL::Test::TestRunner
m_value	./tests/dpl/include/dpl/scoped_resource.h	/^    ValueType m_value;$/;"	m	class:VcoreDPL::ScopedResource
m_visitor	./tests/dpl/include/dpl/binary_queue.h	/^        BucketVisitor *m_visitor;$/;"	m	class:VcoreDPL::BinaryQueue::BucketVisitorCall
m_x509	./vcore/vcore/Certificate.h	/^    X509 *m_x509;$/;"	m	class:ValidationCore::Certificate
magdaCert	./tests/capi/common-res.cpp	/^std::string magdaCert =$/;"	v
magdaMes	./tests/capi/common-res.cpp	/^std::string magdaMes = "c2lnbmVkIGRhdGEK";$/;"	v
magdaSig	./tests/capi/common-res.cpp	/^std::string magdaSig = "MC0CFQCL2pDA4S\/zsHkDUCWOq7K6ebG14gIUHHoLsbeUd+BEqBXB6XjmcTncBRA=";$/;"	v
main	./tests/capi/main.cpp	/^int main (int argc, char *argv[])$/;"	f
main	./tests/pkcs12/pkcs12_test.cpp	/^int main (int argc, char *argv[]) {$/;"	f
main	./tests/vcore/main.cpp	/^int main (int argc, char *argv[])$/;"	f
main	./vcore/server/src/cert-server-main.c	/^int main(void)$/;"	f
makeChainBySignature	./vcore/vcore/SignatureValidator.cpp	/^SignatureValidator::Result SignatureValidator::makeChainBySignature($/;"	f	class:ValidationCore::SignatureValidator
makeDataBySignature	./vcore/vcore/SignatureValidator.cpp	/^static int makeDataBySignature($/;"	f	namespace:ValidationCore
message	./tests/capi/common-res.h	/^	std::string message;$/;"	m	class:TestData::SigComponents
name	./tests/dpl/include/dpl/test/test_runner.h	/^        std::string name;$/;"	m	struct:VcoreDPL::Test::TestRunner::TestCaseStruct
name	./vcore/orig/cert-service.h	/^	unsigned char* name;$/;"	m	struct:__anon22
name	./vcore/vcore/SaxReader.cpp	/^std::string SaxReader::name()$/;"	f	class:ValidationCore::SaxReader
namespaceURI	./vcore/vcore/SaxReader.cpp	/^std::string SaxReader::namespaceURI()$/;"	f	class:ValidationCore::SaxReader
namespaceUri	./vcore/vcore/ParserSchema.h	/^        std::string namespaceUri;$/;"	m	struct:ValidationCore::ParserSchema::TagDescription
next	./vcore/cert-svc/ccert.h	/^    struct CertSvcStoreCertList_t *next;$/;"	m	struct:CertSvcStoreCertList_t	typeref:struct:CertSvcStoreCertList_t::CertSvcStoreCertList_t
next	./vcore/orig/cert-service.h	/^	struct _cert_filename_list* next;$/;"	m	struct:_cert_filename_list	typeref:struct:_cert_filename_list::_cert_filename_list
next	./vcore/orig/cert-service.h	/^	struct _cert_svc_linked_list* next;$/;"	m	struct:_cert_svc_linked_list	typeref:struct:_cert_svc_linked_list::_cert_svc_linked_list
next	./vcore/vcore/SaxReader.cpp	/^bool SaxReader::next()$/;"	f	class:ValidationCore::SaxReader
next	./vcore/vcore/SaxReader.cpp	/^void SaxReader::next(const std::string &token)$/;"	f	class:ValidationCore::SaxReader
normalizeXMLTag	./tests/dpl/src/test_runner.cpp	/^void TestRunner::normalizeXMLTag(std::string& str, const std::string& testcase)$/;"	f	class:VcoreDPL::Test::TestRunner
numOfFields	./vcore/orig/cert-service.h	/^	unsigned int numOfFields;$/;"	m	struct:__anon24
open_db	./vcore/server/src/cert-server-main.c	/^int open_db(sqlite3 **db_handle, const char *db_path) {$/;"	f
operator !	./tests/dpl/include/dpl/scoped_resource.h	/^    bool operator !() const$/;"	f	class:VcoreDPL::ScopedResource
operator ()	./tests/dpl/include/dpl/free_deleter.h	/^    void operator()(void *p) { std::free(p); }$/;"	f	struct:VcoreDPL::free_deleter
operator ()	./tests/dpl/src/binary_queue.cpp	/^void BinaryQueue::BucketVisitorCall::operator()(Bucket *bucket) const$/;"	f	class:VcoreDPL::BinaryQueue::BucketVisitorCall
operator ->	./vcore/vcore/ValidatorCommon.h	/^    T* operator->()$/;"	f	class:ValidationCore::AutoPtr
operator <	./tests/dpl/include/dpl/test/test_runner.h	/^        bool operator <(const TestCaseStruct &other) const$/;"	f	struct:VcoreDPL::Test::TestRunner::TestCaseStruct
operator <	./vcore/vcore/ParserSchema.h	/^        bool operator<(const TagDescription &second) const$/;"	f	struct:ValidationCore::ParserSchema::TagDescription
operator <	./vcore/vcore/SignatureFinder.h	/^    bool operator<(const SignatureFileInfo &second) const$/;"	f	class:ValidationCore::SignatureFileInfo
operator <<	./vcore/dpl/log/include/dpl/log/log.h	/^    NullStream& operator<<(const T&)$/;"	f	class:VcoreDPL::Log::NullStream
operator =	./tests/dpl/include/dpl/exception.h	/^    const Exception &operator =(const Exception &other)$/;"	f	class:VcoreDPL::Exception
operator =	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue &BinaryQueue::operator=(const BinaryQueue &other)$/;"	f	class:VcoreDPL::BinaryQueue
operator =	./vcore/dpl/core/include/dpl/exception.h	/^    const Exception &operator =(const Exception &other)$/;"	f	class:VcoreDPL::Exception
operator =	./vcore/vcore/ValidatorCommon.h	/^    AutoPtr & operator=(const AutoPtr &second)$/;"	f	class:ValidationCore::AutoPtr
operator =	./vcore/vcore/exception.h	/^    const Exception &operator =(const Exception &other)$/;"	f	class:ValidationCore::Exception
operator ==	./tests/dpl/include/dpl/test/test_runner.h	/^        bool operator ==(const TestCaseStruct &other) const$/;"	f	struct:VcoreDPL::Test::TestRunner::TestCaseStruct
operator UnknownBoolType	./tests/dpl/include/dpl/scoped_resource.h	/^    operator UnknownBoolType() const$/;"	f	class:VcoreDPL::ScopedResource
organizationName	./vcore/orig/cert-service.h	/^	unsigned char* organizationName;$/;"	m	struct:__anon21
organizationUnitName	./vcore/orig/cert-service.h	/^	unsigned char* organizationUnitName;$/;"	m	struct:__anon21
param	./tests/dpl/include/dpl/binary_queue.h	/^        void *param;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
pedantic	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void pedantic(const char *tag, const char *msg)$/;"	f	namespace:VcoreDPL::Log::__anon18
pkcsDeleteCertFromStore	./vcore/vcore/api.cpp	/^    inline int pkcsDeleteCertFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsGetAliasNameForCertInStore	./vcore/vcore/api.cpp	/^    inline int pkcsGetAliasNameForCertInStore(CertStoreType storeType,$/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsGetCertStatusFromStore	./vcore/vcore/api.cpp	/^    inline int pkcsGetCertStatusFromStore($/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsHasPassword	./vcore/vcore/api.cpp	/^    inline int pkcsHasPassword($/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsImportToStore	./vcore/vcore/api.cpp	/^    inline int pkcsImportToStore($/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsNameIsUniqueInStore	./vcore/vcore/api.cpp	/^    inline int pkcsNameIsUniqueInStore($/;"	f	class:__anon11::CertSvcInstanceImpl
pkcsSetCertStatusToStore	./vcore/vcore/api.cpp	/^    inline int pkcsSetCertStatusToStore(CertStoreType storeType,$/;"	f	class:__anon11::CertSvcInstanceImpl
prepareToCheck	./vcore/vcore/SignatureValidator.cpp	/^int prepareToCheck(SignatureData &outData)$/;"	f	namespace:ValidationCore
privateHandler	./vcore/cert-svc/ccert.h	/^    size_t privateHandler;$/;"	m	struct:CertSvcCertificateList_t
privateHandler	./vcore/cert-svc/ccert.h	/^    size_t privateHandler;$/;"	m	struct:CertSvcCertificate_t
privateHandler	./vcore/cert-svc/cstring.h	/^    char *privateHandler;$/;"	m	struct:CertSvcString_t
privateHandler	./vcore/cert-svc/cstring.h	/^    size_t privateHandler;$/;"	m	struct:CertSvcStringList_t
privateInstance	./vcore/cert-svc/ccert.h	/^    CertSvcInstance privateInstance;$/;"	m	struct:CertSvcCertificateList_t
privateInstance	./vcore/cert-svc/ccert.h	/^    CertSvcInstance privateInstance;$/;"	m	struct:CertSvcCertificate_t
privateInstance	./vcore/cert-svc/cstring.h	/^    CertSvcInstance privateInstance;$/;"	m	struct:CertSvcStringList_t
privateInstance	./vcore/cert-svc/cstring.h	/^    CertSvcInstance privateInstance;$/;"	m	struct:CertSvcString_t
privateLength	./vcore/cert-svc/cstring.h	/^    size_t privateLength;$/;"	m	struct:CertSvcString_t
privatePtr	./vcore/cert-svc/cinstance.h	/^    void *privatePtr;$/;"	m	struct:CertSvcInstance_t
private_key_gname	./vcore/vcore/cert-svc-client.h	/^    char             private_key_gname[VCORE_MAX_FILENAME_SIZE * 2 + 1]; \/* for private_key_gname *\/$/;"	m	struct:__anon7
proc	./tests/dpl/include/dpl/test/test_runner.h	/^        TestCase proc;$/;"	m	struct:VcoreDPL::Test::TestRunner::TestCaseStruct
ptr	./tests/dpl/include/dpl/binary_queue.h	/^        const void *ptr;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
pubKey	./vcore/orig/cert-service.h	/^	unsigned char* pubKey;$/;"	m	struct:__anon23
pubKeyAlgo	./vcore/orig/cert-service.h	/^	unsigned char* pubKeyAlgo;$/;"	m	struct:__anon23
pubKeyLen	./vcore/orig/cert-service.h	/^	int pubKeyLen;$/;"	m	struct:__anon23
read	./vcore/vcore/CertificateConfigReader.cpp	/^void CertificateConfigReader::read(CertificateIdentifier &identificator)$/;"	f	class:ValidationCore::CertificateConfigReader
read	./vcore/vcore/ParserSchema.h	/^    void read(DataType &dataContainer)$/;"	f	class:ValidationCore::ParserSchema
read	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::read(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
readHelp	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::Status PipeWrapper::readHelp(void *buf, int size, time_t deadline)$/;"	f	class:VcoreDPL::Test::PipeWrapper
read_from_file	./vcore/vcore/pkcs12.cpp	/^int read_from_file(const char *fileName, char **certBuffer, int *length)$/;"	f
receive	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::Status PipeWrapper::receive(int &code, std::string &data, time_t deadline)$/;"	f	class:VcoreDPL::Test::PipeWrapper
receive	./tests/dpl/src/test_runner_multiprocess.cpp	/^PipeWrapper::Status SimplePipeWrapper::receive(std::string &data, bool &empty, time_t deadline)$/;"	f	class:VcoreDPL::Test::SimplePipeWrapper
referenceSet	./vcore/vcore/XmlsecAdapter.h	/^        ReferenceSet referenceSet;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
release_cert_list	./vcore/orig/cert-service-util.c	/^int release_cert_list(cert_svc_linked_list* certList)$/;"	f
release_certificate_buf	./vcore/orig/cert-service-util.c	/^int release_certificate_buf(cert_svc_mem_buff* certBuf)$/;"	f
release_certificate_data	./vcore/orig/cert-service-util.c	/^int release_certificate_data(cert_svc_cert_descriptor* certDesc)$/;"	f
release_filename_list	./vcore/orig/cert-service-util.c	/^int release_filename_list(cert_svc_filename_list* fileNames)$/;"	f
released	./vcore/vcore/XmlsecAdapter.cpp	/^    bool released;$/;"	m	struct:__anon3::FileWrapper	file:
removeCert	./vcore/vcore/api.cpp	/^    inline void removeCert(const CertSvcCertificate &cert) {$/;"	f	class:__anon11::CertSvcInstanceImpl
removeCertList	./vcore/vcore/api.cpp	/^    inline void removeCertList(const CertSvcCertificateList &handler) {$/;"	f	class:__anon11::CertSvcInstanceImpl
removeCertListAll	./vcore/vcore/api.cpp	/^    inline void removeCertListAll(const CertSvcCertificateList &handler) {$/;"	f	class:__anon11::CertSvcInstanceImpl
removeString	./vcore/vcore/api.cpp	/^    inline void removeString(const CertSvcString &handler)$/;"	f	class:__anon11::CertSvcInstanceImpl
removeStringList	./vcore/vcore/api.cpp	/^    inline void removeStringList(const CertSvcStringList &handler)$/;"	f	class:__anon11::CertSvcInstanceImpl
reqType	./vcore/vcore/cert-svc-client.h	/^    VcoreRequestType reqType;$/;"	m	struct:__anon7
reset	./vcore/vcore/Base64.cpp	/^void Base64Decoder::reset()$/;"	f	class:ValidationCore::Base64Decoder
reset	./vcore/vcore/Base64.cpp	/^void Base64Encoder::reset()$/;"	f	class:ValidationCore::Base64Encoder
reset	./vcore/vcore/api.cpp	/^    inline void reset(){$/;"	f	class:__anon11::CertSvcInstanceImpl
result	./vcore/vcore/cert-svc-client.h	/^    int                    result;$/;"	m	struct:__anon10
s_prefixPath	./vcore/vcore/XmlsecAdapter.cpp	/^std::string XmlSec::s_prefixPath;$/;"	m	class:ValidationCore::XmlSec	file:
s_prefixPath	./vcore/vcore/XmlsecAdapter.h	/^    static std::string s_prefixPath;$/;"	m	class:ValidationCore::XmlSec
saveCertificateToStore	./vcore/server/src/cert-server-logic.c	/^int saveCertificateToStore($/;"	f
saveCertificateToSystemStore	./vcore/server/src/cert-server-logic.c	/^int saveCertificateToSystemStore($/;"	f
saveToFile	./vcore/vcore/api.cpp	/^    inline int saveToFile(const CertSvcCertificate &certificate,$/;"	f	class:__anon11::CertSvcInstanceImpl
searchCertByHash	./vcore/vcore/CertificateCollection.cpp	/^CertificatePtr searchCertByHash(const std::string &dir, const CertificatePtr &certPtr)$/;"	f	namespace:__anon14
secondDay	./vcore/orig/cert-service.h	/^	unsigned int secondDay;$/;"	m	struct:__anon20
secondHour	./vcore/orig/cert-service.h	/^	unsigned int secondHour;$/;"	m	struct:__anon20
secondMinute	./vcore/orig/cert-service.h	/^	unsigned int secondMinute;$/;"	m	struct:__anon20
secondMonth	./vcore/orig/cert-service.h	/^	unsigned int secondMonth;$/;"	m	struct:__anon20
secondSecond	./vcore/orig/cert-service.h	/^	unsigned int secondSecond;$/;"	m	struct:__anon20
secondYear	./vcore/orig/cert-service.h	/^	unsigned int secondYear;$/;"	m	struct:__anon20
send	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::Status PipeWrapper::send(int code, std::string &message)$/;"	f	class:VcoreDPL::Test::PipeWrapper
send	./tests/dpl/src/test_runner_multiprocess.cpp	/^PipeWrapper::Status SimplePipeWrapper::send(std::string &message)$/;"	f	class:VcoreDPL::Test::SimplePipeWrapper
serialNumber	./vcore/orig/cert-service.h	/^	unsigned int serialNumber;$/;"	m	struct:__anon23
setCertificateStatusToStore	./vcore/server/src/cert-server-logic.c	/^int setCertificateStatusToStore($/;"	f
setPartialHashList	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::Result XmlSec::setPartialHashList(const std::list<std::string>& targetUri)$/;"	f	class:ValidationCore::XmlSec
setReference	./vcore/vcore/SignatureData.cpp	/^void SignatureData::setReference(const ReferenceSet &referenceSet)$/;"	f	class:ValidationCore::SignatureData
setSortedCertificateList	./vcore/vcore/SignatureData.cpp	/^void SignatureData::setSortedCertificateList(const CertificateList &list)$/;"	f	class:ValidationCore::SignatureData
setStorageType	./vcore/vcore/SignatureData.cpp	/^void SignatureData::setStorageType(const CertStoreId::Set &storeIdSet)$/;"	f	class:ValidationCore::SignatureData
setUsage	./tests/dpl/src/test_runner_child.cpp	/^void PipeWrapper::setUsage(Usage usage)$/;"	f	class:VcoreDPL::Test::PipeWrapper
set_request_data	./vcore/vcore/cert-svc-client.c	/^VcoreRequestData* set_request_data($/;"	f
sigAlgo	./vcore/orig/cert-service.h	/^	unsigned char* sigAlgo;$/;"	m	struct:__anon23
signature	./tests/capi/common-res.h	/^	std::string signature;$/;"	m	class:TestData::SigComponents
signatureAlgo	./vcore/orig/cert-service.h	/^	unsigned char* signatureAlgo;$/;"	m	struct:__anon25
signatureData	./vcore/orig/cert-service.h	/^	unsigned char* signatureData;$/;"	m	struct:__anon25
signatureFile	./vcore/vcore/XmlsecAdapter.h	/^        std::string signatureFile;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
signatureLen	./vcore/orig/cert-service.h	/^	int signatureLen;$/;"	m	struct:__anon25
size	./tests/dpl/include/dpl/binary_queue.h	/^        size_t size;$/;"	m	struct:VcoreDPL::BinaryQueue::Bucket
size	./vcore/orig/cert-service.h	/^	unsigned int size;$/;"	m	struct:__anon26
size	./vcore/vcore/CertificateCollection.cpp	/^size_t CertificateCollection::size() const {$/;"	f	class:ValidationCore::CertificateCollection
sort	./vcore/vcore/CertificateCollection.cpp	/^bool CertificateCollection::sort()$/;"	f	class:ValidationCore::CertificateCollection
sortCollection	./vcore/vcore/CertificateCollection.cpp	/^void CertificateCollection::sortCollection()$/;"	f	class:ValidationCore::CertificateCollection
sortCollection	./vcore/vcore/api.cpp	/^    inline int sortCollection(CertSvcCertificate *certificate_array, size_t size) {$/;"	f	class:__anon11::CertSvcInstanceImpl
ssl	./etc/cert_svc_store_db.sql	/^CREATE TABLE ssl ($/;"	t
ssl.certificate	./etc/cert_svc_store_db.sql	/^    gname               TEXT not null,$/;"	F
ssl.common_name	./etc/cert_svc_store_db.sql	/^    subject_hash        TEXT not null,$/;"	F
ssl.enabled	./etc/cert_svc_store_db.sql	/^    common_name         TEXT not null,$/;"	F
ssl.file_hash	./etc/cert_svc_store_db.sql	/^    certificate         TEXT not null,$/;"	F
ssl.gname	./etc/cert_svc_store_db.sql	/^CREATE TABLE ssl ($/;"	F
ssl.is_root_app_enabled	./etc/cert_svc_store_db.sql	/^    enabled             INT not null,$/;"	F
ssl.subject_hash	./etc/cert_svc_store_db.sql	/^    file_hash           TEXT not null,$/;"	F
stateOrProvinceName	./vcore/orig/cert-service.h	/^	unsigned char* stateOrProvinceName;$/;"	m	struct:__anon21
status	./vcore/cert-svc/ccert.h	/^    CertStatus status;$/;"	m	struct:CertSvcStoreCertList_t
status	./vcore/vcore/cert-svc-client.h	/^    CertStatus       status;$/;"	m	struct:__anon8
storeType	./vcore/cert-svc/ccert.h	/^    CertStoreType storeType;$/;"	m	struct:CertSvcStoreCertList_t
storeType	./vcore/vcore/cert-svc-client.h	/^    CertStoreType    storeType;$/;"	m	struct:__anon7
storeType	./vcore/vcore/cert-svc-client.h	/^    CertStoreType    storeType;$/;"	m	struct:__anon8
stringNew	./vcore/vcore/api.cpp	/^    inline int stringNew($/;"	f	class:__anon11::CertSvcInstanceImpl
subject	./vcore/orig/cert-service.h	/^	cert_svc_name_fld_data subject;$/;"	m	struct:__anon23
subjectGoogleCA	./tests/capi/common-res.cpp	/^const std::string TestData::subjectGoogleCA = "\/C=US\/O=VeriSign, Inc.\/OU=Class 3 Public Primary Certification Authority";$/;"	m	class:TestData	file:
subjectStr	./vcore/orig/cert-service.h	/^	unsigned char* subjectStr;$/;"	m	struct:__anon23
subjectUID	./vcore/orig/cert-service.h	/^	unsigned char* subjectUID;$/;"	m	struct:__anon23
tagName	./vcore/vcore/ParserSchema.h	/^        std::string tagName;$/;"	m	struct:ValidationCore::ParserSchema::TagDescription
textNode	./vcore/vcore/ParserSchema.h	/^    void textNode(DataType &dataContainer)$/;"	f	class:ValidationCore::ParserSchema
title	./vcore/cert-svc/ccert.h	/^    char *title;            \/\/ common Name \/ Alias provided by the user$/;"	m	struct:CertSvcStoreCertList_t
title	./vcore/vcore/cert-svc-client.h	/^    char             title[VCORE_MAX_FILENAME_SIZE * 2 + 1];$/;"	m	struct:__anon8
toBase64String	./vcore/vcore/CertificateCollection.cpp	/^std::string CertificateCollection::toBase64String() const$/;"	f	class:ValidationCore::CertificateCollection
toBinaryString	./tests/dpl/src/test_runner_child.cpp	/^std::string PipeWrapper::toBinaryString(int data)$/;"	f	class:VcoreDPL::Test::PipeWrapper
toBinaryString	./vcore/vcore/CertificateCollection.cpp	/^inline std::string toBinaryString(int data)$/;"	f	namespace:__anon14
tokenCertificateDomain	./vcore/vcore/CertificateConfigReader.cpp	/^void CertificateConfigReader::tokenCertificateDomain(CertificateIdentifier &)$/;"	f	class:ValidationCore::CertificateConfigReader
tokenEndDSAGComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAGComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAJComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAJComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAKeyValue	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAKeyValue(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAPComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAPComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAPGenCounterComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAPGenCounterComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAQComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAQComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSASeedComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSASeedComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndDSAYComponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndDSAYComponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndECKeyValue	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndECKeyValue(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndFingerprintSHA1	./vcore/vcore/CertificateConfigReader.cpp	/^void CertificateConfigReader::tokenEndFingerprintSHA1($/;"	f	class:ValidationCore::CertificateConfigReader
tokenEndIdentifier	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndIdentifier(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndKeyExponent	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndKeyExponent(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndKeyInfo	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndKeyInfo(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndKeyModulus	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndKeyModulus(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndObject	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndObject(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndPublicKey	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndPublicKey(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenEndRSAKeyValue	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndRSAKeyValue(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndX509Certificate	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndX509Certificate(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenEndX509Data	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenEndX509Data(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenKeyInfo	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenKeyInfo(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenNamedCurve	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenNamedCurve(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenObject	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenObject(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenProfile	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenProfile(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenPublicKey	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenPublicKey(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenRole	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenRole(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenSignatureProperties	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenSignatureProperties(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenTargetRestriction	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenTargetRestriction(SignatureData &signatureData)$/;"	f	class:ValidationCore::SignatureReader
tokenX509Certificate	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenX509Certificate(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
tokenX509Data	./vcore/vcore/SignatureReader.cpp	/^void SignatureReader::tokenX509Data(SignatureData &)$/;"	f	class:ValidationCore::SignatureReader
type	./vcore/orig/cert-service.h	/^	char type[4];$/;"	m	struct:__anon25
type	./vcore/orig/cert-service.h	/^	char type[4];$/;"	m	struct:__anon26
type	./vcore/vcore/SaxReader.cpp	/^SaxReader::NodeType SaxReader::type()$/;"	f	class:ValidationCore::SaxReader
typeToString	./vcore/vcore/CertStoreType.cpp	/^std::string Set::typeToString() const$/;"	f	class:ValidationCore::CertStoreId::Set
unique_filename	./vcore/vcore/pkcs12.cpp	/^static int unique_filename(char **filepath)$/;"	f	file:
update_ca_certificate_file	./vcore/server/src/cert-server-logic.c	/^int update_ca_certificate_file(sqlite3 *db_handle, char *certBuffer, size_t certLength)$/;"	f
validPeriod	./vcore/orig/cert-service.h	/^	cert_svc_validity_fld_data validPeriod;$/;"	m	struct:__anon23
validate	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::Result XmlSec::validate(XmlSecContext *context)$/;"	f	class:ValidationCore::XmlSec
validateFile	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::Result XmlSec::validateFile(XmlSecContext *context,$/;"	f	class:ValidationCore::XmlSec
validateNoHash	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::Result XmlSec::validateNoHash(XmlSecContext *context)$/;"	f	class:ValidationCore::XmlSec
validatePartialHash	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::Result XmlSec::validatePartialHash(XmlSecContext *context)$/;"	f	class:ValidationCore::XmlSec
validationTime	./vcore/vcore/XmlsecAdapter.h	/^        time_t validationTime;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
validatorErrorToString	./tests/vcore/test-common.cpp	/^const char *validatorErrorToString(ValidationCore::SignatureValidator::Result error)$/;"	f
value	./vcore/vcore/SaxReader.cpp	/^std::string SaxReader::value()$/;"	f	class:ValidationCore::SaxReader
vcore_client_check_alias_exist_in_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_check_alias_exist_in_store(CertStoreType storeType, const char* alias, int *isUnique) {$/;"	f
vcore_client_delete_certificate_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_delete_certificate_from_store(CertStoreType storeType, const char* gname) {$/;"	f
vcore_client_get_certificate_alias_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_certificate_alias_from_store(CertStoreType storeType, const char *gname, char **alias)$/;"	f
vcore_client_get_certificate_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_certificate_from_store(CertStoreType storeType, const char* gname, char** certData, size_t* certSize, CertType certType) {$/;"	f
vcore_client_get_certificate_list_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_certificate_list_from_store(CertStoreType storeType, int is_root_app, $/;"	f
vcore_client_get_certificate_status_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_certificate_status_from_store(CertStoreType storeType, const char* gname, CertStatus *status) {$/;"	f
vcore_client_get_end_user_certificate_list_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_end_user_certificate_list_from_store(CertStoreType storeType,  $/;"	f
vcore_client_get_root_certificate_list_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_get_root_certificate_list_from_store(CertStoreType storeType,  $/;"	f
vcore_client_install_certificate_to_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_install_certificate_to_store($/;"	f
vcore_client_load_certificates_from_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_load_certificates_from_store(CertStoreType storeType, const char *gname, char ***certs, size_t *ncerts)$/;"	f
vcore_client_set_certificate_status_to_store	./vcore/vcore/cert-svc-client.c	/^int vcore_client_set_certificate_status_to_store(CertStoreType storeType, int is_root_app, const char* gname, CertStatus status) {$/;"	f
verify	./vcore/vcore/api.cpp	/^    inline int verify($/;"	f	class:__anon11::CertSvcInstanceImpl
verify_cert_details	./vcore/vcore/pkcs12.cpp	/^int verify_cert_details(X509** cert, STACK_OF(X509) **certv)$/;"	f
version	./vcore/orig/cert-service.h	/^	unsigned int version;$/;"	m	struct:__anon23
vinstance	./tests/capi/main.cpp	/^CertSvcInstance vinstance;$/;"	v
vinstance	./tests/pkcs12/pkcs12_test.cpp	/^CertSvcInstance vinstance;$/;"	v
vpn	./etc/cert_svc_store_db.sql	/^CREATE TABLE vpn ($/;"	t
vpn.associated_gname	./etc/cert_svc_store_db.sql	/^    private_key_gname   TEXT,$/;"	F
vpn.common_name	./etc/cert_svc_store_db.sql	/^    gname               TEXT PRIMARY KEY not null,$/;"	F
vpn.enabled	./etc/cert_svc_store_db.sql	/^    is_root_cert        INT,$/;"	F
vpn.gname	./etc/cert_svc_store_db.sql	/^CREATE TABLE vpn ($/;"	F
vpn.is_root_app_enabled	./etc/cert_svc_store_db.sql	/^    enabled             INT not null,$/;"	F
vpn.is_root_cert	./etc/cert_svc_store_db.sql	/^    associated_gname    TEXT,$/;"	F
vpn.private_key_gname	./etc/cert_svc_store_db.sql	/^    common_name         TEXT not null,$/;"	F
warning	./vcore/dpl/log/src/dlog_log_provider.cpp	/^void warning(const char *tag, const char *msg)$/;"	f	namespace:VcoreDPL::Log::__anon18
whiteCharacter	./vcore/vcore/Base64.cpp	/^static bool whiteCharacter(char a)$/;"	f	namespace:ValidationCore
widget_negative_certificate_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_negative_certificate_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed_negative_certificate\/";$/;"	m	class:TestData	file:
widget_negative_hash_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_negative_hash_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed_negative_hash\/";$/;"	m	class:TestData	file:
widget_negative_signature_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_negative_signature_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed_negative_signature\/";$/;"	m	class:TestData	file:
widget_partner_operator_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_partner_operator_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed_partner_operator\/";$/;"	m	class:TestData	file:
widget_partner_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_partner_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed_partner\/";$/;"	m	class:TestData	file:
widget_path	./tests/vcore/test-common.cpp	/^const std::string TestData::widget_path = std::string(TESTAPP_RES_DIR) + "vcore_widget_uncompressed\/";$/;"	m	class:TestData	file:
wifi	./etc/cert_svc_store_db.sql	/^CREATE TABLE wifi ($/;"	t
wifi.associated_gname	./etc/cert_svc_store_db.sql	/^    private_key_gname   TEXT,$/;"	F
wifi.common_name	./etc/cert_svc_store_db.sql	/^    gname               TEXT PRIMARY KEY not null,$/;"	F
wifi.enabled	./etc/cert_svc_store_db.sql	/^    is_root_cert        INT,$/;"	F
wifi.gname	./etc/cert_svc_store_db.sql	/^CREATE TABLE wifi ($/;"	F
wifi.is_root_app_enabled	./etc/cert_svc_store_db.sql	/^    enabled             INT not null,$/;"	F
wifi.is_root_cert	./etc/cert_svc_store_db.sql	/^    associated_gname    TEXT,$/;"	F
wifi.private_key_gname	./etc/cert_svc_store_db.sql	/^    common_name         TEXT not null,$/;"	F
workingDirectory	./vcore/vcore/XmlsecAdapter.h	/^        std::string workingDirectory;$/;"	m	struct:ValidationCore::XmlSec::XmlSecContext
wrapper_certsvc_string_new	./tests/pkcs12/new_test_cases.cpp	/^static CertSvcString wrapper_certsvc_string_new(const char *cStr)$/;"	f	file:
writeHelp	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::Status PipeWrapper::writeHelp(const void *buffer, int size)$/;"	f	class:VcoreDPL::Test::PipeWrapper
write_to_ca_cert_crt_file	./vcore/server/src/cert-server-logic.c	/^int write_to_ca_cert_crt_file(const char *mode_of_writing, const char *certBuffer, size_t certLength)$/;"	f
write_to_file	./vcore/server/src/cert-server-logic.c	/^int write_to_file(const char *fileName, const char *mode_of_writing, const char *certBuffer, size_t certLength)$/;"	f
~AbstractInput	./tests/dpl/include/dpl/abstract_input.h	/^    virtual ~AbstractInput() {}$/;"	f	class:VcoreDPL::AbstractInput
~AbstractInputOutput	./tests/dpl/include/dpl/abstract_input_output.h	/^    virtual ~AbstractInputOutput() {}$/;"	f	class:VcoreDPL::AbstractInputOutput
~AbstractInputParser	./tests/dpl/include/dpl/test/abstract_input_parser.h	/^    virtual ~AbstractInputParser() {}$/;"	f	class:VcoreDPL::AbstractInputParser
~AbstractInputReader	./tests/dpl/include/dpl/test/abstract_input_reader.h	/^    virtual ~AbstractInputReader() {}$/;"	f	class:VcoreDPL::AbstractInputReader
~AbstractInputTokenizer	./tests/dpl/include/dpl/test/abstract_input_tokenizer.h	/^    virtual ~AbstractInputTokenizer() {}$/;"	f	class:VcoreDPL::AbstractInputTokenizer
~AbstractLogProvider	./vcore/dpl/log/include/dpl/log/abstract_log_provider.h	/^    virtual ~AbstractLogProvider() {}$/;"	f	class:VcoreDPL::Log::AbstractLogProvider
~AbstractOutput	./tests/dpl/include/dpl/abstract_output.h	/^    virtual ~AbstractOutput() {}$/;"	f	class:VcoreDPL::AbstractOutput
~AutoPtr	./vcore/vcore/ValidatorCommon.h	/^    ~AutoPtr()$/;"	f	class:ValidationCore::AutoPtr
~Base64Decoder	./vcore/vcore/Base64.h	/^    ~Base64Decoder() {}$/;"	f	class:ValidationCore::Base64Decoder
~Base64Encoder	./vcore/vcore/Base64.cpp	/^Base64Encoder::~Base64Encoder()$/;"	f	class:ValidationCore::Base64Encoder
~BinaryQueue	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::~BinaryQueue()$/;"	f	class:VcoreDPL::BinaryQueue
~Bucket	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::Bucket::~Bucket()$/;"	f	class:VcoreDPL::BinaryQueue::Bucket
~BucketVisitor	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::BucketVisitor::~BucketVisitor()$/;"	f	class:VcoreDPL::BinaryQueue::BucketVisitor
~BucketVisitorCall	./tests/dpl/src/binary_queue.cpp	/^BinaryQueue::BucketVisitorCall::~BucketVisitorCall()$/;"	f	class:VcoreDPL::BinaryQueue::BucketVisitorCall
~CertSvcInstanceImpl	./vcore/vcore/api.cpp	/^    ~CertSvcInstanceImpl(){$/;"	f	class:__anon11::CertSvcInstanceImpl
~Certificate	./vcore/vcore/Certificate.cpp	/^Certificate::~Certificate()$/;"	f	class:ValidationCore::Certificate
~CertificateIdentifier	./vcore/vcore/CertificateIdentifier.h	/^    ~CertificateIdentifier()$/;"	f	class:ValidationCore::CertificateIdentifier
~CertificateLoader	./vcore/vcore/CertificateLoader.h	/^    virtual ~CertificateLoader()$/;"	f	class:ValidationCore::CertificateLoader
~CertificateLoaderComparator	./vcore/vcore/CertificateLoader.h	/^        virtual ~CertificateLoaderComparator()$/;"	f	class:ValidationCore::CertificateLoader::CertificateLoaderComparator
~CryptoInit	./vcore/vcore/CryptoInit.cpp	/^CryptoInit::~CryptoInit()$/;"	f	class:ValidationCore::CryptoInit
~DLOGLogProvider	./vcore/dpl/log/src/dlog_log_provider.cpp	/^DLOGLogProvider::~DLOGLogProvider()$/;"	f	class:VcoreDPL::Log::DLOGLogProvider
~Exception	./tests/dpl/include/dpl/exception.h	/^    virtual ~Exception() throw()$/;"	f	class:VcoreDPL::Exception
~Exception	./vcore/dpl/core/include/dpl/exception.h	/^    virtual ~Exception() throw()$/;"	f	class:VcoreDPL::Exception
~Exception	./vcore/vcore/exception.h	/^    virtual ~Exception() throw()$/;"	f	class:ValidationCore::Exception
~Impl	./vcore/vcore/ReferenceValidator.cpp	/^    virtual ~Impl(){}$/;"	f	class:ValidationCore::ReferenceValidator::Impl
~Impl	./vcore/vcore/SignatureFinder.cpp	/^    virtual ~Impl(){}$/;"	f	class:ValidationCore::SignatureFinder::Impl
~JournalLogProvider	./vcore/dpl/log/src/journal_log_provider.cpp	/^JournalLogProvider::~JournalLogProvider()$/;"	f	class:VcoreDPL::Log::JournalLogProvider
~LogSystem	./vcore/dpl/log/src/log.cpp	/^LogSystem::~LogSystem()$/;"	f	class:VcoreDPL::Log::LogSystem
~Noncopyable	./tests/dpl/src/noncopyable.cpp	/^Noncopyable::~Noncopyable()$/;"	f	class:VcoreDPL::Noncopyable
~Noncopyable	./vcore/dpl/core/src/noncopyable.cpp	/^Noncopyable::~Noncopyable()$/;"	f	class:VcoreDPL::Noncopyable
~Ocsp	./vcore/vcore/Ocsp.cpp	/^Ocsp::~Ocsp()$/;"	f	class:ValidationCore::Ocsp
~OldStyleLogProvider	./vcore/dpl/log/include/dpl/log/old_style_log_provider.h	/^    virtual ~OldStyleLogProvider() {}$/;"	f	class:VcoreDPL::Log::OldStyleLogProvider
~ParserSchema	./vcore/vcore/ParserSchema.h	/^    virtual ~ParserSchema() {}$/;"	f	class:ValidationCore::ParserSchema
~PipeWrapper	./tests/dpl/src/test_runner_child.cpp	/^PipeWrapper::~PipeWrapper()$/;"	f	class:VcoreDPL::Test::PipeWrapper
~ReferenceValidator	./vcore/vcore/ReferenceValidator.cpp	/^ReferenceValidator::~ReferenceValidator(){$/;"	f	class:ValidationCore::ReferenceValidator
~SaxReader	./vcore/vcore/SaxReader.cpp	/^SaxReader::~SaxReader()$/;"	f	class:ValidationCore::SaxReader
~ScopedResource	./tests/dpl/include/dpl/scoped_resource.h	/^    ~ScopedResource()$/;"	f	class:VcoreDPL::ScopedResource
~Set	./vcore/vcore/CertStoreType.cpp	/^Set::~Set()$/;"	f	class:ValidationCore::CertStoreId::Set
~SignatureData	./vcore/vcore/SignatureData.cpp	/^SignatureData::~SignatureData()$/;"	f	class:ValidationCore::SignatureData
~SignatureFinder	./vcore/vcore/SignatureFinder.cpp	/^SignatureFinder::~SignatureFinder()$/;"	f	class:ValidationCore::SignatureFinder
~SimplePipeWrapper	./tests/dpl/src/test_runner_multiprocess.cpp	/^SimplePipeWrapper::~SimplePipeWrapper()$/;"	f	class:VcoreDPL::Test::SimplePipeWrapper
~Singleton	./tests/dpl/include/dpl/singleton.h	/^    virtual ~Singleton()$/;"	f	class:VcoreDPL::Singleton
~Singleton	./vcore/dpl/core/include/dpl/singleton.h	/^    virtual ~Singleton()$/;"	f	class:VcoreDPL::Singleton
~TestResultsCollectorBase	./tests/dpl/include/dpl/test/test_results_collector.h	/^    virtual ~TestResultsCollectorBase() {}$/;"	f	class:VcoreDPL::Test::TestResultsCollectorBase
~XmlSec	./vcore/vcore/XmlsecAdapter.cpp	/^XmlSec::~XmlSec()$/;"	f	class:ValidationCore::XmlSec

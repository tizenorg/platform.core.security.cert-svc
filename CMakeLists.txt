CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(cert-svc)

INCLUDE(FindPkgConfig)

SET(SO_VERSION 1)
SET(VERSION "${SO_VERSION}.0.0")

# compiler options
SET(GC_SECTIONS_FLAGS         "-fdata-sections -ffunction-sections -Wl,--gc-sections")
SET(CMAKE_C_FLAGS             "${CMAKE_C_FLAGS} ${GC_SECTIONS_FLAGS}")
SET(CMAKE_CXX_FLAGS           "${CMAKE_CXX_FLAGS} ${GC_SECTIONS_FLAGS}")
SET(CMAKE_C_FLAGS_RELEASE     "-g -O2")
SET(CMAKE_CXX_FLAGS_RELEASE   "-g -std=c++0x -O2")
SET(CMAKE_C_FLAGS_DEBUG       "-g -O0")
SET(CMAKE_CXX_FLAGS_DEBUG     "-g -std=c++0x -O0")
SET(CMAKE_C_FLAGS_CCOV        "-g -O2 --coverage")
SET(CMAKE_CXX_FLAGS_CCOV      "-g -std=c++0x -O2 --coverage")
SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--as-needed")
SET(CMAKE_EXE_LINKER_FLAGS    "-Wl,--as-needed")
SET(CMAKE_SKIP_RPATH          "TRUE")

IF (CMAKE_BUILD_TYPE MATCHES "DEBUG")
ADD_DEFINITIONS("-DTIZEN_DEBUG_ENABLE")
ADD_DEFINITIONS("-DBUILD_TYPE_DEBUG")
ADD_DEFINITIONS("-DDPL_LOGS_ENABLED")
ENDIF (CMAKE_BUILD_TYPE MATCHES "DEBUG")

IF(DEFINED TIZEN_FEAT_CERTSVC_OCSP_CRL)
MESSAGE("TIZEN_FEAT_CERT_SVC_OCSP_CRL ENABLED")
ADD_DEFINITIONS("-DTIZEN_FEATURE_CERT_SVC_OCSP_CRL")
ENDIF(DEFINED TIZEN_FEAT_CERTSVC_OCSP_CRL)

SET(TARGET_CERT_SVC_LIB "cert-svc")
SET(TARGET_VCORE_LIB "cert-svc-vcore")
SET(TARGET_CERT_SERVER "cert-server")

# test binaries
SET(TARGET_VCOREC_TEST "cert-svc-tests-capi")
SET(TARGET_TEST_CERT_SVC_OGIG "cert-svc-tests-orig")
SET(TARGET_PKCS12_TEST "cert-svc-tests-pkcs12")
SET(TARGET_VCORE_TEST "cert-svc-tests-vcore")

ADD_DEFINITIONS("-DCERTSVC_SYSTEM_STORE_DB=\"${TZ_SYS_SHARE}/cert-svc/dbspace/certs-meta.db\"")
ADD_DEFINITIONS("-DCERTSVC_VCORE_DB=\"${TZ_SYS_DB}/.cert_svc_vcore.db\"")
ADD_DEFINITIONS("-DCERTSVC_CRT_FILE_PATH=\"${TZ_SYS_SHARE}/cert-svc/ca-certificate.crt\"")
ADD_DEFINITIONS("-DFINGERPRINT_LIST_PATH=\"${TZ_SYS_SHARE}/ca-certificates/fingerprint/fingerprint_list.xml\"")
ADD_DEFINITIONS("-DFINGERPRINT_LIST_SCHEMA_PATH=\"${TZ_SYS_SHARE}/ca-certificates/fingerprint/fingerprint_list.xsd\"")
ADD_DEFINITIONS("-DROOT_CA_CERTS_DIR=\"${TZ_SYS_SHARE}/ca-certificates/\"")

ADD_DEFINITIONS("-DCERTSVC_DIR=\"${TZ_SYS_SHARE}/cert-svc/certs/\"")
ADD_DEFINITIONS("-DCERTSVC_PKCS12_STORAGE_DIR=\"${TZ_SYS_SHARE}/cert-svc/pkcs12/\"")
ADD_DEFINITIONS("-DSYSTEM_CERT_DIR=\"${TZ_SYS_ETC}/ssl/certs/\"")
ADD_DEFINITIONS("-DCERTSVC_SSL_CERTS_DIR=\"${TZ_SYS_SHARE}/cert-svc/certs/ssl/\"")

CONFIGURE_FILE(cert-svc.pc.in cert-svc.pc @ONLY)
CONFIGURE_FILE(cert-svc-vcore.pc.in cert-svc-vcore.pc @ONLY)

INSTALL(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/cert-svc.pc
    ${CMAKE_CURRENT_BINARY_DIR}/cert-svc-vcore.pc
    DESTINATION ${LIBDIR}/pkgconfig
)

INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/include/cert-service.h DESTINATION ${INCLUDEDIR})

ADD_SUBDIRECTORY(systemd)
ADD_SUBDIRECTORY(srcs)
ADD_SUBDIRECTORY(vcore)
ADD_SUBDIRECTORY(etc)
IF (DEFINED CERTSVC_TEST_BUILD)
ADD_SUBDIRECTORY(tests)
ENDIF (DEFINED CERTSVC_TEST_BUILD)
